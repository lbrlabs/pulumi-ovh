{
    "name": "ovh",
    "displayName": "OVH",
    "description": "A Pulumi package for creating and managing OVH cloud resources.",
    "keywords": [
        "pulumi",
        "ovh",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`ovh` Terraform Provider](https://github.com/ovh/terraform-provider-ovh).",
    "repository": "https://github.com/lbrlabs/pulumi-ovh",
    "logoUrl": "https://raw.githubusercontent.com/lbrlabs/pulumi-ovh/main/assets/ovh.svg",
    "pluginDownloadURL": "github://api.github.com/lbrlabs",
    "publisher": "lbrlabs",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "Lbrlabs.PulumiPackage"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/lbrlabs/pulumi-ovh/sdk/go/ovh"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing OVH cloud resources.",
            "packageName": "@lbrlabs/pulumi-ovh",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ovh/terraform-provider-ovh)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-ovh` repo](https://github.com/lbrlabs/pulumi-ovh/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-ovh` repo](https://github.com/ovh/terraform-provider-ovh/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "lbrlabs_pulumi_ovh",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ovh/terraform-provider-ovh)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-ovh` repo](https://github.com/lbrlabs/pulumi-ovh/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-ovh` repo](https://github.com/ovh/terraform-provider-ovh/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_KEY"
                    ]
                }
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_SECRET"
                    ]
                }
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer key.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_CONSUMER_KEY"
                    ]
                },
                "secret": true
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\").\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_ENDPOINT"
                    ]
                }
            }
        },
        "defaults": [
            "endpoint"
        ]
    },
    "types": {
        "ovh:CloudProject/ContainerRegistryPlan:ContainerRegistryPlan": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Plan code from the catalog\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlanFeature:ContainerRegistryPlanFeature"
                    },
                    "description": "Features of the plan\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Plan ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlanRegistryLimit:ContainerRegistryPlanRegistryLimit"
                    },
                    "description": "Container registry limits\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "code",
                        "createdAt",
                        "features",
                        "id",
                        "name",
                        "registryLimits",
                        "updatedAt"
                    ]
                }
            }
        },
        "ovh:CloudProject/ContainerRegistryPlanFeature:ContainerRegistryPlanFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "vulnerability"
                    ]
                }
            }
        },
        "ovh:CloudProject/ContainerRegistryPlanRegistryLimit:ContainerRegistryPlanRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "imageStorage",
                        "parallelRequest"
                    ]
                }
            }
        },
        "ovh:CloudProject/DatabaseEndpoint:DatabaseEndpoint": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Type of component the URI relates to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path of the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "string",
                    "description": "Scheme used to generate the URI.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Defines whether the endpoint uses SSL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL mode used to connect to the service if the SSL is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "description": "URI of the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "domain",
                        "path",
                        "port",
                        "scheme",
                        "ssl",
                        "sslMode",
                        "uri"
                    ]
                }
            }
        },
        "ovh:CloudProject/DatabaseNode:DatabaseNode": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "description": "Private network id in which the node should be deployed. It's the regional openstackId of the private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Public cloud region in which the node should be deployed.\nEx: \"GRA'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "Private subnet ID in which the node is.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "region"
            ]
        },
        "ovh:CloudProject/KubeCustomization:KubeCustomization": {
            "properties": {
                "apiserver": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiserver"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver": {
            "properties": {
                "admissionplugins": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserverAdmissionplugins:KubeCustomizationApiserverAdmissionplugins",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "admissionplugins"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeCustomizationApiserverAdmissionplugins:KubeCustomizationApiserverAdmissionplugins": {
            "properties": {
                "disableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disableds",
                        "enableds"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate": {
            "properties": {
                "metadata": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplateMetadata:KubeNodePoolTemplateMetadata",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spec": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplateSpec:KubeNodePoolTemplateSpec",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/KubeNodePoolTemplateMetadata:KubeNodePoolTemplateMetadata": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/KubeNodePoolTemplateSpec:KubeNodePoolTemplateSpec": {
            "properties": {
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unschedulable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration": {
            "properties": {
                "defaultVrackGateway": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateNetworkRoutingAsDefault": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultVrackGateway",
                "privateNetworkRoutingAsDefault"
            ]
        },
        "ovh:CloudProject/NetworkPrivateRegionsAttribute:NetworkPrivateRegionsAttribute": {
            "properties": {
                "openstackid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "openstackid",
                        "region",
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/NetworkPrivateRegionsStatus:NetworkPrivateRegionsStatus": {
            "properties": {
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "region",
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/NetworkPrivateSubnetIpPool:NetworkPrivateSubnetIpPool": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dhcp",
                        "end",
                        "network",
                        "region",
                        "start"
                    ]
                }
            }
        },
        "ovh:CloudProject/ProjectOrder:ProjectOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectOrderDetail:ProjectOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id, the same as the `id`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:CloudProject/ProjectOrderDetail:ProjectOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:CloudProject/ProjectPlan:ProjectPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanConfiguration:ProjectPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:CloudProject/ProjectPlanConfiguration:ProjectPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:CloudProject/ProjectPlanOption:ProjectPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanOptionConfiguration:ProjectPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:CloudProject/ProjectPlanOptionConfiguration:ProjectPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:CloudProject/UserRole:UserRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "id of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "name of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of permissions associated with the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "permissions"
                    ]
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerFilterFeature:getCapabilitiesContainerFilterFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "vulnerability"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerFilterRegistryLimit:getCapabilitiesContainerFilterRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "imageStorage",
                "parallelRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResult:getCapabilitiesContainerRegistryResult": {
            "properties": {
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResultPlan:getCapabilitiesContainerRegistryResultPlan"
                    },
                    "description": "Available plans in the region\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regionName": {
                    "type": "string",
                    "description": "The region name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "plans",
                "regionName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResultPlan:getCapabilitiesContainerRegistryResultPlan": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Plan code from the catalog\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanFeature:getCapabilitiesContainerRegistryResultPlanFeature"
                    },
                    "description": "Features of the plan\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Plan ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Plan name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanRegistryLimit:getCapabilitiesContainerRegistryResultPlanRegistryLimit"
                    },
                    "description": "Container registry limits\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Plan last update date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code",
                "createdAt",
                "features",
                "id",
                "name",
                "registryLimits",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanFeature:getCapabilitiesContainerRegistryResultPlanFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "vulnerability"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanRegistryLimit:getCapabilitiesContainerRegistryResultPlanRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "imageStorage",
                "parallelRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getContainerRegistriesResult:getContainerRegistriesResult": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Registry creation date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Registry ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID of your registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "description": "Current size of the registry (bytes)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Registry status\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Access url of the registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "Version of your registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "name",
                "projectId",
                "region",
                "size",
                "status",
                "updatedAt",
                "url",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getContainerRegistryUsersResult:getContainerRegistryUsersResult": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User email\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "User ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "User name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "email",
                "id",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomization:getKubeCustomization": {
            "properties": {
                "apiserver": {
                    "$ref": "#/types/ovh:CloudProject/getKubeCustomizationApiserver:getKubeCustomizationApiserver",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiserver"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomizationApiserver:getKubeCustomizationApiserver": {
            "properties": {
                "admissionplugins": {
                    "$ref": "#/types/ovh:CloudProject/getKubeCustomizationApiserverAdmissionplugins:getKubeCustomizationApiserverAdmissionplugins",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "admissionplugins"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomizationApiserverAdmissionplugins:getKubeCustomizationApiserverAdmissionplugins": {
            "properties": {
                "disableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "disableds",
                "enableds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeNodePoolNodesNode:getKubeNodePoolNodesNode": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Creation date.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployedAt": {
                    "type": "string",
                    "description": "(Optional) Date of the effective deployment.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "ID of the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceId": {
                    "type": "string",
                    "description": "Openstack ID of the underlying VM of the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isUpToDate": {
                    "type": "boolean",
                    "description": "Is the node in the target version of the cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the node pool from which we want the nodes.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodePoolId": {
                    "type": "string",
                    "description": "Managed kubernetes node pool ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "Public cloud project ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Current status.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "Version in which the node is.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "deployedAt",
                "flavor",
                "id",
                "instanceId",
                "isUpToDate",
                "name",
                "nodePoolId",
                "projectId",
                "status",
                "updatedAt",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeNodePoolTemplate:getKubeNodePoolTemplate": {
            "properties": {
                "metadata": {
                    "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplateMetadata:getKubeNodePoolTemplateMetadata",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spec": {
                    "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplateSpec:getKubeNodePoolTemplateSpec",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodePoolTemplateMetadata:getKubeNodePoolTemplateMetadata": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodePoolTemplateSpec:getKubeNodePoolTemplateSpec": {
            "properties": {
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unschedulable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodesNode:getKubeNodesNode": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Creation date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deployedAt": {
                    "type": "string",
                    "description": "(Optional) Date of the effective deployment\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "ID of the node\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanceId": {
                    "type": "string",
                    "description": "Openstack ID of the underlying VM of the node\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isUpToDate": {
                    "type": "boolean",
                    "description": "Is the node in the target version of the cluster\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the node\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodePoolId": {
                    "type": "string",
                    "description": "Managed kubernetes node pool ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "Public cloud project ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Current status\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "Version in which the node is\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "deployedAt",
                "flavor",
                "id",
                "instanceId",
                "isUpToDate",
                "name",
                "nodePoolId",
                "projectId",
                "status",
                "updatedAt",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getOpenSearchUserAcl:getOpenSearchUserAcl": {
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the ACL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permission": {
                    "type": "string",
                    "description": "Permission of the ACL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "pattern",
                "permission"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRegionService:getRegionService": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the region associated with the public cloud\nproject.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getUserRole:getUserRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "id of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "name of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of permissions associated with the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "permissions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getUsersUser:getUsersUser": {
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "the date the user was created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "description of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getUsersUserRole:getUsersUserRole"
                    },
                    "description": "A list of roles associated with the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the user. should be normally set to 'ok'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of a public cloud project's user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "the username generated for the user. This username can be used with\nthe Openstack API.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "creationDate",
                "description",
                "roles",
                "status",
                "userId",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getUsersUserRole:getUsersUserRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "id of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "name of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of permissions associated with the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "permissions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl": {
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the ACL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permission": {
                    "type": "string",
                    "description": "Permission of the ACL\nAvailable permission:\n* `admin`\n* `read`\n* `write`\n* `readwrite`\n* `deny`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "pattern",
                "permission"
            ]
        },
        "ovh:CloudProjectDatabase/getCapabilitiesEngine:getCapabilitiesEngine": {
            "properties": {
                "defaultVersion": {
                    "type": "string",
                    "description": "Default version used for the engine.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the plan.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the plan.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSL modes for this engine.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Versions available for this engine.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultVersion",
                "description",
                "name",
                "sslModes",
                "versions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesFlavor:getCapabilitiesFlavor": {
            "properties": {
                "core": {
                    "type": "integer",
                    "description": "Flavor core number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memory": {
                    "type": "integer",
                    "description": "Flavor ram size in GB.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the plan.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storage": {
                    "type": "integer",
                    "description": "Flavor disk size in GB.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "core",
                "memory",
                "name",
                "storage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesOption:getCapabilitiesOption": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the plan.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of the option.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesPlan:getCapabilitiesPlan": {
            "properties": {
                "backupRetention": {
                    "type": "string",
                    "description": "Automatic backup retention duration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the plan.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the plan.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "backupRetention",
                "description",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseEndpoint:getDatabaseEndpoint": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Type of component the URI relates to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path of the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "string",
                    "description": "Scheme used to generate the URI.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Defines whether the endpoint uses SSL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL mode used to connect to the service if the SSL is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "description": "URI of the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "domain",
                "path",
                "port",
                "scheme",
                "ssl",
                "sslMode",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseNode:getDatabaseNode": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "description": "Private network id in which the node should be deployed. It's the regional openstackId of the private network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Public cloud region in which the node should be deployed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetId": {
                    "type": "string",
                    "description": "Private subnet ID in which the node is.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "networkId",
                "region",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration": {
            "properties": {
                "flowgger": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfigurationFlowgger:LogsInputConfigurationFlowgger",
                    "description": "Flowgger configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logstash": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfigurationLogstash:LogsInputConfigurationLogstash",
                    "description": "Logstash configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:Dbaas/LogsInputConfigurationFlowgger:LogsInputConfigurationFlowgger": {
            "properties": {
                "logFormat": {
                    "type": "string",
                    "description": "Type of format to decode. One of \"RFC5424\", \"LTSV\", \"GELF\", \"CAPNP\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFraming": {
                    "type": "string",
                    "description": "Indicates how messages are delimited. One of \"LINE\", \"NUL\", \"SYSLEN\", \"CAPNP\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logFormat",
                "logFraming"
            ]
        },
        "ovh:Dbaas/LogsInputConfigurationLogstash:LogsInputConfigurationLogstash": {
            "properties": {
                "filterSection": {
                    "type": "string",
                    "description": "The filter section of logstash.conf\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inputSection": {
                    "type": "string",
                    "description": "The filter section of logstash.conf\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "patternSection": {
                    "type": "string",
                    "description": "The list of customs Grok patterns\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "inputSection"
            ]
        },
        "ovh:Dedicated/ServerInstallTaskDetails:ServerInstallTaskDetails": {
            "properties": {
                "changeLog": {
                    "type": "string",
                    "description": "Template change log details.\n",
                    "deprecationMessage": "field is not used anymore",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostname": {
                    "type": "string",
                    "description": "Set up the server using the provided hostname instead of the default hostname.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "diskGroupId": {
                    "type": "integer",
                    "description": "Disk group id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "installRtm": {
                    "type": "boolean",
                    "description": "set to true to install RTM.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "installSqlServer": {
                    "type": "boolean",
                    "description": "set to true to install sql server (Windows template only).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "language": {
                    "type": "string",
                    "description": "language.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "noRaid": {
                    "type": "boolean",
                    "description": "set to true to disable RAID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "postInstallationScriptLink": {
                    "type": "string",
                    "description": "Indicate the URL where your postinstall customisation script is located.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "postInstallationScriptReturn": {
                    "type": "string",
                    "description": "Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "resetHwRaid": {
                    "type": "boolean",
                    "description": "set to true to make a hardware raid reset.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "softRaidDevices": {
                    "type": "integer",
                    "description": "soft raid devices.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "sshKeyName": {
                    "type": "string",
                    "description": "Name of the ssh key that should be installed. Password login will be disabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "useDistribKernel": {
                    "type": "boolean",
                    "description": "Use the distribution's native kernel instead of the recommended OVHcloud Kernel.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "useSpla": {
                    "type": "boolean",
                    "description": "set to true to use SPLA.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface": {
            "properties": {
                "macs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of mac addresses to bind together.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Type of bonding to create.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "macs",
                "type"
            ]
        },
        "ovh:Domain/ZoneOrder:ZoneOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZoneOrderDetail:ZoneOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Domain/ZoneOrderDetail:ZoneOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Domain/ZonePlan:ZonePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanConfiguration:ZonePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Domain/ZonePlanConfiguration:ZonePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Domain/ZonePlanOption:ZonePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanOptionConfiguration:ZonePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Domain/ZonePlanOptionConfiguration:ZonePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrderDetail:PrivateDatabaseOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Hosting/PrivateDatabaseOrderDetail:PrivateDatabaseOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Custom description on your privatedatabase order.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanConfiguration:PrivateDatabasePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Hosting/PrivateDatabasePlanConfiguration:PrivateDatabasePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOptionConfiguration:PrivateDatabasePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Hosting/PrivateDatabasePlanOptionConfiguration:PrivateDatabasePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Hosting/getPrivateDatabaseDbUser:getPrivateDatabaseDbUser": {
            "properties": {
                "grantType": {
                    "type": "string",
                    "description": "Grant of this user for this database\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userName": {
                    "type": "string",
                    "description": "User's name granted on this database\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "grantType",
                "userName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Hosting/getPrivateDatabaseUserDatabase:getPrivateDatabaseUserDatabase": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database's name linked to this user\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grantType": {
                    "type": "string",
                    "description": "Grant of this user for this database\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "databaseName",
                "grantType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Ip/IpServiceOrder:IpServiceOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceOrderDetail:IpServiceOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Ip/IpServiceOrderDetail:IpServiceOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Ip/IpServicePlan:IpServicePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanConfiguration:IpServicePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Ip/IpServicePlanConfiguration:IpServicePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Ip/IpServicePlanOption:IpServicePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanOptionConfiguration:IpServicePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Ip/IpServicePlanOptionConfiguration:IpServicePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Ip/IpServiceRoutedTo:IpServiceRoutedTo": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "Service where ip is routed to\n* `service_name`: service name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "serviceName"
                    ]
                }
            }
        },
        "ovh:Ip/getServiceRoutedTo:getServiceRoutedTo": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe": {
            "properties": {
                "forceSsl": {
                    "type": "boolean",
                    "description": "Force use of SSL (TLS)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "probe interval, Value between 30 and 3600 seconds, default 30\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "What to match `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "description": "Negate probe result\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern to match against `match`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to receive traffic on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "URL for HTTP probe type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match",
                        "method",
                        "pattern",
                        "port",
                        "type",
                        "url"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction": {
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "HTTP status code for \"redirect\" and \"reject\" actions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Farm ID for \"farm\" action type or URL template for \"redirect\" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Action to trigger if all the rules of this route matches\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ovh:IpLoadBalancing/HttpRouteRule:HttpRouteRule": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\" \"/ipLoadbalancing/{serviceName}/route/availableRules\" for a list of available rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"availableRules\"\n* `negate`- Invert the matching operator effect\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Id of your rule\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "field",
                        "match",
                        "negate",
                        "pattern",
                        "ruleId",
                        "subField"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrderDetail:LoadBalancerOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerOrderDetail:LoadBalancerOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerOrderableZone:LoadBalancerOrderableZone": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The zone three letter code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "planCode"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanConfiguration:LoadBalancerPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:IpLoadBalancing/LoadBalancerPlanConfiguration:LoadBalancerPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOptionConfiguration:LoadBalancerPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:IpLoadBalancing/LoadBalancerPlanOptionConfiguration:LoadBalancerPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe": {
            "properties": {
                "forceSsl": {
                    "type": "boolean",
                    "description": "Force use of SSL (TLS)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "probe interval, Value between 30 and 3600 seconds, default 30\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "What to match `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "description": "Negate probe result\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern to match against `match`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to receive traffic on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "URL for HTTP probe type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match",
                        "type"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction": {
            "properties": {
                "target": {
                    "type": "string",
                    "description": "Farm ID for \"farm\" action type, empty for others.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Action to trigger if all the rules of this route matches\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ovh:IpLoadBalancing/TcpRouteRule:TcpRouteRule": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\" \"/ipLoadbalancing/{serviceName}/route/availableRules\" for a list of available rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"availableRules\"\n* `negate`- Invert the matching operator effect\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Id of your rule\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "field",
                        "match",
                        "negate",
                        "pattern",
                        "ruleId",
                        "subField"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/getIpLoadBalancingOrderableZone:getIpLoadBalancingOrderableZone": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The zone three letter code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "The billing planCode for this zone\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "planCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Me/InstallationTemplateCustomization:InstallationTemplateCustomization": {
            "properties": {
                "changeLog": {
                    "type": "string",
                    "deprecationMessage": "field is not used anymore",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptLink": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptReturn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rating": {
                    "type": "integer",
                    "deprecationMessage": "field is not used anymore",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKeyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDistributionKernel": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:Me/getInstallationTemplateCustomization:getInstallationTemplateCustomization": {
            "properties": {
                "changeLog": {
                    "type": "string",
                    "deprecationMessage": "field is not used anymore",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptLink": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptReturn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rating": {
                    "type": "integer",
                    "deprecationMessage": "field is not used anymore",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKeyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDistributionKernel": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "changeLog",
                "customHostname",
                "postInstallationScriptLink",
                "postInstallationScriptReturn",
                "rating",
                "sshKeyName",
                "useDistributionKernel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Me/getInstallationTemplatePartitionScheme:getInstallationTemplatePartitionScheme": {
            "properties": {
                "hardwareRaids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Me/getInstallationTemplatePartitionSchemeHardwareRaid:getInstallationTemplatePartitionSchemeHardwareRaid"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "partitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Me/getInstallationTemplatePartitionSchemePartition:getInstallationTemplatePartitionSchemePartition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hardwareRaids",
                "name",
                "partitions",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Me/getInstallationTemplatePartitionSchemeHardwareRaid:getInstallationTemplatePartitionSchemeHardwareRaid": {
            "properties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "step": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "disks",
                "mode",
                "name",
                "step"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Me/getInstallationTemplatePartitionSchemePartition:getInstallationTemplatePartitionSchemePartition": {
            "properties": {
                "filesystem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mountpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "raid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filesystem",
                "mountpoint",
                "order",
                "raid",
                "size",
                "type",
                "volumeName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Me/getMeCurrency:getMeCurrency": {
            "properties": {
                "code": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "symbol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code",
                "symbol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanPrice:getCartProductOptionsPlanPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsPlanPricePrice:getCartProductOptionsPlanPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanPricePrice:getCartProductOptionsPlanPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanSelectedPrice:getCartProductOptionsPlanSelectedPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsPlanSelectedPricePrice:getCartProductOptionsPlanSelectedPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanSelectedPricePrice:getCartProductOptionsPlanSelectedPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsResult:getCartProductOptionsResult": {
            "properties": {
                "exclusive": {
                    "type": "boolean",
                    "description": "Define if options of this family are exclusive with each other\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "family": {
                    "type": "string",
                    "description": "Option family\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mandatory": {
                    "type": "boolean",
                    "description": "Define if an option of this family is mandatory\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Product offer identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsResultPrice:getCartProductOptionsResultPrice"
                    },
                    "description": "Prices of the product offer\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productName": {
                    "type": "string",
                    "description": "Name of the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productType": {
                    "type": "string",
                    "description": "Product type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "exclusive",
                "family",
                "mandatory",
                "planCode",
                "prices",
                "productName",
                "productType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsResultPrice:getCartProductOptionsResultPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsResultPricePrice:getCartProductOptionsResultPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsResultPricePrice:getCartProductOptionsResultPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanPrice:getCartProductPlanPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductPlanPricePrice:getCartProductPlanPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanPricePrice:getCartProductPlanPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanSelectedPrice:getCartProductPlanSelectedPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductPlanSelectedPricePrice:getCartProductPlanSelectedPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanSelectedPricePrice:getCartProductPlanSelectedPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductResult:getCartProductResult": {
            "properties": {
                "planCode": {
                    "type": "string",
                    "description": "Product offer identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductResultPrice:getCartProductResultPrice"
                    },
                    "description": "Prices of the product offer\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productName": {
                    "type": "string",
                    "description": "Name of the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productType": {
                    "type": "string",
                    "description": "Product type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "planCode",
                "prices",
                "productName",
                "productType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductResultPrice:getCartProductResultPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductResultPricePrice:getCartProductResultPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductResultPricePrice:getCartProductResultPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Vrack/VrackOrder:VrackOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackOrderDetail:VrackOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Vrack/VrackOrderDetail:VrackOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Vrack/VrackPlan:VrackPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanConfiguration:VrackPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Vrack/VrackPlanConfiguration:VrackPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Vrack/VrackPlanOption:VrackPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanOptionConfiguration:VrackPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Vrack/VrackPlanOptionConfiguration:VrackPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/getServerVni:getServerVni": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "VirtualNetworkInterface activation state\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "description": "VirtualNetworkInterface mode (public,vrack,vrack_aggregation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "User defined VirtualNetworkInterface name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverName": {
                    "type": "string",
                    "description": "Server bound to this VirtualNetworkInterface\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uuid": {
                    "type": "string",
                    "description": "VirtualNetworkInterface unique id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vrack": {
                    "type": "string",
                    "description": "vRack name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "mode",
                "name",
                "nics",
                "serverName",
                "uuid",
                "vrack"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the ovh package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key.\n"
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret.\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer key.\n",
                "secret": true
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\").\n"
            }
        },
        "inputProperties": {
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_KEY"
                    ]
                }
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_SECRET"
                    ]
                }
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer key.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_CONSUMER_KEY"
                    ]
                },
                "secret": true
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\").\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_ENDPOINT"
                    ]
                }
            }
        }
    },
    "resources": {
        "ovh:CloudProject/containerRegistry:ContainerRegistry": {
            "description": "Creates a container registry associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst regcap = ovh.CloudProject.getCapabilitiesContainerFilter({\n    serviceName: \"XXXXXX\",\n    planName: \"SMALL\",\n    region: \"GRA\",\n});\nconst reg = new ovh.cloudproject.ContainerRegistry(\"reg\", {\n    serviceName: regcap.then(regcap =\u003e regcap.serviceName),\n    planId: regcap.then(regcap =\u003e regcap.id),\n    region: regcap.then(regcap =\u003e regcap.region),\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nregcap = ovh.CloudProject.get_capabilities_container_filter(service_name=\"XXXXXX\",\n    plan_name=\"SMALL\",\n    region=\"GRA\")\nreg = ovh.cloud_project.ContainerRegistry(\"reg\",\n    service_name=regcap.service_name,\n    plan_id=regcap.id,\n    region=regcap.region)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var regcap = Ovh.CloudProject.GetCapabilitiesContainerFilter.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        PlanName = \"SMALL\",\n        Region = \"GRA\",\n    });\n\n    var reg = new Ovh.CloudProject.ContainerRegistry(\"reg\", new()\n    {\n        ServiceName = regcap.Apply(getCapabilitiesContainerFilterResult =\u003e getCapabilitiesContainerFilterResult.ServiceName),\n        PlanId = regcap.Apply(getCapabilitiesContainerFilterResult =\u003e getCapabilitiesContainerFilterResult.Id),\n        Region = regcap.Apply(getCapabilitiesContainerFilterResult =\u003e getCapabilitiesContainerFilterResult.Region),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tregcap, err := CloudProject.GetCapabilitiesContainerFilter(ctx, \u0026cloudproject.GetCapabilitiesContainerFilterArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tPlanName:    \"SMALL\",\n\t\t\tRegion:      \"GRA\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewContainerRegistry(ctx, \"reg\", \u0026CloudProject.ContainerRegistryArgs{\n\t\t\tServiceName: pulumi.String(regcap.ServiceName),\n\t\t\tPlanId:      pulumi.String(regcap.Id),\n\t\t\tRegion:      pulumi.String(regcap.Region),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetCapabilitiesContainerFilterArgs;\nimport com.pulumi.ovh.CloudProject.ContainerRegistry;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var regcap = CloudProjectFunctions.getCapabilitiesContainerFilter(GetCapabilitiesContainerFilterArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .planName(\"SMALL\")\n            .region(\"GRA\")\n            .build());\n\n        var reg = new ContainerRegistry(\"reg\", ContainerRegistryArgs.builder()        \n            .serviceName(regcap.applyValue(getCapabilitiesContainerFilterResult -\u003e getCapabilitiesContainerFilterResult.serviceName()))\n            .planId(regcap.applyValue(getCapabilitiesContainerFilterResult -\u003e getCapabilitiesContainerFilterResult.id()))\n            .region(regcap.applyValue(getCapabilitiesContainerFilterResult -\u003e getCapabilitiesContainerFilterResult.region()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  reg:\n    type: ovh:CloudProject:ContainerRegistry\n    properties:\n      serviceName: ${regcap.serviceName}\n      planId: ${regcap.id}\n      region: ${regcap.region}\nvariables:\n  regcap:\n    fn::invoke:\n      Function: ovh:CloudProject:getCapabilitiesContainerFilter\n      Arguments:\n        serviceName: XXXXXX\n        planName: SMALL\n        region: GRA\n```\n\n\u003e __WARNING__ You can update and migrate to a higher plan at any time but not the contrary.\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n"
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "planId": {
                    "type": "string",
                    "description": "Plan ID of the registry\n"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlan:ContainerRegistryPlan"
                    },
                    "description": "Plan of the registry\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID of your registry\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Current size of the registry (bytes)\n"
                },
                "status": {
                    "type": "string",
                    "description": "Registry status\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n"
                },
                "url": {
                    "type": "string",
                    "description": "Access url of the registry\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of your registry\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "plans",
                "planId",
                "projectId",
                "region",
                "serviceName",
                "size",
                "status",
                "updatedAt",
                "url",
                "version"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "planId": {
                    "type": "string",
                    "description": "Plan ID of the registry\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "requiredInputs": [
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistry resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Plan creation date\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Registry name\n"
                    },
                    "planId": {
                        "type": "string",
                        "description": "Plan ID of the registry\n"
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlan:ContainerRegistryPlan"
                        },
                        "description": "Plan of the registry\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID of your registry\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the registry\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Current size of the registry (bytes)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Registry status\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Registry last update date\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Access url of the registry\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of your registry\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistryUser:ContainerRegistryUser": {
            "description": "Creates a user for a container registry associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registry = ovh.CloudProject.getContainerRegistry({\n    serviceName: \"XXXXXX\",\n    registryId: \"yyyy\",\n});\nconst user = new ovh.cloudproject.ContainerRegistryUser(\"user\", {\n    serviceName: ovh_cloud_project_containerregistry.registry.service_name,\n    registryId: ovh_cloud_project_containerregistry.registry.id,\n    email: \"foo@bar.com\",\n    login: \"foobar\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nregistry = ovh.CloudProject.get_container_registry(service_name=\"XXXXXX\",\n    registry_id=\"yyyy\")\nuser = ovh.cloud_project.ContainerRegistryUser(\"user\",\n    service_name=ovh_cloud_project_containerregistry[\"registry\"][\"service_name\"],\n    registry_id=ovh_cloud_project_containerregistry[\"registry\"][\"id\"],\n    email=\"foo@bar.com\",\n    login=\"foobar\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registry = Ovh.CloudProject.GetContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegistryId = \"yyyy\",\n    });\n\n    var user = new Ovh.CloudProject.ContainerRegistryUser(\"user\", new()\n    {\n        ServiceName = ovh_cloud_project_containerregistry.Registry.Service_name,\n        RegistryId = ovh_cloud_project_containerregistry.Registry.Id,\n        Email = \"foo@bar.com\",\n        Login = \"foobar\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = CloudProject.GetContainerRegistry(ctx, \u0026cloudproject.GetContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegistryId:  \"yyyy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewContainerRegistryUser(ctx, \"user\", \u0026CloudProject.ContainerRegistryUserArgs{\n\t\t\tServiceName: pulumi.Any(ovh_cloud_project_containerregistry.Registry.Service_name),\n\t\t\tRegistryId:  pulumi.Any(ovh_cloud_project_containerregistry.Registry.Id),\n\t\t\tEmail:       pulumi.String(\"foo@bar.com\"),\n\t\t\tLogin:       pulumi.String(\"foobar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryArgs;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryUser;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registry = CloudProjectFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .registryId(\"yyyy\")\n            .build());\n\n        var user = new ContainerRegistryUser(\"user\", ContainerRegistryUserArgs.builder()        \n            .serviceName(ovh_cloud_project_containerregistry.registry().service_name())\n            .registryId(ovh_cloud_project_containerregistry.registry().id())\n            .email(\"foo@bar.com\")\n            .login(\"foobar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: ovh:CloudProject:ContainerRegistryUser\n    properties:\n      serviceName: ${ovh_cloud_project_containerregistry.registry.service_name}\n      registryId: ${ovh_cloud_project_containerregistry.registry.id}\n      email: foo@bar.com\n      login: foobar\nvariables:\n  registry:\n    fn::invoke:\n      Function: ovh:CloudProject:getContainerRegistry\n      Arguments:\n        serviceName: XXXXXX\n        registryId: yyyy\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User email\n"
                },
                "login": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) User password\n",
                    "secret": true
                },
                "registryId": {
                    "type": "string",
                    "description": "Registry ID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "user": {
                    "type": "string",
                    "description": "User name\n"
                }
            },
            "required": [
                "email",
                "login",
                "password",
                "registryId",
                "serviceName",
                "user"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "User email\n",
                    "willReplaceOnChanges": true
                },
                "login": {
                    "type": "string",
                    "description": "Registry name\n",
                    "willReplaceOnChanges": true
                },
                "registryId": {
                    "type": "string",
                    "description": "Registry ID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "email",
                "login",
                "registryId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryUser resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User email\n",
                        "willReplaceOnChanges": true
                    },
                    "login": {
                        "type": "string",
                        "description": "Registry name\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) User password\n",
                        "secret": true
                    },
                    "registryId": {
                        "type": "string",
                        "description": "Registry ID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "user": {
                        "type": "string",
                        "description": "User name\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/database:Database": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\nMinimum settings for each engine (region choice is up to the user):\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst cassandradb = new ovh.CloudProject.Database(\"cassandradb\", {\n    description: \"my-first-cassandra\",\n    engine: \"cassandra\",\n    flavor: \"db1-4\",\n    nodes: [\n        {\n            region: \"BHS\",\n        },\n        {\n            region: \"BHS\",\n        },\n        {\n            region: \"BHS\",\n        },\n    ],\n    plan: \"essential\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"4.0\",\n});\nconst kafkadb = new ovh.CloudProject.Database(\"kafkadb\", {\n    description: \"my-first-kafka\",\n    engine: \"kafka\",\n    flavor: \"db1-4\",\n    kafkaRestApi: true,\n    nodes: [\n        {\n            region: \"DE\",\n        },\n        {\n            region: \"DE\",\n        },\n        {\n            region: \"DE\",\n        },\n    ],\n    plan: \"business\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"3.1\",\n});\nconst m3db = new ovh.CloudProject.Database(\"m3db\", {\n    description: \"my-first-m3db\",\n    engine: \"m3db\",\n    flavor: \"db1-7\",\n    nodes: [{\n        region: \"BHS\",\n    }],\n    plan: \"essential\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"1.2\",\n});\nconst mongodb = new ovh.CloudProject.Database(\"mongodb\", {\n    description: \"my-first-mongodb\",\n    engine: \"mongodb\",\n    flavor: \"db1-2\",\n    nodes: [{\n        region: \"GRA\",\n    }],\n    plan: \"essential\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"5.0\",\n});\nconst mysqldb = new ovh.CloudProject.Database(\"mysqldb\", {\n    description: \"my-first-mysql\",\n    engine: \"mysql\",\n    flavor: \"db1-4\",\n    nodes: [{\n        region: \"SBG\",\n    }],\n    plan: \"essential\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"8\",\n});\nconst opensearchdb = new ovh.CloudProject.Database(\"opensearchdb\", {\n    description: \"my-first-opensearch\",\n    engine: \"opensearch\",\n    flavor: \"db1-4\",\n    nodes: [{\n        region: \"UK\",\n    }],\n    opensearchAclsEnabled: true,\n    plan: \"essential\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"1\",\n});\nconst pgsqldb = new ovh.CloudProject.Database(\"pgsqldb\", {\n    description: \"my-first-postgresql\",\n    engine: \"postgresql\",\n    flavor: \"db1-4\",\n    nodes: [{\n        region: \"WAW\",\n    }],\n    plan: \"essential\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"14\",\n});\nconst redisdb = new ovh.CloudProject.Database(\"redisdb\", {\n    description: \"my-first-redis\",\n    engine: \"redis\",\n    flavor: \"db1-4\",\n    nodes: [{\n        region: \"BHS\",\n    }],\n    plan: \"essential\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"6.2\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\ncassandradb = ovh.cloud_project.Database(\"cassandradb\",\n    description=\"my-first-cassandra\",\n    engine=\"cassandra\",\n    flavor=\"db1-4\",\n    nodes=[\n        ovh.cloud_project.DatabaseNodeArgs(\n            region=\"BHS\",\n        ),\n        ovh.cloud_project.DatabaseNodeArgs(\n            region=\"BHS\",\n        ),\n        ovh.cloud_project.DatabaseNodeArgs(\n            region=\"BHS\",\n        ),\n    ],\n    plan=\"essential\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"4.0\")\nkafkadb = ovh.cloud_project.Database(\"kafkadb\",\n    description=\"my-first-kafka\",\n    engine=\"kafka\",\n    flavor=\"db1-4\",\n    kafka_rest_api=True,\n    nodes=[\n        ovh.cloud_project.DatabaseNodeArgs(\n            region=\"DE\",\n        ),\n        ovh.cloud_project.DatabaseNodeArgs(\n            region=\"DE\",\n        ),\n        ovh.cloud_project.DatabaseNodeArgs(\n            region=\"DE\",\n        ),\n    ],\n    plan=\"business\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"3.1\")\nm3db = ovh.cloud_project.Database(\"m3db\",\n    description=\"my-first-m3db\",\n    engine=\"m3db\",\n    flavor=\"db1-7\",\n    nodes=[ovh.cloud_project.DatabaseNodeArgs(\n        region=\"BHS\",\n    )],\n    plan=\"essential\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"1.2\")\nmongodb = ovh.cloud_project.Database(\"mongodb\",\n    description=\"my-first-mongodb\",\n    engine=\"mongodb\",\n    flavor=\"db1-2\",\n    nodes=[ovh.cloud_project.DatabaseNodeArgs(\n        region=\"GRA\",\n    )],\n    plan=\"essential\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"5.0\")\nmysqldb = ovh.cloud_project.Database(\"mysqldb\",\n    description=\"my-first-mysql\",\n    engine=\"mysql\",\n    flavor=\"db1-4\",\n    nodes=[ovh.cloud_project.DatabaseNodeArgs(\n        region=\"SBG\",\n    )],\n    plan=\"essential\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"8\")\nopensearchdb = ovh.cloud_project.Database(\"opensearchdb\",\n    description=\"my-first-opensearch\",\n    engine=\"opensearch\",\n    flavor=\"db1-4\",\n    nodes=[ovh.cloud_project.DatabaseNodeArgs(\n        region=\"UK\",\n    )],\n    opensearch_acls_enabled=True,\n    plan=\"essential\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"1\")\npgsqldb = ovh.cloud_project.Database(\"pgsqldb\",\n    description=\"my-first-postgresql\",\n    engine=\"postgresql\",\n    flavor=\"db1-4\",\n    nodes=[ovh.cloud_project.DatabaseNodeArgs(\n        region=\"WAW\",\n    )],\n    plan=\"essential\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"14\")\nredisdb = ovh.cloud_project.Database(\"redisdb\",\n    description=\"my-first-redis\",\n    engine=\"redis\",\n    flavor=\"db1-4\",\n    nodes=[ovh.cloud_project.DatabaseNodeArgs(\n        region=\"BHS\",\n    )],\n    plan=\"essential\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"6.2\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cassandradb = new Ovh.CloudProject.Database(\"cassandradb\", new()\n    {\n        Description = \"my-first-cassandra\",\n        Engine = \"cassandra\",\n        Flavor = \"db1-4\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"BHS\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"BHS\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"BHS\",\n            },\n        },\n        Plan = \"essential\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"4.0\",\n    });\n\n    var kafkadb = new Ovh.CloudProject.Database(\"kafkadb\", new()\n    {\n        Description = \"my-first-kafka\",\n        Engine = \"kafka\",\n        Flavor = \"db1-4\",\n        KafkaRestApi = true,\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"DE\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"DE\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"DE\",\n            },\n        },\n        Plan = \"business\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"3.1\",\n    });\n\n    var m3db = new Ovh.CloudProject.Database(\"m3db\", new()\n    {\n        Description = \"my-first-m3db\",\n        Engine = \"m3db\",\n        Flavor = \"db1-7\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"BHS\",\n            },\n        },\n        Plan = \"essential\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"1.2\",\n    });\n\n    var mongodb = new Ovh.CloudProject.Database(\"mongodb\", new()\n    {\n        Description = \"my-first-mongodb\",\n        Engine = \"mongodb\",\n        Flavor = \"db1-2\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"GRA\",\n            },\n        },\n        Plan = \"essential\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"5.0\",\n    });\n\n    var mysqldb = new Ovh.CloudProject.Database(\"mysqldb\", new()\n    {\n        Description = \"my-first-mysql\",\n        Engine = \"mysql\",\n        Flavor = \"db1-4\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"SBG\",\n            },\n        },\n        Plan = \"essential\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"8\",\n    });\n\n    var opensearchdb = new Ovh.CloudProject.Database(\"opensearchdb\", new()\n    {\n        Description = \"my-first-opensearch\",\n        Engine = \"opensearch\",\n        Flavor = \"db1-4\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"UK\",\n            },\n        },\n        OpensearchAclsEnabled = true,\n        Plan = \"essential\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"1\",\n    });\n\n    var pgsqldb = new Ovh.CloudProject.Database(\"pgsqldb\", new()\n    {\n        Description = \"my-first-postgresql\",\n        Engine = \"postgresql\",\n        Flavor = \"db1-4\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"WAW\",\n            },\n        },\n        Plan = \"essential\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"14\",\n    });\n\n    var redisdb = new Ovh.CloudProject.Database(\"redisdb\", new()\n    {\n        Description = \"my-first-redis\",\n        Engine = \"redis\",\n        Flavor = \"db1-4\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"BHS\",\n            },\n        },\n        Plan = \"essential\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"6.2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewDatabase(ctx, \"cassandradb\", \u0026CloudProject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-cassandra\"),\n\t\t\tEngine:      pulumi.String(\"cassandra\"),\n\t\t\tFlavor:      pulumi.String(\"db1-4\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"BHS\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"BHS\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"BHS\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"4.0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewDatabase(ctx, \"kafkadb\", \u0026CloudProject.DatabaseArgs{\n\t\t\tDescription:  pulumi.String(\"my-first-kafka\"),\n\t\t\tEngine:       pulumi.String(\"kafka\"),\n\t\t\tFlavor:       pulumi.String(\"db1-4\"),\n\t\t\tKafkaRestApi: pulumi.Bool(true),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"DE\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"DE\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"DE\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"business\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"3.1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewDatabase(ctx, \"m3db\", \u0026CloudProject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-m3db\"),\n\t\t\tEngine:      pulumi.String(\"m3db\"),\n\t\t\tFlavor:      pulumi.String(\"db1-7\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"BHS\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"1.2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewDatabase(ctx, \"mongodb\", \u0026CloudProject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-mongodb\"),\n\t\t\tEngine:      pulumi.String(\"mongodb\"),\n\t\t\tFlavor:      pulumi.String(\"db1-2\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"GRA\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"5.0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewDatabase(ctx, \"mysqldb\", \u0026CloudProject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-mysql\"),\n\t\t\tEngine:      pulumi.String(\"mysql\"),\n\t\t\tFlavor:      pulumi.String(\"db1-4\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"SBG\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"8\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewDatabase(ctx, \"opensearchdb\", \u0026CloudProject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-opensearch\"),\n\t\t\tEngine:      pulumi.String(\"opensearch\"),\n\t\t\tFlavor:      pulumi.String(\"db1-4\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"UK\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOpensearchAclsEnabled: pulumi.Bool(true),\n\t\t\tPlan:                  pulumi.String(\"essential\"),\n\t\t\tServiceName:           pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:               pulumi.String(\"1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewDatabase(ctx, \"pgsqldb\", \u0026CloudProject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-postgresql\"),\n\t\t\tEngine:      pulumi.String(\"postgresql\"),\n\t\t\tFlavor:      pulumi.String(\"db1-4\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"WAW\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"14\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewDatabase(ctx, \"redisdb\", \u0026CloudProject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-redis\"),\n\t\t\tEngine:      pulumi.String(\"redis\"),\n\t\t\tFlavor:      pulumi.String(\"db1-4\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"BHS\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"6.2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.Database;\nimport com.pulumi.ovh.CloudProject.DatabaseArgs;\nimport com.pulumi.ovh.CloudProject.inputs.DatabaseNodeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cassandradb = new Database(\"cassandradb\", DatabaseArgs.builder()        \n            .description(\"my-first-cassandra\")\n            .engine(\"cassandra\")\n            .flavor(\"db1-4\")\n            .nodes(            \n                DatabaseNodeArgs.builder()\n                    .region(\"BHS\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .region(\"BHS\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .region(\"BHS\")\n                    .build())\n            .plan(\"essential\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"4.0\")\n            .build());\n\n        var kafkadb = new Database(\"kafkadb\", DatabaseArgs.builder()        \n            .description(\"my-first-kafka\")\n            .engine(\"kafka\")\n            .flavor(\"db1-4\")\n            .kafkaRestApi(true)\n            .nodes(            \n                DatabaseNodeArgs.builder()\n                    .region(\"DE\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .region(\"DE\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .region(\"DE\")\n                    .build())\n            .plan(\"business\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"3.1\")\n            .build());\n\n        var m3db = new Database(\"m3db\", DatabaseArgs.builder()        \n            .description(\"my-first-m3db\")\n            .engine(\"m3db\")\n            .flavor(\"db1-7\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"BHS\")\n                .build())\n            .plan(\"essential\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"1.2\")\n            .build());\n\n        var mongodb = new Database(\"mongodb\", DatabaseArgs.builder()        \n            .description(\"my-first-mongodb\")\n            .engine(\"mongodb\")\n            .flavor(\"db1-2\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"GRA\")\n                .build())\n            .plan(\"essential\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"5.0\")\n            .build());\n\n        var mysqldb = new Database(\"mysqldb\", DatabaseArgs.builder()        \n            .description(\"my-first-mysql\")\n            .engine(\"mysql\")\n            .flavor(\"db1-4\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"SBG\")\n                .build())\n            .plan(\"essential\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"8\")\n            .build());\n\n        var opensearchdb = new Database(\"opensearchdb\", DatabaseArgs.builder()        \n            .description(\"my-first-opensearch\")\n            .engine(\"opensearch\")\n            .flavor(\"db1-4\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"UK\")\n                .build())\n            .opensearchAclsEnabled(true)\n            .plan(\"essential\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"1\")\n            .build());\n\n        var pgsqldb = new Database(\"pgsqldb\", DatabaseArgs.builder()        \n            .description(\"my-first-postgresql\")\n            .engine(\"postgresql\")\n            .flavor(\"db1-4\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"WAW\")\n                .build())\n            .plan(\"essential\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"14\")\n            .build());\n\n        var redisdb = new Database(\"redisdb\", DatabaseArgs.builder()        \n            .description(\"my-first-redis\")\n            .engine(\"redis\")\n            .flavor(\"db1-4\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"BHS\")\n                .build())\n            .plan(\"essential\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"6.2\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cassandradb:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-cassandra\n      engine: cassandra\n      flavor: db1-4\n      nodes:\n        - region: BHS\n        - region: BHS\n        - region: BHS\n      plan: essential\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '4.0'\n  kafkadb:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-kafka\n      engine: kafka\n      flavor: db1-4\n      kafkaRestApi: true\n      nodes:\n        - region: DE\n        - region: DE\n        - region: DE\n      plan: business\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '3.1'\n  m3db:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-m3db\n      engine: m3db\n      flavor: db1-7\n      nodes:\n        - region: BHS\n      plan: essential\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '1.2'\n  mongodb:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-mongodb\n      engine: mongodb\n      flavor: db1-2\n      nodes:\n        - region: GRA\n      plan: essential\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '5.0'\n  mysqldb:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-mysql\n      engine: mysql\n      flavor: db1-4\n      nodes:\n        - region: SBG\n      plan: essential\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '8'\n  opensearchdb:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-opensearch\n      engine: opensearch\n      flavor: db1-4\n      nodes:\n        - region: UK\n      opensearchAclsEnabled: true\n      plan: essential\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '1'\n  pgsqldb:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-postgresql\n      engine: postgresql\n      flavor: db1-4\n      nodes:\n        - region: WAW\n      plan: essential\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '14'\n  redisdb:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-redis\n      engine: redis\n      flavor: db1-4\n      nodes:\n        - region: BHS\n      plan: essential\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '6.2'\n```\n\nTo deploy a business PostgreSQL service with two nodes on public network:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst postgresql = new ovh.CloudProject.Database(\"postgresql\", {\n    description: \"my-first-postgresql\",\n    engine: \"postgresql\",\n    flavor: \"db1-15\",\n    nodes: [\n        {\n            region: \"GRA\",\n        },\n        {\n            region: \"GRA\",\n        },\n    ],\n    plan: \"business\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"14\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\npostgresql = ovh.cloud_project.Database(\"postgresql\",\n    description=\"my-first-postgresql\",\n    engine=\"postgresql\",\n    flavor=\"db1-15\",\n    nodes=[\n        ovh.cloud_project.DatabaseNodeArgs(\n            region=\"GRA\",\n        ),\n        ovh.cloud_project.DatabaseNodeArgs(\n            region=\"GRA\",\n        ),\n    ],\n    plan=\"business\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"14\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var postgresql = new Ovh.CloudProject.Database(\"postgresql\", new()\n    {\n        Description = \"my-first-postgresql\",\n        Engine = \"postgresql\",\n        Flavor = \"db1-15\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"GRA\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"GRA\",\n            },\n        },\n        Plan = \"business\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"14\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewDatabase(ctx, \"postgresql\", \u0026CloudProject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-postgresql\"),\n\t\t\tEngine:      pulumi.String(\"postgresql\"),\n\t\t\tFlavor:      pulumi.String(\"db1-15\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"GRA\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"GRA\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"business\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"14\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.Database;\nimport com.pulumi.ovh.CloudProject.DatabaseArgs;\nimport com.pulumi.ovh.CloudProject.inputs.DatabaseNodeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var postgresql = new Database(\"postgresql\", DatabaseArgs.builder()        \n            .description(\"my-first-postgresql\")\n            .engine(\"postgresql\")\n            .flavor(\"db1-15\")\n            .nodes(            \n                DatabaseNodeArgs.builder()\n                    .region(\"GRA\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .region(\"GRA\")\n                    .build())\n            .plan(\"business\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"14\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  postgresql:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-postgresql\n      engine: postgresql\n      flavor: db1-15\n      nodes:\n        - region: GRA\n        - region: GRA\n      plan: business\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '14'\n```\n\n\nTo deploy an enterprise MongoDB service with three nodes on private network:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mongodb = new ovh.CloudProject.Database(\"mongodb\", {\n    description: \"my-first-mongodb\",\n    engine: \"mongodb\",\n    flavor: \"db1-30\",\n    nodes: [\n        {\n            networkId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            region: \"SBG\",\n            subnetId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n        {\n            networkId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            region: \"SBG\",\n            subnetId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n        {\n            networkId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            region: \"SBG\",\n            subnetId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n    ],\n    plan: \"enterprise\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"5.0\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmongodb = ovh.cloud_project.Database(\"mongodb\",\n    description=\"my-first-mongodb\",\n    engine=\"mongodb\",\n    flavor=\"db1-30\",\n    nodes=[\n        ovh.cloud_project.DatabaseNodeArgs(\n            network_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            region=\"SBG\",\n            subnet_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        ),\n        ovh.cloud_project.DatabaseNodeArgs(\n            network_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            region=\"SBG\",\n            subnet_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        ),\n        ovh.cloud_project.DatabaseNodeArgs(\n            network_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            region=\"SBG\",\n            subnet_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        ),\n    ],\n    plan=\"enterprise\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"5.0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mongodb = new Ovh.CloudProject.Database(\"mongodb\", new()\n    {\n        Description = \"my-first-mongodb\",\n        Engine = \"mongodb\",\n        Flavor = \"db1-30\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                NetworkId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                Region = \"SBG\",\n                SubnetId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                NetworkId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                Region = \"SBG\",\n                SubnetId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                NetworkId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                Region = \"SBG\",\n                SubnetId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            },\n        },\n        Plan = \"enterprise\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"5.0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewDatabase(ctx, \"mongodb\", \u0026CloudProject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-mongodb\"),\n\t\t\tEngine:      pulumi.String(\"mongodb\"),\n\t\t\tFlavor:      pulumi.String(\"db1-30\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tNetworkId: pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t\tRegion:    pulumi.String(\"SBG\"),\n\t\t\t\t\tSubnetId:  pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tNetworkId: pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t\tRegion:    pulumi.String(\"SBG\"),\n\t\t\t\t\tSubnetId:  pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tNetworkId: pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t\tRegion:    pulumi.String(\"SBG\"),\n\t\t\t\t\tSubnetId:  pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"enterprise\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"5.0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.Database;\nimport com.pulumi.ovh.CloudProject.DatabaseArgs;\nimport com.pulumi.ovh.CloudProject.inputs.DatabaseNodeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mongodb = new Database(\"mongodb\", DatabaseArgs.builder()        \n            .description(\"my-first-mongodb\")\n            .engine(\"mongodb\")\n            .flavor(\"db1-30\")\n            .nodes(            \n                DatabaseNodeArgs.builder()\n                    .networkId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .region(\"SBG\")\n                    .subnetId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .networkId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .region(\"SBG\")\n                    .subnetId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .networkId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .region(\"SBG\")\n                    .subnetId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .build())\n            .plan(\"enterprise\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"5.0\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mongodb:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-mongodb\n      engine: mongodb\n      flavor: db1-30\n      nodes:\n        - networkId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n          region: SBG\n          subnetId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n        - networkId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n          region: SBG\n          subnetId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n        - networkId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n          region: SBG\n          subnetId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n      plan: enterprise\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '5.0'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed database clusters can be imported using the `service_name`, `engine`, `id` of the cluster, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProject/database:Database my_database_cluster service_name/engine/id\n```\n\n ",
            "properties": {
                "backupTime": {
                    "type": "string",
                    "description": "Time on which backups start every day.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the cluster.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Small description of the database service.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The disk size (in GB) of the database service.\n"
                },
                "diskType": {
                    "type": "string",
                    "description": "Defines the disk type of the database service.\n"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseEndpoint:DatabaseEndpoint"
                    },
                    "description": "List of all endpoints objects of the service.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The database engine you want to deploy. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "A valid OVHcloud public cloud database flavor name in which the nodes will be started.\nEx: \"db1-7\". Changing this value upgrade the nodes with the new flavor.\nYou can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                },
                "kafkaRestApi": {
                    "type": "boolean",
                    "description": "Defines whether the REST API is enabled on a kafka cluster\n"
                },
                "maintenanceTime": {
                    "type": "string",
                    "description": "Time on which maintenances can start every day.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Type of network of the cluster.\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseNode:DatabaseNode"
                    },
                    "description": "List of nodes object.\nMulti region cluster are not yet available, all node should be identical.\n"
                },
                "opensearchAclsEnabled": {
                    "type": "boolean",
                    "description": "Defines whether the ACLs are enabled on an OpenSearch cluster\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the cluster.\nEnum: \"essential\", \"business\", \"enterprise\".\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the engine in which the service should be deployed\n"
                }
            },
            "required": [
                "backupTime",
                "createdAt",
                "diskSize",
                "diskType",
                "endpoints",
                "engine",
                "flavor",
                "maintenanceTime",
                "networkType",
                "nodes",
                "plan",
                "serviceName",
                "status",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Small description of the database service.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The disk size (in GB) of the database service.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The database engine you want to deploy. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "description": "A valid OVHcloud public cloud database flavor name in which the nodes will be started.\nEx: \"db1-7\". Changing this value upgrade the nodes with the new flavor.\nYou can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                },
                "kafkaRestApi": {
                    "type": "boolean",
                    "description": "Defines whether the REST API is enabled on a kafka cluster\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseNode:DatabaseNode"
                    },
                    "description": "List of nodes object.\nMulti region cluster are not yet available, all node should be identical.\n"
                },
                "opensearchAclsEnabled": {
                    "type": "boolean",
                    "description": "Defines whether the ACLs are enabled on an OpenSearch cluster\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the cluster.\nEnum: \"essential\", \"business\", \"enterprise\".\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "description": "The version of the engine in which the service should be deployed\n"
                }
            },
            "requiredInputs": [
                "engine",
                "flavor",
                "nodes",
                "plan",
                "serviceName",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "backupTime": {
                        "type": "string",
                        "description": "Time on which backups start every day.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the cluster.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Small description of the database service.\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The disk size (in GB) of the database service.\n"
                    },
                    "diskType": {
                        "type": "string",
                        "description": "Defines the disk type of the database service.\n"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/DatabaseEndpoint:DatabaseEndpoint"
                        },
                        "description": "List of all endpoints objects of the service.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The database engine you want to deploy. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                        "willReplaceOnChanges": true
                    },
                    "flavor": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud database flavor name in which the nodes will be started.\nEx: \"db1-7\". Changing this value upgrade the nodes with the new flavor.\nYou can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                    },
                    "kafkaRestApi": {
                        "type": "boolean",
                        "description": "Defines whether the REST API is enabled on a kafka cluster\n"
                    },
                    "maintenanceTime": {
                        "type": "string",
                        "description": "Time on which maintenances can start every day.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Type of network of the cluster.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/DatabaseNode:DatabaseNode"
                        },
                        "description": "List of nodes object.\nMulti region cluster are not yet available, all node should be identical.\n"
                    },
                    "opensearchAclsEnabled": {
                        "type": "boolean",
                        "description": "Defines whether the ACLs are enabled on an OpenSearch cluster\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Plan of the cluster.\nEnum: \"essential\", \"business\", \"enterprise\".\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the engine in which the service should be deployed\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/failoverIpAttach:FailoverIpAttach": {
            "description": "Attaches a failover IP address to a compute instance\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myfailoverip = new ovh.CloudProject.FailoverIpAttach(\"myfailoverip\", {\n    ip: \"XXXXXX\",\n    routedTo: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmyfailoverip = ovh.cloud_project.FailoverIpAttach(\"myfailoverip\",\n    ip=\"XXXXXX\",\n    routed_to=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myfailoverip = new Ovh.CloudProject.FailoverIpAttach(\"myfailoverip\", new()\n    {\n        Ip = \"XXXXXX\",\n        RoutedTo = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewFailoverIpAttach(ctx, \"myfailoverip\", \u0026CloudProject.FailoverIpAttachArgs{\n\t\t\tIp:          pulumi.String(\"XXXXXX\"),\n\t\t\tRoutedTo:    pulumi.String(\"XXXXXX\"),\n\t\t\tServiceName: pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.FailoverIpAttach;\nimport com.pulumi.ovh.CloudProject.FailoverIpAttachArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myfailoverip = new FailoverIpAttach(\"myfailoverip\", FailoverIpAttachArgs.builder()        \n            .ip(\"XXXXXX\")\n            .routedTo(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myfailoverip:\n    type: ovh:CloudProject:FailoverIpAttach\n    properties:\n      ip: XXXXXX\n      routedTo: XXXXXX\n      serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "block": {
                    "type": "string",
                    "description": "The IP block\n"
                },
                "continentCode": {
                    "type": "string",
                    "description": "Ip continent\n"
                },
                "geoLoc": {
                    "type": "string",
                    "description": "Ip location\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The failover ip address to attach\n"
                },
                "progress": {
                    "type": "integer",
                    "description": "Current operation progress in percent\n"
                },
                "routedTo": {
                    "type": "string",
                    "description": "The GUID of an instance to which the failover IP address is be attached\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Ip status, can be `ok` or `operationPending`\n"
                },
                "subType": {
                    "type": "string",
                    "description": "IP sub type\n"
                }
            },
            "required": [
                "block",
                "continentCode",
                "geoLoc",
                "ip",
                "progress",
                "routedTo",
                "serviceName",
                "status",
                "subType"
            ],
            "inputProperties": {
                "block": {
                    "type": "string",
                    "description": "The IP block\n"
                },
                "continentCode": {
                    "type": "string",
                    "description": "Ip continent\n"
                },
                "geoLoc": {
                    "type": "string",
                    "description": "Ip location\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The failover ip address to attach\n"
                },
                "routedTo": {
                    "type": "string",
                    "description": "The GUID of an instance to which the failover IP address is be attached\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FailoverIpAttach resources.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "The IP block\n"
                    },
                    "continentCode": {
                        "type": "string",
                        "description": "Ip continent\n"
                    },
                    "geoLoc": {
                        "type": "string",
                        "description": "Ip location\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The failover ip address to attach\n"
                    },
                    "progress": {
                        "type": "integer",
                        "description": "Current operation progress in percent\n"
                    },
                    "routedTo": {
                        "type": "string",
                        "description": "The GUID of an instance to which the failover IP address is be attached\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Ip status, can be `ok` or `operationPending`\n"
                    },
                    "subType": {
                        "type": "string",
                        "description": "IP sub type\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kube:Kube": {
            "description": "Creates a OVHcloud Managed Kubernetes Service cluster in a public cloud project.\n\n\n## Import\n\nOVHcloud Managed Kubernetes Service clusters can be imported using the `service_name` and the `id` of the cluster, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProject/kube:Kube my_kube_cluster service_name/kube_id\n```\n\n ",
            "properties": {
                "controlPlaneIsUpToDate": {
                    "type": "boolean",
                    "description": "True if control-plane is up to date.\n"
                },
                "customization": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomization:KubeCustomization",
                    "description": "Customer customization object\n* apiserver - Kubernetes API server customization\n* admissionplugins - (Optional) Kubernetes API server admission plugins customization\n* enabled - (Optional) Array of admission plugins enabled, default is [\"NodeRestriction\",\"AlwaysPulImages\"] and only these admission plugins can be enabled at this time.\n* disabled - (Optional) Array of admission plugins disabled, default is [] and only AlwaysPulImages can be disabled at this time.\n"
                },
                "isUpToDate": {
                    "type": "boolean",
                    "description": "True if all nodes and control-plane are up to date.\n"
                },
                "kubeconfig": {
                    "type": "string",
                    "description": "The kubeconfig file. Use this file to connect to your kubernetes cluster.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the kubernetes cluster.\n"
                },
                "nextUpgradeVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Kubernetes versions available for upgrade.\n"
                },
                "nodesUrl": {
                    "type": "string",
                    "description": "Cluster nodes URL.\n"
                },
                "privateNetworkConfiguration": {
                    "$ref": "#/types/ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration",
                    "description": "The private network configuration\n* default_vrack_gateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.\n* private_network_routing_as_default - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.\n"
                },
                "privateNetworkId": {
                    "type": "string",
                    "description": "OpenStack private network (or vrack) ID to use.\nChanging this value delete the resource(including ETCD user data). Defaults - not use private network.\n"
                },
                "region": {
                    "type": "string",
                    "description": "a valid OVHcloud public cloud region ID in which the kubernetes\ncluster will be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\nChanging this value recreates the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Cluster status. Should be normally set to 'READY'.\n"
                },
                "updatePolicy": {
                    "type": "string",
                    "description": "Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE].\n"
                },
                "url": {
                    "type": "string",
                    "description": "Management URL of your cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "kubernetes version to use.\nChanging this value updates the resource. Defaults to latest available.\n"
                }
            },
            "required": [
                "controlPlaneIsUpToDate",
                "customization",
                "isUpToDate",
                "kubeconfig",
                "name",
                "nextUpgradeVersions",
                "nodesUrl",
                "region",
                "serviceName",
                "status",
                "updatePolicy",
                "url",
                "version"
            ],
            "inputProperties": {
                "customization": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomization:KubeCustomization",
                    "description": "Customer customization object\n* apiserver - Kubernetes API server customization\n* admissionplugins - (Optional) Kubernetes API server admission plugins customization\n* enabled - (Optional) Array of admission plugins enabled, default is [\"NodeRestriction\",\"AlwaysPulImages\"] and only these admission plugins can be enabled at this time.\n* disabled - (Optional) Array of admission plugins disabled, default is [] and only AlwaysPulImages can be disabled at this time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the kubernetes cluster.\n"
                },
                "privateNetworkConfiguration": {
                    "$ref": "#/types/ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration",
                    "description": "The private network configuration\n* default_vrack_gateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.\n* private_network_routing_as_default - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.\n"
                },
                "privateNetworkId": {
                    "type": "string",
                    "description": "OpenStack private network (or vrack) ID to use.\nChanging this value delete the resource(including ETCD user data). Defaults - not use private network.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "a valid OVHcloud public cloud region ID in which the kubernetes\ncluster will be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\nChanging this value recreates the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "updatePolicy": {
                    "type": "string",
                    "description": "Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE].\n"
                },
                "version": {
                    "type": "string",
                    "description": "kubernetes version to use.\nChanging this value updates the resource. Defaults to latest available.\n"
                }
            },
            "requiredInputs": [
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Kube resources.\n",
                "properties": {
                    "controlPlaneIsUpToDate": {
                        "type": "boolean",
                        "description": "True if control-plane is up to date.\n"
                    },
                    "customization": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomization:KubeCustomization",
                        "description": "Customer customization object\n* apiserver - Kubernetes API server customization\n* admissionplugins - (Optional) Kubernetes API server admission plugins customization\n* enabled - (Optional) Array of admission plugins enabled, default is [\"NodeRestriction\",\"AlwaysPulImages\"] and only these admission plugins can be enabled at this time.\n* disabled - (Optional) Array of admission plugins disabled, default is [] and only AlwaysPulImages can be disabled at this time.\n"
                    },
                    "isUpToDate": {
                        "type": "boolean",
                        "description": "True if all nodes and control-plane are up to date.\n"
                    },
                    "kubeconfig": {
                        "type": "string",
                        "description": "The kubeconfig file. Use this file to connect to your kubernetes cluster.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the kubernetes cluster.\n"
                    },
                    "nextUpgradeVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Kubernetes versions available for upgrade.\n"
                    },
                    "nodesUrl": {
                        "type": "string",
                        "description": "Cluster nodes URL.\n"
                    },
                    "privateNetworkConfiguration": {
                        "$ref": "#/types/ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration",
                        "description": "The private network configuration\n* default_vrack_gateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.\n* private_network_routing_as_default - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.\n"
                    },
                    "privateNetworkId": {
                        "type": "string",
                        "description": "OpenStack private network (or vrack) ID to use.\nChanging this value delete the resource(including ETCD user data). Defaults - not use private network.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "a valid OVHcloud public cloud region ID in which the kubernetes\ncluster will be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\nChanging this value recreates the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Cluster status. Should be normally set to 'READY'.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE].\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Management URL of your cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "kubernetes version to use.\nChanging this value updates the resource. Defaults to latest available.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kubeIpRestrictions:KubeIpRestrictions": {
            "description": "Apply IP restrictions to an OVHcloud Managed Kubernetes cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vrackOnly = new ovh.CloudProject.KubeIpRestrictions(\"vrack_only\", {\n    ips: [\"10.42.0.0/16\"],\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nvrack_only = ovh.cloud_project.KubeIpRestrictions(\"vrackOnly\",\n    ips=[\"10.42.0.0/16\"],\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vrackOnly = new Ovh.CloudProject.KubeIpRestrictions(\"vrackOnly\", new()\n    {\n        Ips = new[]\n        {\n            \"10.42.0.0/16\",\n        },\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewKubeIpRestrictions(ctx, \"vrackOnly\", \u0026CloudProject.KubeIpRestrictionsArgs{\n\t\t\tIps: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.42.0.0/16\"),\n\t\t\t},\n\t\t\tKubeId:      pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.KubeIpRestrictions;\nimport com.pulumi.ovh.CloudProject.KubeIpRestrictionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vrackOnly = new KubeIpRestrictions(\"vrackOnly\", KubeIpRestrictionsArgs.builder()        \n            .ips(\"10.42.0.0/16\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackOnly:\n    type: ovh:CloudProject:KubeIpRestrictions\n    properties:\n      ips:\n        - 10.42.0.0/16\n      kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed Kubernetes Service cluster IP restrictions can be imported using the `service_name` and the `id` of the cluster, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProject/kubeIpRestrictions:KubeIpRestrictions iprestrictions service_name/kube_id\n```\n\n ",
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of CIDR authorized to interact with the managed Kubernetes cluster.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed Kubernetes cluster.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "ips",
                "kubeId",
                "serviceName"
            ],
            "inputProperties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of CIDR authorized to interact with the managed Kubernetes cluster.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed Kubernetes cluster.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ips",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubeIpRestrictions resources.\n",
                "properties": {
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of CIDR authorized to interact with the managed Kubernetes cluster.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed Kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kubeNodePool:KubeNodePool": {
            "description": "Creates a nodepool in a OVHcloud Managed Kubernetes Service cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nCreate a simple node pool in your Kubernetes cluster:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst nodePool = new ovh.CloudProject.KubeNodePool(\"node_pool\", {\n    desiredNodes: 3,\n    flavorName: \"b2-7\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    maxNodes: 3,\n    minNodes: 3,\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nnode_pool = ovh.cloud_project.KubeNodePool(\"nodePool\",\n    desired_nodes=3,\n    flavor_name=\"b2-7\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    max_nodes=3,\n    min_nodes=3,\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nodePool = new Ovh.CloudProject.KubeNodePool(\"nodePool\", new()\n    {\n        DesiredNodes = 3,\n        FlavorName = \"b2-7\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        MaxNodes = 3,\n        MinNodes = 3,\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewKubeNodePool(ctx, \"nodePool\", \u0026CloudProject.KubeNodePoolArgs{\n\t\t\tDesiredNodes: pulumi.Int(3),\n\t\t\tFlavorName:   pulumi.String(\"b2-7\"),\n\t\t\tKubeId:       pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tMaxNodes:     pulumi.Int(3),\n\t\t\tMinNodes:     pulumi.Int(3),\n\t\t\tServiceName:  pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.KubeNodePool;\nimport com.pulumi.ovh.CloudProject.KubeNodePoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var nodePool = new KubeNodePool(\"nodePool\", KubeNodePoolArgs.builder()        \n            .desiredNodes(3)\n            .flavorName(\"b2-7\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .maxNodes(3)\n            .minNodes(3)\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  nodePool:\n    type: ovh:CloudProject:KubeNodePool\n    properties:\n      desiredNodes: 3\n      flavorName: b2-7\n      kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      maxNodes: 3\n      minNodes: 3\n      # Warning: \"_\" char is not allowed!\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n```\n\nCreate an advanced node pool in your Kubernetes cluster:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst pool = new ovh.CloudProject.KubeNodePool(\"pool\", {\n    desiredNodes: 3,\n    flavorName: \"b2-7\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    maxNodes: 3,\n    minNodes: 3,\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    template: {\n        metadata: {\n            annotations: {\n                k1: \"v1\",\n                k2: \"v2\",\n            },\n            finalizers: [\n                \"F1\",\n                \"F2\",\n            ],\n            labels: {\n                k3: \"v3\",\n                k4: \"v4\",\n            },\n        },\n        spec: {\n            taints: [{\n                effect: \"PreferNoSchedule\",\n                key: \"k\",\n                value: \"v\",\n            }],\n            unschedulable: false,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\npool = ovh.cloud_project.KubeNodePool(\"pool\",\n    desired_nodes=3,\n    flavor_name=\"b2-7\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    max_nodes=3,\n    min_nodes=3,\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    template=ovh.cloud_project.KubeNodePoolTemplateArgs(\n        metadata=ovh.cloud_project.KubeNodePoolTemplateMetadataArgs(\n            annotations={\n                \"k1\": \"v1\",\n                \"k2\": \"v2\",\n            },\n            finalizers=[\n                \"F1\",\n                \"F2\",\n            ],\n            labels={\n                \"k3\": \"v3\",\n                \"k4\": \"v4\",\n            },\n        ),\n        spec=ovh.cloud_project.KubeNodePoolTemplateSpecArgs(\n            taints=[{\n                \"effect\": \"PreferNoSchedule\",\n                \"key\": \"k\",\n                \"value\": \"v\",\n            }],\n            unschedulable=False,\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pool = new Ovh.CloudProject.KubeNodePool(\"pool\", new()\n    {\n        DesiredNodes = 3,\n        FlavorName = \"b2-7\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        MaxNodes = 3,\n        MinNodes = 3,\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Template = new Ovh.CloudProject.Inputs.KubeNodePoolTemplateArgs\n        {\n            Metadata = new Ovh.CloudProject.Inputs.KubeNodePoolTemplateMetadataArgs\n            {\n                Annotations = \n                {\n                    { \"k1\", \"v1\" },\n                    { \"k2\", \"v2\" },\n                },\n                Finalizers = new[]\n                {\n                    \"F1\",\n                    \"F2\",\n                },\n                Labels = \n                {\n                    { \"k3\", \"v3\" },\n                    { \"k4\", \"v4\" },\n                },\n            },\n            Spec = new Ovh.CloudProject.Inputs.KubeNodePoolTemplateSpecArgs\n            {\n                Taints = new[]\n                {\n                    \n                    {\n                        { \"effect\", \"PreferNoSchedule\" },\n                        { \"key\", \"k\" },\n                        { \"value\", \"v\" },\n                    },\n                },\n                Unschedulable = false,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewKubeNodePool(ctx, \"pool\", \u0026CloudProject.KubeNodePoolArgs{\n\t\t\tDesiredNodes: pulumi.Int(3),\n\t\t\tFlavorName:   pulumi.String(\"b2-7\"),\n\t\t\tKubeId:       pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tMaxNodes:     pulumi.Int(3),\n\t\t\tMinNodes:     pulumi.Int(3),\n\t\t\tServiceName:  pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tTemplate: \u0026cloudproject.KubeNodePoolTemplateArgs{\n\t\t\t\tMetadata: \u0026cloudproject.KubeNodePoolTemplateMetadataArgs{\n\t\t\t\t\tAnnotations: pulumi.StringMap{\n\t\t\t\t\t\t\"k1\": pulumi.String(\"v1\"),\n\t\t\t\t\t\t\"k2\": pulumi.String(\"v2\"),\n\t\t\t\t\t},\n\t\t\t\t\tFinalizers: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"F1\"),\n\t\t\t\t\t\tpulumi.String(\"F2\"),\n\t\t\t\t\t},\n\t\t\t\t\tLabels: pulumi.StringMap{\n\t\t\t\t\t\t\"k3\": pulumi.String(\"v3\"),\n\t\t\t\t\t\t\"k4\": pulumi.String(\"v4\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tSpec: \u0026cloudproject.KubeNodePoolTemplateSpecArgs{\n\t\t\t\t\tTaints: pulumi.AnyMapArray{\n\t\t\t\t\t\tpulumi.AnyMap{\n\t\t\t\t\t\t\t\"effect\": pulumi.Any(\"PreferNoSchedule\"),\n\t\t\t\t\t\t\t\"key\":    pulumi.Any(\"k\"),\n\t\t\t\t\t\t\t\"value\":  pulumi.Any(\"v\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tUnschedulable: pulumi.Bool(false),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.KubeNodePool;\nimport com.pulumi.ovh.CloudProject.KubeNodePoolArgs;\nimport com.pulumi.ovh.CloudProject.inputs.KubeNodePoolTemplateArgs;\nimport com.pulumi.ovh.CloudProject.inputs.KubeNodePoolTemplateMetadataArgs;\nimport com.pulumi.ovh.CloudProject.inputs.KubeNodePoolTemplateSpecArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var pool = new KubeNodePool(\"pool\", KubeNodePoolArgs.builder()        \n            .desiredNodes(3)\n            .flavorName(\"b2-7\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .maxNodes(3)\n            .minNodes(3)\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .template(KubeNodePoolTemplateArgs.builder()\n                .metadata(KubeNodePoolTemplateMetadataArgs.builder()\n                    .annotations(Map.ofEntries(\n                        Map.entry(\"k1\", \"v1\"),\n                        Map.entry(\"k2\", \"v2\")\n                    ))\n                    .finalizers(                    \n                        \"F1\",\n                        \"F2\")\n                    .labels(Map.ofEntries(\n                        Map.entry(\"k3\", \"v3\"),\n                        Map.entry(\"k4\", \"v4\")\n                    ))\n                    .build())\n                .spec(KubeNodePoolTemplateSpecArgs.builder()\n                    .taints(Map.ofEntries(\n                        Map.entry(\"effect\", \"PreferNoSchedule\"),\n                        Map.entry(\"key\", \"k\"),\n                        Map.entry(\"value\", \"v\")\n                    ))\n                    .unschedulable(false)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  pool:\n    type: ovh:CloudProject:KubeNodePool\n    properties:\n      desiredNodes: 3\n      flavorName: b2-7\n      kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      maxNodes: 3\n      minNodes: 3\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      template:\n        metadata:\n          annotations:\n            k1: v1\n            k2: v2\n          finalizers:\n            - F1\n            - F2\n          labels:\n            k3: v3\n            k4: v4\n        spec:\n          taints:\n            - effect: PreferNoSchedule\n              key: k\n              value: v\n          unschedulable: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed Kubernetes Service cluster node pool can be imported using the `service_name`, the `id` of the cluster, and the `id` of the nodepool separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProject/kubeNodePool:KubeNodePool pool service_name/kube_id/poolid\n```\n\n ",
            "properties": {
                "antiAffinity": {
                    "type": "boolean",
                    "description": "should the pool use the anti-affinity feature. Default to `false`.\n"
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling for the pool. Default to `false`.\n"
                },
                "availableNodes": {
                    "type": "integer",
                    "description": "Number of nodes which are actually ready in the pool\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation date\n"
                },
                "currentNodes": {
                    "type": "integer",
                    "description": "Number of nodes present in the pool\n"
                },
                "desiredNodes": {
                    "type": "integer",
                    "description": "number of nodes to start.\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "a valid OVHcloud public cloud flavor ID in which the nodes will be started.\nEx: \"b2-7\". Changing this value recreates the resource.\nYou can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed kubernetes cluster.\n"
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "maximum number of nodes allowed in the pool.\nSetting `desired_nodes` over this value will raise an error.\n"
                },
                "minNodes": {
                    "type": "integer",
                    "description": "minimum number of nodes allowed in the pool.\nSetting `desired_nodes` under this value will raise an error.\n"
                },
                "monthlyBilled": {
                    "type": "boolean",
                    "description": "should the nodes be billed on a monthly basis. Default to `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the nodepool.\nChanging this value recreates the resource.\nWarning: \"_\" char is not allowed!\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project id\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "sizeStatus": {
                    "type": "string",
                    "description": "Status describing the state between number of nodes wanted and available ones\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status\n"
                },
                "template": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate",
                    "description": "Node pool template\n"
                },
                "upToDateNodes": {
                    "type": "integer",
                    "description": "Number of nodes with latest version installed in the pool\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date\n"
                }
            },
            "required": [
                "antiAffinity",
                "autoscale",
                "availableNodes",
                "createdAt",
                "currentNodes",
                "desiredNodes",
                "flavor",
                "flavorName",
                "kubeId",
                "maxNodes",
                "minNodes",
                "monthlyBilled",
                "name",
                "projectId",
                "serviceName",
                "sizeStatus",
                "status",
                "upToDateNodes",
                "updatedAt"
            ],
            "inputProperties": {
                "antiAffinity": {
                    "type": "boolean",
                    "description": "should the pool use the anti-affinity feature. Default to `false`.\n",
                    "willReplaceOnChanges": true
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling for the pool. Default to `false`.\n"
                },
                "desiredNodes": {
                    "type": "integer",
                    "description": "number of nodes to start.\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "a valid OVHcloud public cloud flavor ID in which the nodes will be started.\nEx: \"b2-7\". Changing this value recreates the resource.\nYou can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/\n",
                    "willReplaceOnChanges": true
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed kubernetes cluster.\n",
                    "willReplaceOnChanges": true
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "maximum number of nodes allowed in the pool.\nSetting `desired_nodes` over this value will raise an error.\n"
                },
                "minNodes": {
                    "type": "integer",
                    "description": "minimum number of nodes allowed in the pool.\nSetting `desired_nodes` under this value will raise an error.\n"
                },
                "monthlyBilled": {
                    "type": "boolean",
                    "description": "should the nodes be billed on a monthly basis. Default to `false`.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the nodepool.\nChanging this value recreates the resource.\nWarning: \"_\" char is not allowed!\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "template": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate",
                    "description": "Node pool template\n"
                }
            },
            "requiredInputs": [
                "flavorName",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubeNodePool resources.\n",
                "properties": {
                    "antiAffinity": {
                        "type": "boolean",
                        "description": "should the pool use the anti-affinity feature. Default to `false`.\n",
                        "willReplaceOnChanges": true
                    },
                    "autoscale": {
                        "type": "boolean",
                        "description": "Enable auto-scaling for the pool. Default to `false`.\n"
                    },
                    "availableNodes": {
                        "type": "integer",
                        "description": "Number of nodes which are actually ready in the pool\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date\n"
                    },
                    "currentNodes": {
                        "type": "integer",
                        "description": "Number of nodes present in the pool\n"
                    },
                    "desiredNodes": {
                        "type": "integer",
                        "description": "number of nodes to start.\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "Flavor name\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "a valid OVHcloud public cloud flavor ID in which the nodes will be started.\nEx: \"b2-7\". Changing this value recreates the resource.\nYou can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/\n",
                        "willReplaceOnChanges": true
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxNodes": {
                        "type": "integer",
                        "description": "maximum number of nodes allowed in the pool.\nSetting `desired_nodes` over this value will raise an error.\n"
                    },
                    "minNodes": {
                        "type": "integer",
                        "description": "minimum number of nodes allowed in the pool.\nSetting `desired_nodes` under this value will raise an error.\n"
                    },
                    "monthlyBilled": {
                        "type": "boolean",
                        "description": "should the nodes be billed on a monthly basis. Default to `false`.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the nodepool.\nChanging this value recreates the resource.\nWarning: \"_\" char is not allowed!\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project id\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "sizeStatus": {
                        "type": "string",
                        "description": "Status describing the state between number of nodes wanted and available ones\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status\n"
                    },
                    "template": {
                        "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate",
                        "description": "Node pool template\n"
                    },
                    "upToDateNodes": {
                        "type": "integer",
                        "description": "Number of nodes with latest version installed in the pool\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kubeOidc:KubeOidc": {
            "description": "Creates an OIDC configuration in an OVHcloud Managed Kubernetes cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\n\nconst my_oidc = new ovh.cloudproject.KubeOidc(\"my-oidc\", {\n    serviceName: _var.projectid,\n    kubeId: ovh_cloud_project_kube.mykube.id,\n    clientId: \"xxx\",\n    issuerUrl: \"https://ovh.com\",\n    oidcUsernameClaim: \"an-email\",\n    oidcUsernamePrefix: \"ovh:\",\n    oidcGroupsClaims: [\"groups\"],\n    oidcGroupsPrefix: \"ovh:\",\n    oidcRequiredClaims: [\"claim1=val1\"],\n    oidcSigningAlgs: [\"RS512\"],\n    oidcCaContent: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmy_oidc = ovh.cloud_project.KubeOidc(\"my-oidc\",\n    service_name=var[\"projectid\"],\n    kube_id=ovh_cloud_project_kube[\"mykube\"][\"id\"],\n    client_id=\"xxx\",\n    issuer_url=\"https://ovh.com\",\n    oidc_username_claim=\"an-email\",\n    oidc_username_prefix=\"ovh:\",\n    oidc_groups_claims=[\"groups\"],\n    oidc_groups_prefix=\"ovh:\",\n    oidc_required_claims=[\"claim1=val1\"],\n    oidc_signing_algs=[\"RS512\"],\n    oidc_ca_content=\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var my_oidc = new Ovh.CloudProject.KubeOidc(\"my-oidc\", new()\n    {\n        ServiceName = @var.Projectid,\n        KubeId = ovh_cloud_project_kube.Mykube.Id,\n        ClientId = \"xxx\",\n        IssuerUrl = \"https://ovh.com\",\n        OidcUsernameClaim = \"an-email\",\n        OidcUsernamePrefix = \"ovh:\",\n        OidcGroupsClaims = new[]\n        {\n            \"groups\",\n        },\n        OidcGroupsPrefix = \"ovh:\",\n        OidcRequiredClaims = new[]\n        {\n            \"claim1=val1\",\n        },\n        OidcSigningAlgs = new[]\n        {\n            \"RS512\",\n        },\n        OidcCaContent = \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewKubeOidc(ctx, \"my-oidc\", \u0026CloudProject.KubeOidcArgs{\n\t\t\tServiceName:        pulumi.Any(_var.Projectid),\n\t\t\tKubeId:             pulumi.Any(ovh_cloud_project_kube.Mykube.Id),\n\t\t\tClientId:           pulumi.String(\"xxx\"),\n\t\t\tIssuerUrl:          pulumi.String(\"https://ovh.com\"),\n\t\t\tOidcUsernameClaim:  pulumi.String(\"an-email\"),\n\t\t\tOidcUsernamePrefix: pulumi.String(\"ovh:\"),\n\t\t\tOidcGroupsClaims: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"groups\"),\n\t\t\t},\n\t\t\tOidcGroupsPrefix: pulumi.String(\"ovh:\"),\n\t\t\tOidcRequiredClaims: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"claim1=val1\"),\n\t\t\t},\n\t\t\tOidcSigningAlgs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"RS512\"),\n\t\t\t},\n\t\t\tOidcCaContent: pulumi.String(\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.KubeOidc;\nimport com.pulumi.ovh.CloudProject.KubeOidcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var my_oidc = new KubeOidc(\"my-oidc\", KubeOidcArgs.builder()        \n            .serviceName(var_.projectid())\n            .kubeId(ovh_cloud_project_kube.mykube().id())\n            .clientId(\"xxx\")\n            .issuerUrl(\"https://ovh.com\")\n            .oidcUsernameClaim(\"an-email\")\n            .oidcUsernamePrefix(\"ovh:\")\n            .oidcGroupsClaims(\"groups\")\n            .oidcGroupsPrefix(\"ovh:\")\n            .oidcRequiredClaims(\"claim1=val1\")\n            .oidcSigningAlgs(\"RS512\")\n            .oidcCaContent(\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  my-oidc:\n    type: ovh:CloudProject:KubeOidc\n    properties:\n      serviceName: ${var.projectid}\n      kubeId: ${ovh_cloud_project_kube.mykube.id}\n      #required field\n      clientId: xxx\n      issuerUrl: https://ovh.com\n      #optional field\n      oidcUsernameClaim: an-email\n      oidcUsernamePrefix: 'ovh:'\n      oidcGroupsClaims:\n        - groups\n      oidcGroupsPrefix: 'ovh:'\n      oidcRequiredClaims:\n        - claim1=val1\n      oidcSigningAlgs:\n        - RS512\n      oidcCaContent: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed Kubernetes Service cluster OIDC can be imported using the tenant `service_name` and cluster id `kube_id` separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProject/kubeOidc:KubeOidc my-oidc service_name/kube_id\n```\n\n ",
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The OIDC client ID.\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "The OIDC issuer url.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The ID of the managed kubernetes cluster.\n"
                },
                "oidcCaContent": {
                    "type": "string"
                },
                "oidcGroupsClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcGroupsPrefix": {
                    "type": "string"
                },
                "oidcRequiredClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcSigningAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcUsernameClaim": {
                    "type": "string"
                },
                "oidcUsernamePrefix": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "clientId",
                "issuerUrl",
                "kubeId",
                "serviceName"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string",
                    "description": "The OIDC client ID.\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "The OIDC issuer url.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The ID of the managed kubernetes cluster.\n",
                    "willReplaceOnChanges": true
                },
                "oidcCaContent": {
                    "type": "string"
                },
                "oidcGroupsClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcGroupsPrefix": {
                    "type": "string"
                },
                "oidcRequiredClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcSigningAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcUsernameClaim": {
                    "type": "string"
                },
                "oidcUsernamePrefix": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clientId",
                "issuerUrl",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubeOidc resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "The OIDC client ID.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "The OIDC issuer url.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The ID of the managed kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "oidcCaContent": {
                        "type": "string"
                    },
                    "oidcGroupsClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcGroupsPrefix": {
                        "type": "string"
                    },
                    "oidcRequiredClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcSigningAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcUsernameClaim": {
                        "type": "string"
                    },
                    "oidcUsernamePrefix": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/networkPrivate:NetworkPrivate": {
            "description": "Creates a private network in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst net = new ovh.CloudProject.NetworkPrivate(\"net\", {\n    regions: [\n        \"GRA1\",\n        \"BHS1\",\n    ],\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nnet = ovh.cloud_project.NetworkPrivate(\"net\",\n    regions=[\n        \"GRA1\",\n        \"BHS1\",\n    ],\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var net = new Ovh.CloudProject.NetworkPrivate(\"net\", new()\n    {\n        Regions = new[]\n        {\n            \"GRA1\",\n            \"BHS1\",\n        },\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewNetworkPrivate(ctx, \"net\", \u0026CloudProject.NetworkPrivateArgs{\n\t\t\tRegions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"GRA1\"),\n\t\t\t\tpulumi.String(\"BHS1\"),\n\t\t\t},\n\t\t\tServiceName: pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.NetworkPrivate;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var net = new NetworkPrivate(\"net\", NetworkPrivateArgs.builder()        \n            .regions(            \n                \"GRA1\",\n                \"BHS1\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  net:\n    type: ovh:CloudProject:NetworkPrivate\n    properties:\n      regions:\n        - GRA1\n        - BHS1\n      serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nPrivate network in a public cloud project can be imported using the `service_name` and the `network_id`, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProject/networkPrivate:NetworkPrivate mynet ookie9mee8Shaeghaeleeju7Xeghohv6e/pn-12345678\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "an array of valid OVHcloud public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                },
                "regionsAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsAttribute:NetworkPrivateRegionsAttribute"
                    },
                    "description": "A map representing information about the region.\n* `regions_attributes/region` - The id of the region.\n* `regions_attributes/status` - The status of the network in the region.\n* `regions_attributes/openstackid` - The private network id in the region.\n"
                },
                "regionsStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsStatus:NetworkPrivateRegionsStatus"
                    },
                    "description": "(Deprecated) A map representing the status of the network per region.\n* `regions_status/region` - (Deprecated) The id of the region.\n* `regions_status/status` - (Deprecated) The status of the network in the region.\n",
                    "deprecationMessage": "use the regions_attributes field instead"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                },
                "type": {
                    "type": "string",
                    "description": "the type of the network. Either 'private' or 'public'.\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n"
                }
            },
            "required": [
                "name",
                "regions",
                "regionsAttributes",
                "regionsStatuses",
                "serviceName",
                "status",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "an array of valid OVHcloud public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkPrivate resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the network.\n"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "an array of valid OVHcloud public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n",
                        "willReplaceOnChanges": true
                    },
                    "regionsAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsAttribute:NetworkPrivateRegionsAttribute"
                        },
                        "description": "A map representing information about the region.\n* `regions_attributes/region` - The id of the region.\n* `regions_attributes/status` - The status of the network in the region.\n* `regions_attributes/openstackid` - The private network id in the region.\n"
                    },
                    "regionsStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsStatus:NetworkPrivateRegionsStatus"
                        },
                        "description": "(Deprecated) A map representing the status of the network per region.\n* `regions_status/region` - (Deprecated) The id of the region.\n* `regions_status/status` - (Deprecated) The status of the network in the region.\n",
                        "deprecationMessage": "use the regions_attributes field instead"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "the type of the network. Either 'private' or 'public'.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/networkPrivateSubnet:NetworkPrivateSubnet": {
            "description": "Creates a subnet in a private network of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst subnet = new ovh.CloudProject.NetworkPrivateSubnet(\"subnet\", {\n    dhcp: true,\n    end: \"192.168.168.200\",\n    network: \"192.168.168.0/24\",\n    networkId: \"0234543\",\n    noGateway: false,\n    region: \"GRA1\",\n    serviceName: \"xxxxx\",\n    start: \"192.168.168.100\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nsubnet = ovh.cloud_project.NetworkPrivateSubnet(\"subnet\",\n    dhcp=True,\n    end=\"192.168.168.200\",\n    network=\"192.168.168.0/24\",\n    network_id=\"0234543\",\n    no_gateway=False,\n    region=\"GRA1\",\n    service_name=\"xxxxx\",\n    start=\"192.168.168.100\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var subnet = new Ovh.CloudProject.NetworkPrivateSubnet(\"subnet\", new()\n    {\n        Dhcp = true,\n        End = \"192.168.168.200\",\n        Network = \"192.168.168.0/24\",\n        NetworkId = \"0234543\",\n        NoGateway = false,\n        Region = \"GRA1\",\n        ServiceName = \"xxxxx\",\n        Start = \"192.168.168.100\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewNetworkPrivateSubnet(ctx, \"subnet\", \u0026CloudProject.NetworkPrivateSubnetArgs{\n\t\t\tDhcp:        pulumi.Bool(true),\n\t\t\tEnd:         pulumi.String(\"192.168.168.200\"),\n\t\t\tNetwork:     pulumi.String(\"192.168.168.0/24\"),\n\t\t\tNetworkId:   pulumi.String(\"0234543\"),\n\t\t\tNoGateway:   pulumi.Bool(false),\n\t\t\tRegion:      pulumi.String(\"GRA1\"),\n\t\t\tServiceName: pulumi.String(\"xxxxx\"),\n\t\t\tStart:       pulumi.String(\"192.168.168.100\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateSubnet;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateSubnetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var subnet = new NetworkPrivateSubnet(\"subnet\", NetworkPrivateSubnetArgs.builder()        \n            .dhcp(true)\n            .end(\"192.168.168.200\")\n            .network(\"192.168.168.0/24\")\n            .networkId(\"0234543\")\n            .noGateway(false)\n            .region(\"GRA1\")\n            .serviceName(\"xxxxx\")\n            .start(\"192.168.168.100\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  subnet:\n    type: ovh:CloudProject:NetworkPrivateSubnet\n    properties:\n      dhcp: true\n      end: 192.168.168.200\n      network: 192.168.168.0/24\n      networkId: '0234543'\n      noGateway: false\n      region: GRA1\n      serviceName: xxxxx\n      start: 192.168.168.100\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSubnet in a private network of a public cloud project can be imported using the `service_name` , the `network_id` and the `subnet_id`, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProject/networkPrivateSubnet:NetworkPrivateSubnet mysubnet ookie9mee8Shaeghaeleeju7Xeghohv6e/pn-12345678/0f0b73a4-403b-45e4-86d0-b438f1291909\n```\n\n ",
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "Ip Block representing the subnet cidr.\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n"
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "The IP of the gateway\n"
                },
                "ipPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetIpPool:NetworkPrivateSubnetIpPool"
                    },
                    "description": "List of ip pools allocated in the subnet.\n* `ip_pools/network` - Global network with cidr.\n* `ip_pools/region` - Region where this subnet is created.\n* `ip_pools/dhcp` - DHCP enabled.\n* `ip_pools/end` - Last ip for this region.\n* `ip_pools/start` - First ip for this region.\n"
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network.\nChanging this forces a new resource to be created.\n"
                },
                "noGateway": {
                    "type": "boolean",
                    "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n"
                }
            },
            "required": [
                "cidr",
                "end",
                "gatewayIp",
                "ipPools",
                "network",
                "networkId",
                "region",
                "serviceName",
                "start"
            ],
            "inputProperties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n",
                    "willReplaceOnChanges": true
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network.\nChanging this forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "noGateway": {
                    "type": "boolean",
                    "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "end",
                "network",
                "networkId",
                "region",
                "serviceName",
                "start"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkPrivateSubnet resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "Ip Block representing the subnet cidr.\n"
                    },
                    "dhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n",
                        "willReplaceOnChanges": true
                    },
                    "end": {
                        "type": "string",
                        "description": "Last ip for this region.\nChanging this value recreates the subnet.\n",
                        "willReplaceOnChanges": true
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "The IP of the gateway\n"
                    },
                    "ipPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetIpPool:NetworkPrivateSubnetIpPool"
                        },
                        "description": "List of ip pools allocated in the subnet.\n* `ip_pools/network` - Global network with cidr.\n* `ip_pools/region` - Region where this subnet is created.\n* `ip_pools/dhcp` - DHCP enabled.\n* `ip_pools/end` - Last ip for this region.\n* `ip_pools/start` - First ip for this region.\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The id of the network.\nChanging this forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "noGateway": {
                        "type": "boolean",
                        "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "start": {
                        "type": "string",
                        "description": "First ip for this region.\nChanging this value recreates the subnet.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/project:Project": {
            "description": "Orders a public cloud project.\n\n## Important\n\nThis resource is in beta state. Use with caution.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cloud order cart\",\n});\nconst cloud = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"cloud\",\n    planCode: \"project.2018\",\n}));\nconst myCloudProject = new ovh.cloudproject.Project(\"myCloudProject\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    description: \"my cloud project\",\n    paymentMean: \"fidelity\",\n    plan: {\n        duration: cloud.then(cloud =\u003e cloud.selectedPrices?[0]?.duration),\n        planCode: cloud.then(cloud =\u003e cloud.planCode),\n        pricingMode: cloud.then(cloud =\u003e cloud.selectedPrices?[0]?.pricingMode),\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\",\n    description=\"my cloud order cart\")\ncloud = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"cloud\",\n    plan_code=\"project.2018\")\nmy_cloud_project = ovh.cloud_project.Project(\"myCloudProject\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    description=\"my cloud project\",\n    payment_mean=\"fidelity\",\n    plan=ovh.cloud_project.ProjectPlanArgs(\n        duration=cloud.selected_prices[0].duration,\n        plan_code=cloud.plan_code,\n        pricing_mode=cloud.selected_prices[0].pricing_mode,\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cloud order cart\",\n    });\n\n    var cloud = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"cloud\",\n        PlanCode = \"project.2018\",\n    });\n\n    var myCloudProject = new Ovh.CloudProject.Project(\"myCloudProject\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        Description = \"my cloud project\",\n        PaymentMean = \"fidelity\",\n        Plan = new Ovh.CloudProject.Inputs.ProjectPlanArgs\n        {\n            Duration = cloud.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = cloud.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = cloud.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cloud order cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcloud, err := Order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"cloud\",\n\t\t\tPlanCode:      \"project.2018\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewProject(ctx, \"myCloudProject\", \u0026CloudProject.ProjectArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tDescription:   pulumi.String(\"my cloud project\"),\n\t\t\tPaymentMean:   pulumi.String(\"fidelity\"),\n\t\t\tPlan: \u0026cloudproject.ProjectPlanArgs{\n\t\t\t\tDuration:    pulumi.String(cloud.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(cloud.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(cloud.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.CloudProject.Project;\nimport com.pulumi.ovh.CloudProject.ProjectArgs;\nimport com.pulumi.ovh.CloudProject.inputs.ProjectPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cloud order cart\")\n            .build());\n\n        final var cloud = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"cloud\")\n            .planCode(\"project.2018\")\n            .build());\n\n        var myCloudProject = new Project(\"myCloudProject\", ProjectArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .description(\"my cloud project\")\n            .paymentMean(\"fidelity\")\n            .plan(ProjectPlanArgs.builder()\n                .duration(cloud.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(cloud.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(cloud.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myCloudProject:\n    type: ovh:CloudProject:Project\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      description: my cloud project\n      paymentMean: fidelity\n      plan:\n        duration: ${cloud.selectedPrices[0].duration}\n        planCode: ${cloud.planCode}\n        pricingMode: ${cloud.selectedPrices[0].pricingMode}\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cloud order cart\n  cloud:\n    fn::invoke:\n      Function: ovh:Order:getCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: cloud\n        planCode: project.2018\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCloud project can be imported using the `order_id` that can be retrieved in the [order page](https://www.ovh.com/manager/#/dedicated/billing/orders/orders) at the creation time of the Public Cloud project.\n\nbash\n\n```sh\n $ pulumi import ovh:CloudProject/project:Project my_cloud_project order_id\n```\n\n ",
            "properties": {
                "access": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectOrder:ProjectOrder"
                    },
                    "description": "Details about the order that was used to create the public cloud project\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:CloudProject/ProjectPlan:ProjectPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanOption:ProjectPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "openstack project id\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "openstack project name\n"
                },
                "status": {
                    "type": "string",
                    "description": "project status\n"
                }
            },
            "required": [
                "access",
                "description",
                "orders",
                "ovhSubsidiary",
                "paymentMean",
                "plan",
                "projectId",
                "projectName",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:CloudProject/ProjectPlan:ProjectPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanOption:ProjectPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "access": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description associated with the user.\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/ProjectOrder:ProjectOrder"
                        },
                        "description": "Details about the order that was used to create the public cloud project\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlan:ProjectPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/ProjectPlanOption:ProjectPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "openstack project id\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "openstack project name\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "project status\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/regionStoragePresign:RegionStoragePresign": {
            "description": "Generates a temporary presigned S3 URLs to download or upload an object.\n\n\u003e __NOTE__ This resource is only compatible with the `High Performance - S3` solution for object storage.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\n\nconst presignedUrlRegionStoragePresign = new ovh.cloudproject.RegionStoragePresign(\"presignedUrlRegionStoragePresign\", {\n    serviceName: \"xxxxxxxxxxxxxxxxx\",\n    regionName: \"GRA\",\n    expire: 3600,\n    method: \"GET\",\n    object: \"an-object-in-the-bucket\",\n});\nexport const presignedUrl = presignedUrlRegionStoragePresign.url;\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\npresigned_url_region_storage_presign = ovh.cloud_project.RegionStoragePresign(\"presignedUrlRegionStoragePresign\",\n    service_name=\"xxxxxxxxxxxxxxxxx\",\n    region_name=\"GRA\",\n    expire=3600,\n    method=\"GET\",\n    object=\"an-object-in-the-bucket\")\npulumi.export(\"presignedUrl\", presigned_url_region_storage_presign.url)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var presignedUrlRegionStoragePresign = new Ovh.CloudProject.RegionStoragePresign(\"presignedUrlRegionStoragePresign\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxx\",\n        RegionName = \"GRA\",\n        Expire = 3600,\n        Method = \"GET\",\n        Object = \"an-object-in-the-bucket\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"presignedUrl\"] = presignedUrlRegionStoragePresign.Url,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpresignedUrlRegionStoragePresign, err := CloudProject.NewRegionStoragePresign(ctx, \"presignedUrlRegionStoragePresign\", \u0026CloudProject.RegionStoragePresignArgs{\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxx\"),\n\t\t\tRegionName:  pulumi.String(\"GRA\"),\n\t\t\tExpire:      pulumi.Int(3600),\n\t\t\tMethod:      pulumi.String(\"GET\"),\n\t\t\tObject:      pulumi.String(\"an-object-in-the-bucket\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"presignedUrl\", presignedUrlRegionStoragePresign.Url)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.RegionStoragePresign;\nimport com.pulumi.ovh.CloudProject.RegionStoragePresignArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var presignedUrlRegionStoragePresign = new RegionStoragePresign(\"presignedUrlRegionStoragePresign\", RegionStoragePresignArgs.builder()        \n            .serviceName(\"xxxxxxxxxxxxxxxxx\")\n            .regionName(\"GRA\")\n            .expire(3600)\n            .method(\"GET\")\n            .object(\"an-object-in-the-bucket\")\n            .build());\n\n        ctx.export(\"presignedUrl\", presignedUrlRegionStoragePresign.url());\n    }\n}\n```\n```yaml\nresources:\n  presignedUrlRegionStoragePresign:\n    type: ovh:CloudProject:RegionStoragePresign\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxx\n      regionName: GRA\n      expire: 3600\n      method: GET\n      object: an-object-in-the-bucket\noutputs:\n  presignedUrl: ${presignedUrlRegionStoragePresign.url}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "expire": {
                    "type": "integer",
                    "description": "Define, in seconds, for how long your URL will be valid.\n"
                },
                "method": {
                    "type": "string",
                    "description": "The method you want to use to interact with your object. Can be either 'GET' or 'PUT'.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of your S3 storage container/bucket.\n"
                },
                "object": {
                    "type": "string",
                    "description": "The name of the object in your S3 bucket.\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "The region in which your storage is located.\nEx.: \"GRA\".\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Computed URL result.\n"
                }
            },
            "required": [
                "expire",
                "method",
                "name",
                "object",
                "regionName",
                "serviceName",
                "url"
            ],
            "inputProperties": {
                "expire": {
                    "type": "integer",
                    "description": "Define, in seconds, for how long your URL will be valid.\n",
                    "willReplaceOnChanges": true
                },
                "method": {
                    "type": "string",
                    "description": "The method you want to use to interact with your object. Can be either 'GET' or 'PUT'.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of your S3 storage container/bucket.\n",
                    "willReplaceOnChanges": true
                },
                "object": {
                    "type": "string",
                    "description": "The name of the object in your S3 bucket.\n",
                    "willReplaceOnChanges": true
                },
                "regionName": {
                    "type": "string",
                    "description": "The region in which your storage is located.\nEx.: \"GRA\".\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "expire",
                "method",
                "object",
                "regionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RegionStoragePresign resources.\n",
                "properties": {
                    "expire": {
                        "type": "integer",
                        "description": "Define, in seconds, for how long your URL will be valid.\n",
                        "willReplaceOnChanges": true
                    },
                    "method": {
                        "type": "string",
                        "description": "The method you want to use to interact with your object. Can be either 'GET' or 'PUT'.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of your S3 storage container/bucket.\n",
                        "willReplaceOnChanges": true
                    },
                    "object": {
                        "type": "string",
                        "description": "The name of the object in your S3 bucket.\n",
                        "willReplaceOnChanges": true
                    },
                    "regionName": {
                        "type": "string",
                        "description": "The region in which your storage is located.\nEx.: \"GRA\".\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "url": {
                        "type": "string",
                        "description": "Computed URL result.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/s3Credential:S3Credential": {
            "description": "Creates an S3 Credential for a user in a public cloud project.\n\n\n## Import\n\nOVHcloud User S3 Credentials can be imported using the `service_name`, `user_id` and `access_key_id` of the credential, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProject/s3Credential:S3Credential s3_credential service_name/user_id/access_key_id\n```\n\n ",
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "the Access Key ID\n"
                },
                "internalUserId": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "(Sensitive) the Secret Access Key\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of a public cloud project's user.\n"
                }
            },
            "required": [
                "accessKeyId",
                "internalUserId",
                "secretAccessKey",
                "serviceName",
                "userId"
            ],
            "inputProperties": {
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of a public cloud project's user.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering S3Credential resources.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "the Access Key ID\n"
                    },
                    "internalUserId": {
                        "type": "string"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "(Sensitive) the Secret Access Key\n",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/s3Policy:S3Policy": {
            "description": "Set the S3 Policy of a public cloud project user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\n\nconst user = new ovh.cloudproject.User(\"user\", {\n    serviceName: \"XXX\",\n    description: \"my user\",\n    roleNames: [\"objectstore_operator\"],\n});\nconst myS3Credentials = new ovh.cloudproject.S3Credential(\"myS3Credentials\", {\n    serviceName: user.serviceName,\n    userId: user.id,\n});\nconst policy = new ovh.cloudproject.S3Policy(\"policy\", {\n    serviceName: user.serviceName,\n    userId: user.id,\n    policy: JSON.stringify({\n        Statement: [{\n            Sid: \"RWContainer\",\n            Effect: \"Allow\",\n            Action: [\n                \"s3:GetObject\",\n                \"s3:PutObject\",\n                \"s3:DeleteObject\",\n                \"s3:ListBucket\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:ListBucketMultipartUploads\",\n                \"s3:AbortMultipartUpload\",\n                \"s3:GetBucketLocation\",\n            ],\n            Resource: [\n                \"arn:aws:s3:::hp-bucket\",\n                \"arn:aws:s3:::hp-bucket/*\",\n            ],\n        }],\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport lbrlabs_pulumi_ovh as ovh\n\nuser = ovh.cloud_project.User(\"user\",\n    service_name=\"XXX\",\n    description=\"my user\",\n    role_names=[\"objectstore_operator\"])\nmy_s3_credentials = ovh.cloud_project.S3Credential(\"myS3Credentials\",\n    service_name=user.service_name,\n    user_id=user.id)\npolicy = ovh.cloud_project.S3Policy(\"policy\",\n    service_name=user.service_name,\n    user_id=user.id,\n    policy=json.dumps({\n        \"Statement\": [{\n            \"Sid\": \"RWContainer\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:PutObject\",\n                \"s3:DeleteObject\",\n                \"s3:ListBucket\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:ListBucketMultipartUploads\",\n                \"s3:AbortMultipartUpload\",\n                \"s3:GetBucketLocation\",\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::hp-bucket\",\n                \"arn:aws:s3:::hp-bucket/*\",\n            ],\n        }],\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Text.Json;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = new Ovh.CloudProject.User(\"user\", new()\n    {\n        ServiceName = \"XXX\",\n        Description = \"my user\",\n        RoleNames = new[]\n        {\n            \"objectstore_operator\",\n        },\n    });\n\n    var myS3Credentials = new Ovh.CloudProject.S3Credential(\"myS3Credentials\", new()\n    {\n        ServiceName = user.ServiceName,\n        UserId = user.Id,\n    });\n\n    var policy = new Ovh.CloudProject.S3Policy(\"policy\", new()\n    {\n        ServiceName = user.ServiceName,\n        UserId = user.Id,\n        Policy = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"Statement\"] = new[]\n            {\n                new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"Sid\"] = \"RWContainer\",\n                    [\"Effect\"] = \"Allow\",\n                    [\"Action\"] = new[]\n                    {\n                        \"s3:GetObject\",\n                        \"s3:PutObject\",\n                        \"s3:DeleteObject\",\n                        \"s3:ListBucket\",\n                        \"s3:ListMultipartUploadParts\",\n                        \"s3:ListBucketMultipartUploads\",\n                        \"s3:AbortMultipartUpload\",\n                        \"s3:GetBucketLocation\",\n                    },\n                    [\"Resource\"] = new[]\n                    {\n                        \"arn:aws:s3:::hp-bucket\",\n                        \"arn:aws:s3:::hp-bucket/*\",\n                    },\n                },\n            },\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser, err := CloudProject.NewUser(ctx, \"user\", \u0026CloudProject.UserArgs{\n\t\t\tServiceName: pulumi.String(\"XXX\"),\n\t\t\tDescription: pulumi.String(\"my user\"),\n\t\t\tRoleNames: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"objectstore_operator\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.NewS3Credential(ctx, \"myS3Credentials\", \u0026CloudProject.S3CredentialArgs{\n\t\t\tServiceName: user.ServiceName,\n\t\t\tUserId:      user.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"Statement\": []map[string]interface{}{\n\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\"Sid\":    \"RWContainer\",\n\t\t\t\t\t\"Effect\": \"Allow\",\n\t\t\t\t\t\"Action\": []string{\n\t\t\t\t\t\t\"s3:GetObject\",\n\t\t\t\t\t\t\"s3:PutObject\",\n\t\t\t\t\t\t\"s3:DeleteObject\",\n\t\t\t\t\t\t\"s3:ListBucket\",\n\t\t\t\t\t\t\"s3:ListMultipartUploadParts\",\n\t\t\t\t\t\t\"s3:ListBucketMultipartUploads\",\n\t\t\t\t\t\t\"s3:AbortMultipartUpload\",\n\t\t\t\t\t\t\"s3:GetBucketLocation\",\n\t\t\t\t\t},\n\t\t\t\t\t\"Resource\": []string{\n\t\t\t\t\t\t\"arn:aws:s3:::hp-bucket\",\n\t\t\t\t\t\t\"arn:aws:s3:::hp-bucket/*\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = CloudProject.NewS3Policy(ctx, \"policy\", \u0026CloudProject.S3PolicyArgs{\n\t\t\tServiceName: user.ServiceName,\n\t\t\tUserId:      user.ID(),\n\t\t\tPolicy:      pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.User;\nimport com.pulumi.ovh.CloudProject.UserArgs;\nimport com.pulumi.ovh.CloudProject.S3Credential;\nimport com.pulumi.ovh.CloudProject.S3CredentialArgs;\nimport com.pulumi.ovh.CloudProject.S3Policy;\nimport com.pulumi.ovh.CloudProject.S3PolicyArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user = new User(\"user\", UserArgs.builder()        \n            .serviceName(\"XXX\")\n            .description(\"my user\")\n            .roleNames(\"objectstore_operator\")\n            .build());\n\n        var myS3Credentials = new S3Credential(\"myS3Credentials\", S3CredentialArgs.builder()        \n            .serviceName(user.serviceName())\n            .userId(user.id())\n            .build());\n\n        var policy = new S3Policy(\"policy\", S3PolicyArgs.builder()        \n            .serviceName(user.serviceName())\n            .userId(user.id())\n            .policy(serializeJson(\n                jsonObject(\n                    jsonProperty(\"Statement\", jsonArray(jsonObject(\n                        jsonProperty(\"Sid\", \"RWContainer\"),\n                        jsonProperty(\"Effect\", \"Allow\"),\n                        jsonProperty(\"Action\", jsonArray(\n                            \"s3:GetObject\", \n                            \"s3:PutObject\", \n                            \"s3:DeleteObject\", \n                            \"s3:ListBucket\", \n                            \"s3:ListMultipartUploadParts\", \n                            \"s3:ListBucketMultipartUploads\", \n                            \"s3:AbortMultipartUpload\", \n                            \"s3:GetBucketLocation\"\n                        )),\n                        jsonProperty(\"Resource\", jsonArray(\n                            \"arn:aws:s3:::hp-bucket\", \n                            \"arn:aws:s3:::hp-bucket/*\"\n                        ))\n                    )))\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: ovh:CloudProject:User\n    properties:\n      serviceName: XXX\n      description: my user\n      roleNames:\n        - objectstore_operator\n  myS3Credentials:\n    type: ovh:CloudProject:S3Credential\n    properties:\n      serviceName: ${user.serviceName}\n      userId: ${user.id}\n  policy:\n    type: ovh:CloudProject:S3Policy\n    properties:\n      serviceName: ${user.serviceName}\n      userId: ${user.id}\n      policy:\n        fn::toJSON:\n          Statement:\n            - Sid: RWContainer\n              Effect: Allow\n              Action:\n                - s3:GetObject\n                - s3:PutObject\n                - s3:DeleteObject\n                - s3:ListBucket\n                - s3:ListMultipartUploadParts\n                - s3:ListBucketMultipartUploads\n                - s3:AbortMultipartUpload\n                - s3:GetBucketLocation\n              Resource:\n                - arn:aws:s3:::hp-bucket\n                - arn:aws:s3:::hp-bucket/*\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud User S3 Policy can be imported using the `service_name`, `user_id` of the policy, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProject/s3Policy:S3Policy policy service_name/user_id\n```\n\n ",
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "The policy document. This is a JSON formatted string. See examples of policies on [public documentation](https://docs.ovh.com/gb/en/storage/s3/identity-and-access-management/).\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of a public cloud project's user.\n"
                }
            },
            "required": [
                "policy",
                "serviceName",
                "userId"
            ],
            "inputProperties": {
                "policy": {
                    "type": "string",
                    "description": "The policy document. This is a JSON formatted string. See examples of policies on [public documentation](https://docs.ovh.com/gb/en/storage/s3/identity-and-access-management/).\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of a public cloud project's user.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "policy",
                "serviceName",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering S3Policy resources.\n",
                "properties": {
                    "policy": {
                        "type": "string",
                        "description": "The policy document. This is a JSON formatted string. See examples of policies on [public documentation](https://docs.ovh.com/gb/en/storage/s3/identity-and-access-management/).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/user:User": {
            "description": "Creates a user in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst user1 = new ovh.CloudProject.User(\"user1\", {\n    serviceName: \"XXX\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nuser1 = ovh.cloud_project.User(\"user1\", service_name=\"XXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user1 = new Ovh.CloudProject.User(\"user1\", new()\n    {\n        ServiceName = \"XXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := CloudProject.NewUser(ctx, \"user1\", \u0026CloudProject.UserArgs{\n\t\t\tServiceName: pulumi.String(\"XXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.User;\nimport com.pulumi.ovh.CloudProject.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user1 = new User(\"user1\", UserArgs.builder()        \n            .serviceName(\"XXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user1:\n    type: ovh:CloudProject:User\n    properties:\n      serviceName: XXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "the date the user was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) the password generated for the user. The password can\nbe used with the Openstack API. This attribute is sensitive and will only be\nretrieve once during creation.\n",
                    "secret": true
                },
                "roleName": {
                    "type": "string",
                    "description": "The name of a role. See `role_names`.\n"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role names. Values can be: \n- administrator,\n- ai_training_operator\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/UserRole:UserRole"
                    },
                    "description": "A list of roles associated with the user.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the user. should be normally set to 'ok'.\n"
                },
                "username": {
                    "type": "string",
                    "description": "the username generated for the user. This username can be used with\nthe Openstack API.\n"
                }
            },
            "required": [
                "creationDate",
                "openstackRc",
                "password",
                "roles",
                "serviceName",
                "status",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n",
                    "willReplaceOnChanges": true
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "The name of a role. See `role_names`.\n",
                    "willReplaceOnChanges": true
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role names. Values can be: \n- administrator,\n- ai_training_operator\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "the date the user was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description associated with the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "openstackRc": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) the password generated for the user. The password can\nbe used with the Openstack API. This attribute is sensitive and will only be\nretrieve once during creation.\n",
                        "secret": true
                    },
                    "roleName": {
                        "type": "string",
                        "description": "The name of a role. See `role_names`.\n",
                        "willReplaceOnChanges": true
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of role names. Values can be: \n- administrator,\n- ai_training_operator\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n",
                        "willReplaceOnChanges": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/UserRole:UserRole"
                        },
                        "description": "A list of roles associated with the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the user. should be normally set to 'ok'.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "the username generated for the user. This username can be used with\nthe Openstack API.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/databaseInstance:DatabaseInstance": {
            "description": "Creates a database for a database cluster associated with a public cloud project.\n\nWith this resource you can create a database for the following database engine:\n\n  * `mysql`\n  * `postgresql`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst db = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    id: \"ZZZZ\",\n});\nconst database = new ovh.cloudprojectdatabase.DatabaseInstance(\"database\", {\n    serviceName: db.then(db =\u003e db.serviceName),\n    engine: db.then(db =\u003e db.engine),\n    clusterId: db.then(db =\u003e db.id),\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\ndb = ovh.CloudProjectDatabase.get_database(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    id=\"ZZZZ\")\ndatabase = ovh.cloud_project_database.DatabaseInstance(\"database\",\n    service_name=db.service_name,\n    engine=db.engine,\n    cluster_id=db.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var db = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        Id = \"ZZZZ\",\n    });\n\n    var database = new Ovh.CloudProjectDatabase.DatabaseInstance(\"database\", new()\n    {\n        ServiceName = db.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        Engine = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Engine),\n        ClusterId = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdb, err := CloudProjectDatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tId:          \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProjectDatabase.NewDatabaseInstance(ctx, \"database\", \u0026CloudProjectDatabase.DatabaseInstanceArgs{\n\t\t\tServiceName: pulumi.String(db.ServiceName),\n\t\t\tEngine:      pulumi.String(db.Engine),\n\t\t\tClusterId:   pulumi.String(db.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.DatabaseInstance;\nimport com.pulumi.ovh.CloudProjectDatabase.DatabaseInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var db = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .id(\"ZZZZ\")\n            .build());\n\n        var database = new DatabaseInstance(\"database\", DatabaseInstanceArgs.builder()        \n            .serviceName(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .engine(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.engine()))\n            .clusterId(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  database:\n    type: ovh:CloudProjectDatabase:DatabaseInstance\n    properties:\n      serviceName: ${db.serviceName}\n      engine: ${db.engine}\n      clusterId: ${db.id}\nvariables:\n  db:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabase\n      Arguments:\n        serviceName: XXXX\n        engine: YYYY\n        id: ZZZZ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed database clusters databases can be imported using the `service_name`, `engine`, `cluster_id` and `id` of the database, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/databaseInstance:DatabaseInstance my_database service_name/engine/cluster_id/id\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "Defines if the database has been created by default.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `mysql`\n* `postgresql`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "clusterId",
                "default",
                "engine",
                "name",
                "serviceName"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `mysql`\n* `postgresql`\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseInstance resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Defines if the database has been created by default.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `mysql`\n* `postgresql`\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the database.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/integration:Integration": {
            "description": "Creates an integration for a database cluster associated with a public cloud project.\n\nWith this resource you can create an integration for all engine exept `mongodb`.\n\nPlease take a look at the list of available `types` in the `Argument references` section in order to know the list of avaulable integrations. For example, thanks to the integration feature you can have your PostgreSQL logs in your OpenSearch Database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nPush PostgreSQL logs in an OpenSearch DB:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst dbpostgresql = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXXX\",\n    engine: \"postgresql\",\n    id: \"ZZZZ\",\n});\nconst dbopensearch = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXXX\",\n    engine: \"opensearch\",\n    id: \"ZZZZ\",\n});\nconst integration = new ovh.cloudprojectdatabase.Integration(\"integration\", {\n    serviceName: dbpostgresql.then(dbpostgresql =\u003e dbpostgresql.serviceName),\n    engine: dbpostgresql.then(dbpostgresql =\u003e dbpostgresql.engine),\n    clusterId: dbpostgresql.then(dbpostgresql =\u003e dbpostgresql.id),\n    sourceServiceId: dbpostgresql.then(dbpostgresql =\u003e dbpostgresql.id),\n    destinationServiceId: dbopensearch.then(dbopensearch =\u003e dbopensearch.id),\n    type: \"opensearchLogs\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\ndbpostgresql = ovh.CloudProjectDatabase.get_database(service_name=\"XXXX\",\n    engine=\"postgresql\",\n    id=\"ZZZZ\")\ndbopensearch = ovh.CloudProjectDatabase.get_database(service_name=\"XXXX\",\n    engine=\"opensearch\",\n    id=\"ZZZZ\")\nintegration = ovh.cloud_project_database.Integration(\"integration\",\n    service_name=dbpostgresql.service_name,\n    engine=dbpostgresql.engine,\n    cluster_id=dbpostgresql.id,\n    source_service_id=dbpostgresql.id,\n    destination_service_id=dbopensearch.id,\n    type=\"opensearchLogs\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var dbpostgresql = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"postgresql\",\n        Id = \"ZZZZ\",\n    });\n\n    var dbopensearch = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"opensearch\",\n        Id = \"ZZZZ\",\n    });\n\n    var integration = new Ovh.CloudProjectDatabase.Integration(\"integration\", new()\n    {\n        ServiceName = dbpostgresql.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        Engine = dbpostgresql.Apply(getDatabaseResult =\u003e getDatabaseResult.Engine),\n        ClusterId = dbpostgresql.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        SourceServiceId = dbpostgresql.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        DestinationServiceId = dbopensearch.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        Type = \"opensearchLogs\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdbpostgresql, err := CloudProjectDatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"postgresql\",\n\t\t\tId:          \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdbopensearch, err := CloudProjectDatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"opensearch\",\n\t\t\tId:          \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProjectDatabase.NewIntegration(ctx, \"integration\", \u0026CloudProjectDatabase.IntegrationArgs{\n\t\t\tServiceName:          pulumi.String(dbpostgresql.ServiceName),\n\t\t\tEngine:               pulumi.String(dbpostgresql.Engine),\n\t\t\tClusterId:            pulumi.String(dbpostgresql.Id),\n\t\t\tSourceServiceId:      pulumi.String(dbpostgresql.Id),\n\t\t\tDestinationServiceId: pulumi.String(dbopensearch.Id),\n\t\t\tType:                 pulumi.String(\"opensearchLogs\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.Integration;\nimport com.pulumi.ovh.CloudProjectDatabase.IntegrationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var dbpostgresql = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"postgresql\")\n            .id(\"ZZZZ\")\n            .build());\n\n        final var dbopensearch = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"opensearch\")\n            .id(\"ZZZZ\")\n            .build());\n\n        var integration = new Integration(\"integration\", IntegrationArgs.builder()        \n            .serviceName(dbpostgresql.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .engine(dbpostgresql.applyValue(getDatabaseResult -\u003e getDatabaseResult.engine()))\n            .clusterId(dbpostgresql.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .sourceServiceId(dbpostgresql.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .destinationServiceId(dbopensearch.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .type(\"opensearchLogs\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  integration:\n    type: ovh:CloudProjectDatabase:Integration\n    properties:\n      serviceName: ${dbpostgresql.serviceName}\n      engine: ${dbpostgresql.engine}\n      clusterId: ${dbpostgresql.id}\n      sourceServiceId: ${dbpostgresql.id}\n      destinationServiceId: ${dbopensearch.id}\n      type: opensearchLogs\nvariables:\n  dbpostgresql:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabase\n      Arguments:\n        serviceName: XXXX\n        engine: postgresql\n        id: ZZZZ\n  dbopensearch:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabase\n      Arguments:\n        serviceName: XXXX\n        engine: opensearch\n        id: ZZZZ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed database clusters users can be imported using the `service_name`, `engine`, `cluster_id` and `id` of the user, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/integration:Integration my_user service_name/engine/cluster_id/id\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "destinationServiceId": {
                    "type": "string",
                    "description": "ID of the destination service.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAll engines available exept `mongodb`.\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Parameters for the integration.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "sourceServiceId": {
                    "type": "string",
                    "description": "ID of the source service.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the integration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the integration.\nAvailable types:\n* `grafanaDashboard`\n* `grafanaDatasource`\n* `kafkaConnect`\n* `kafkaLogs`\n* `kafkaMirrorMaker`\n* `m3aggregator`\n* `m3dbMetrics`\n* `opensearchLogs`\n* `postgresqlMetrics`\n"
                }
            },
            "required": [
                "clusterId",
                "destinationServiceId",
                "engine",
                "serviceName",
                "sourceServiceId",
                "status",
                "type"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "destinationServiceId": {
                    "type": "string",
                    "description": "ID of the destination service.\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAll engines available exept `mongodb`.\n",
                    "willReplaceOnChanges": true
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Parameters for the integration.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "sourceServiceId": {
                    "type": "string",
                    "description": "ID of the source service.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Type of the integration.\nAvailable types:\n* `grafanaDashboard`\n* `grafanaDatasource`\n* `kafkaConnect`\n* `kafkaLogs`\n* `kafkaMirrorMaker`\n* `m3aggregator`\n* `m3dbMetrics`\n* `opensearchLogs`\n* `postgresqlMetrics`\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "destinationServiceId",
                "engine",
                "serviceName",
                "sourceServiceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "destinationServiceId": {
                        "type": "string",
                        "description": "ID of the destination service.\n",
                        "willReplaceOnChanges": true
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAll engines available exept `mongodb`.\n",
                        "willReplaceOnChanges": true
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Parameters for the integration.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceServiceId": {
                        "type": "string",
                        "description": "ID of the source service.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the integration.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the integration.\nAvailable types:\n* `grafanaDashboard`\n* `grafanaDatasource`\n* `kafkaConnect`\n* `kafkaLogs`\n* `kafkaMirrorMaker`\n* `m3aggregator`\n* `m3dbMetrics`\n* `opensearchLogs`\n* `postgresqlMetrics`\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/ipRestriction:IpRestriction": {
            "description": "Apply IP restrictions to an OVHcloud Managed Database cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst db = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    id: \"ZZZZ\",\n});\nconst iprestriction = new ovh.cloudprojectdatabase.IpRestriction(\"iprestriction\", {\n    serviceName: db.then(db =\u003e db.serviceName),\n    engine: db.then(db =\u003e db.engine),\n    clusterId: db.then(db =\u003e db.id),\n    ip: \"178.97.6.0/24\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\ndb = ovh.CloudProjectDatabase.get_database(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    id=\"ZZZZ\")\niprestriction = ovh.cloud_project_database.IpRestriction(\"iprestriction\",\n    service_name=db.service_name,\n    engine=db.engine,\n    cluster_id=db.id,\n    ip=\"178.97.6.0/24\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var db = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        Id = \"ZZZZ\",\n    });\n\n    var iprestriction = new Ovh.CloudProjectDatabase.IpRestriction(\"iprestriction\", new()\n    {\n        ServiceName = db.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        Engine = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Engine),\n        ClusterId = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        Ip = \"178.97.6.0/24\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdb, err := CloudProjectDatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tId:          \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProjectDatabase.NewIpRestriction(ctx, \"iprestriction\", \u0026CloudProjectDatabase.IpRestrictionArgs{\n\t\t\tServiceName: pulumi.String(db.ServiceName),\n\t\t\tEngine:      pulumi.String(db.Engine),\n\t\t\tClusterId:   pulumi.String(db.Id),\n\t\t\tIp:          pulumi.String(\"178.97.6.0/24\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.IpRestriction;\nimport com.pulumi.ovh.CloudProjectDatabase.IpRestrictionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var db = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .id(\"ZZZZ\")\n            .build());\n\n        var iprestriction = new IpRestriction(\"iprestriction\", IpRestrictionArgs.builder()        \n            .serviceName(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .engine(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.engine()))\n            .clusterId(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .ip(\"178.97.6.0/24\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  iprestriction:\n    type: ovh:CloudProjectDatabase:IpRestriction\n    properties:\n      serviceName: ${db.serviceName}\n      engine: ${db.engine}\n      clusterId: ${db.id}\n      ip: 178.97.6.0/24\nvariables:\n  db:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabase\n      Arguments:\n        serviceName: XXXX\n        engine: YYYY\n        id: ZZZZ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed database cluster IP restrictions can be imported using the `service_name`, `engine`, `cluster_id` and the `ip`, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/ipRestriction:IpRestriction my_ip_restriction service_name/engine/cluster_id/178.97.6.0/24\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the IP restriction.\n"
                }
            },
            "required": [
                "clusterId",
                "engine",
                "ip",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "ip",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpRestriction resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the IP restriction.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "description": "Authorized IP.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the IP restriction.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/kafkaAcl:KafkaAcl": {
            "description": "Creates an ACL for a kafka cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst kafka = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXX\",\n    engine: \"kafka\",\n    id: \"ZZZ\",\n});\nconst acl = new ovh.cloudprojectdatabase.KafkaAcl(\"acl\", {\n    serviceName: kafka.then(kafka =\u003e kafka.serviceName),\n    clusterId: kafka.then(kafka =\u003e kafka.id),\n    permission: \"read\",\n    topic: \"mytopic\",\n    username: \"johndoe\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nkafka = ovh.CloudProjectDatabase.get_database(service_name=\"XXX\",\n    engine=\"kafka\",\n    id=\"ZZZ\")\nacl = ovh.cloud_project_database.KafkaAcl(\"acl\",\n    service_name=kafka.service_name,\n    cluster_id=kafka.id,\n    permission=\"read\",\n    topic=\"mytopic\",\n    username=\"johndoe\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kafka = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"kafka\",\n        Id = \"ZZZ\",\n    });\n\n    var acl = new Ovh.CloudProjectDatabase.KafkaAcl(\"acl\", new()\n    {\n        ServiceName = kafka.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        ClusterId = kafka.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        Permission = \"read\",\n        Topic = \"mytopic\",\n        Username = \"johndoe\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tkafka, err := CloudProjectDatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"kafka\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProjectDatabase.NewKafkaAcl(ctx, \"acl\", \u0026CloudProjectDatabase.KafkaAclArgs{\n\t\t\tServiceName: pulumi.String(kafka.ServiceName),\n\t\t\tClusterId:   pulumi.String(kafka.Id),\n\t\t\tPermission:  pulumi.String(\"read\"),\n\t\t\tTopic:       pulumi.String(\"mytopic\"),\n\t\t\tUsername:    pulumi.String(\"johndoe\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.KafkaAcl;\nimport com.pulumi.ovh.CloudProjectDatabase.KafkaAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kafka = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"kafka\")\n            .id(\"ZZZ\")\n            .build());\n\n        var acl = new KafkaAcl(\"acl\", KafkaAclArgs.builder()        \n            .serviceName(kafka.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .clusterId(kafka.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .permission(\"read\")\n            .topic(\"mytopic\")\n            .username(\"johndoe\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  acl:\n    type: ovh:CloudProjectDatabase:KafkaAcl\n    properties:\n      serviceName: ${kafka.serviceName}\n      clusterId: ${kafka.id}\n      permission: read\n      topic: mytopic\n      username: johndoe\nvariables:\n  kafka:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabase\n      Arguments:\n        serviceName: XXX\n        engine: kafka\n        id: ZZZ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed kafka clusters ACLs can be imported using the `service_name`, `cluster_id` and `id` of the acl, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/kafkaAcl:KafkaAcl my_acl service_name/cluster_id/id\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission to give to this username on this topic.\nAvailable permissions:\n* `admin`\n* `read`\n* `write`\n* `readwrite`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "Topic affected by this ACL.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username affected by this ACL.\n"
                }
            },
            "required": [
                "clusterId",
                "permission",
                "serviceName",
                "topic",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "permission": {
                    "type": "string",
                    "description": "Permission to give to this username on this topic.\nAvailable permissions:\n* `admin`\n* `read`\n* `write`\n* `readwrite`\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "description": "Topic affected by this ACL.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Username affected by this ACL.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "permission",
                "serviceName",
                "topic",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaAcl resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "permission": {
                        "type": "string",
                        "description": "Permission to give to this username on this topic.\nAvailable permissions:\n* `admin`\n* `read`\n* `write`\n* `readwrite`\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic affected by this ACL.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Username affected by this ACL.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/kafkaTopic:KafkaTopic": {
            "description": "Creates a topic for a kafka cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst kafka = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXX\",\n    engine: \"kafka\",\n    id: \"ZZZ\",\n});\nconst topic = new ovh.cloudprojectdatabase.KafkaTopic(\"topic\", {\n    serviceName: kafka.then(kafka =\u003e kafka.serviceName),\n    clusterId: kafka.then(kafka =\u003e kafka.id),\n    minInsyncReplicas: 1,\n    partitions: 3,\n    replication: 2,\n    retentionBytes: 4,\n    retentionHours: 5,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nkafka = ovh.CloudProjectDatabase.get_database(service_name=\"XXX\",\n    engine=\"kafka\",\n    id=\"ZZZ\")\ntopic = ovh.cloud_project_database.KafkaTopic(\"topic\",\n    service_name=kafka.service_name,\n    cluster_id=kafka.id,\n    min_insync_replicas=1,\n    partitions=3,\n    replication=2,\n    retention_bytes=4,\n    retention_hours=5)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kafka = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"kafka\",\n        Id = \"ZZZ\",\n    });\n\n    var topic = new Ovh.CloudProjectDatabase.KafkaTopic(\"topic\", new()\n    {\n        ServiceName = kafka.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        ClusterId = kafka.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        MinInsyncReplicas = 1,\n        Partitions = 3,\n        Replication = 2,\n        RetentionBytes = 4,\n        RetentionHours = 5,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tkafka, err := CloudProjectDatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"kafka\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProjectDatabase.NewKafkaTopic(ctx, \"topic\", \u0026CloudProjectDatabase.KafkaTopicArgs{\n\t\t\tServiceName:       pulumi.String(kafka.ServiceName),\n\t\t\tClusterId:         pulumi.String(kafka.Id),\n\t\t\tMinInsyncReplicas: pulumi.Int(1),\n\t\t\tPartitions:        pulumi.Int(3),\n\t\t\tReplication:       pulumi.Int(2),\n\t\t\tRetentionBytes:    pulumi.Int(4),\n\t\t\tRetentionHours:    pulumi.Int(5),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.KafkaTopic;\nimport com.pulumi.ovh.CloudProjectDatabase.KafkaTopicArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kafka = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"kafka\")\n            .id(\"ZZZ\")\n            .build());\n\n        var topic = new KafkaTopic(\"topic\", KafkaTopicArgs.builder()        \n            .serviceName(kafka.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .clusterId(kafka.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .minInsyncReplicas(1)\n            .partitions(3)\n            .replication(2)\n            .retentionBytes(4)\n            .retentionHours(5)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  topic:\n    type: ovh:CloudProjectDatabase:KafkaTopic\n    properties:\n      serviceName: ${kafka.serviceName}\n      clusterId: ${kafka.id}\n      minInsyncReplicas: 1\n      partitions: 3\n      replication: 2\n      retentionBytes: 4\n      retentionHours: 5\nvariables:\n  kafka:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabase\n      Arguments:\n        serviceName: XXX\n        engine: kafka\n        id: ZZZ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed kafka clusters topics can be imported using the `service_name`, `cluster_id` and `id` of the topic, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/kafkaTopic:KafkaTopic my_topic service_name/cluster_id/id\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "minInsyncReplicas": {
                    "type": "integer",
                    "description": "Minimum insync replica accepted for this topic. Should be superior to 0\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the topic. No spaces allowed.\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "Number of partitions for this topic. Should be superior to 0\n"
                },
                "replication": {
                    "type": "integer",
                    "description": "Number of replication for this topic. Should be superior to 1\n"
                },
                "retentionBytes": {
                    "type": "integer",
                    "description": "Number of bytes for the retention of the data for this topic. Inferior to 0 means unlimited\n"
                },
                "retentionHours": {
                    "type": "integer",
                    "description": "Number of hours for the retention of the data for this topic. Should be superior to -2. Inferior to 0 means unlimited\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "clusterId",
                "minInsyncReplicas",
                "name",
                "partitions",
                "replication",
                "retentionBytes",
                "retentionHours",
                "serviceName"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "minInsyncReplicas": {
                    "type": "integer",
                    "description": "Minimum insync replica accepted for this topic. Should be superior to 0\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the topic. No spaces allowed.\n",
                    "willReplaceOnChanges": true
                },
                "partitions": {
                    "type": "integer",
                    "description": "Number of partitions for this topic. Should be superior to 0\n",
                    "willReplaceOnChanges": true
                },
                "replication": {
                    "type": "integer",
                    "description": "Number of replication for this topic. Should be superior to 1\n",
                    "willReplaceOnChanges": true
                },
                "retentionBytes": {
                    "type": "integer",
                    "description": "Number of bytes for the retention of the data for this topic. Inferior to 0 means unlimited\n",
                    "willReplaceOnChanges": true
                },
                "retentionHours": {
                    "type": "integer",
                    "description": "Number of hours for the retention of the data for this topic. Should be superior to -2. Inferior to 0 means unlimited\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaTopic resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "minInsyncReplicas": {
                        "type": "integer",
                        "description": "Minimum insync replica accepted for this topic. Should be superior to 0\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the topic. No spaces allowed.\n",
                        "willReplaceOnChanges": true
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "Number of partitions for this topic. Should be superior to 0\n",
                        "willReplaceOnChanges": true
                    },
                    "replication": {
                        "type": "integer",
                        "description": "Number of replication for this topic. Should be superior to 1\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionBytes": {
                        "type": "integer",
                        "description": "Number of bytes for the retention of the data for this topic. Inferior to 0 means unlimited\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionHours": {
                        "type": "integer",
                        "description": "Number of hours for the retention of the data for this topic. Should be superior to -2. Inferior to 0 means unlimited\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/m3DbNamespace:M3DbNamespace": {
            "description": "Creates a namespace for a M3DB cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst m3db = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXX\",\n    engine: \"m3db\",\n    id: \"ZZZ\",\n});\nconst namespace = new ovh.cloudprojectdatabase.M3DbNamespace(\"namespace\", {\n    serviceName: m3db.then(m3db =\u003e m3db.serviceName),\n    clusterId: m3db.then(m3db =\u003e m3db.id),\n    resolution: \"P2D\",\n    retentionPeriodDuration: \"PT48H\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nm3db = ovh.CloudProjectDatabase.get_database(service_name=\"XXX\",\n    engine=\"m3db\",\n    id=\"ZZZ\")\nnamespace = ovh.cloud_project_database.M3DbNamespace(\"namespace\",\n    service_name=m3db.service_name,\n    cluster_id=m3db.id,\n    resolution=\"P2D\",\n    retention_period_duration=\"PT48H\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var m3db = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"m3db\",\n        Id = \"ZZZ\",\n    });\n\n    var @namespace = new Ovh.CloudProjectDatabase.M3DbNamespace(\"namespace\", new()\n    {\n        ServiceName = m3db.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        ClusterId = m3db.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        Resolution = \"P2D\",\n        RetentionPeriodDuration = \"PT48H\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tm3db, err := CloudProjectDatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"m3db\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProjectDatabase.NewM3DbNamespace(ctx, \"namespace\", \u0026CloudProjectDatabase.M3DbNamespaceArgs{\n\t\t\tServiceName:             pulumi.String(m3db.ServiceName),\n\t\t\tClusterId:               pulumi.String(m3db.Id),\n\t\t\tResolution:              pulumi.String(\"P2D\"),\n\t\t\tRetentionPeriodDuration: pulumi.String(\"PT48H\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.M3DbNamespace;\nimport com.pulumi.ovh.CloudProjectDatabase.M3DbNamespaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var m3db = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"m3db\")\n            .id(\"ZZZ\")\n            .build());\n\n        var namespace = new M3DbNamespace(\"namespace\", M3DbNamespaceArgs.builder()        \n            .serviceName(m3db.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .clusterId(m3db.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .resolution(\"P2D\")\n            .retentionPeriodDuration(\"PT48H\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  namespace:\n    type: ovh:CloudProjectDatabase:M3DbNamespace\n    properties:\n      serviceName: ${m3db.serviceName}\n      clusterId: ${m3db.id}\n      resolution: P2D\n      retentionPeriodDuration: PT48H\nvariables:\n  m3db:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabase\n      Arguments:\n        serviceName: XXX\n        engine: m3db\n        id: ZZZ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed M3DB clusters namespaces can be imported using the `service_name`, `cluster_id` and `id` of the namespace, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/m3DbNamespace:M3DbNamespace my_namespace service_name/cluster_id/id\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the namespace.\n"
                },
                "resolution": {
                    "type": "string",
                    "description": "Resolution for an aggregated namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBlockDataExpirationDuration": {
                    "type": "string",
                    "description": "Controls how long we wait before expiring stale data. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBlockSizeDuration": {
                    "type": "string",
                    "description": "Controls how long to keep a block in memory before flushing to a fileset on disk. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBufferFutureDuration": {
                    "type": "string",
                    "description": "Controls how far into the future writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBufferPastDuration": {
                    "type": "string",
                    "description": "Controls how far into the past writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "description": "Controls the duration of time that M3DB will retain data for the namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "snapshotEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3DB will create snapshot files for this namespace.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of namespace.\n"
                },
                "writesToCommitLogEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3DB will include writes to this namespace in the commit log.\n"
                }
            },
            "required": [
                "clusterId",
                "name",
                "retentionBlockSizeDuration",
                "retentionPeriodDuration",
                "serviceName",
                "type"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the namespace.\n",
                    "willReplaceOnChanges": true
                },
                "resolution": {
                    "type": "string",
                    "description": "Resolution for an aggregated namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBlockDataExpirationDuration": {
                    "type": "string",
                    "description": "Controls how long we wait before expiring stale data. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBlockSizeDuration": {
                    "type": "string",
                    "description": "Controls how long to keep a block in memory before flushing to a fileset on disk. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBufferFutureDuration": {
                    "type": "string",
                    "description": "Controls how far into the future writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBufferPastDuration": {
                    "type": "string",
                    "description": "Controls how far into the past writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "description": "Controls the duration of time that M3DB will retain data for the namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "snapshotEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3DB will create snapshot files for this namespace.\n"
                },
                "writesToCommitLogEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3DB will include writes to this namespace in the commit log.\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "retentionPeriodDuration",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3DbNamespace resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the namespace.\n",
                        "willReplaceOnChanges": true
                    },
                    "resolution": {
                        "type": "string",
                        "description": "Resolution for an aggregated namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "retentionBlockDataExpirationDuration": {
                        "type": "string",
                        "description": "Controls how long we wait before expiring stale data. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "retentionBlockSizeDuration": {
                        "type": "string",
                        "description": "Controls how long to keep a block in memory before flushing to a fileset on disk. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "retentionBufferFutureDuration": {
                        "type": "string",
                        "description": "Controls how far into the future writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "retentionBufferPastDuration": {
                        "type": "string",
                        "description": "Controls how far into the past writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "retentionPeriodDuration": {
                        "type": "string",
                        "description": "Controls the duration of time that M3DB will retain data for the namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "snapshotEnabled": {
                        "type": "boolean",
                        "description": "Defines whether M3DB will create snapshot files for this namespace.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of namespace.\n"
                    },
                    "writesToCommitLogEnabled": {
                        "type": "boolean",
                        "description": "Defines whether M3DB will include writes to this namespace in the commit log.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/m3DbUser:M3DbUser": {
            "description": "\n\n\n## Import\n\nOVHcloud Managed M3DB clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/m3DbUser:M3DbUser my_user service_name/cluster_id/id\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "group": {
                    "type": "string",
                    "description": "Group of the user:\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "See Argument Reference above.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "type": "string",
                    "description": "Group of the user:\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "See Argument Reference above.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3DbUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "Group of the user:\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/mongoDbUser:MongoDbUser": {
            "description": "\n\n\n## Import\n\nOVHcloud Managed MongoDB clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/mongoDbUser:MongoDbUser my_user service_name/cluster_id/id\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "See Argument Reference above.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to.\nAvailable roles:\n* `backup`\n* `dbAdminAnyDatabase`\n* `readAnyDatabase`\n* `readWriteAnyDatabase`\n* `restore`\n* `userAdminAnyDatabase`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "See Argument Reference above.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to.\nAvailable roles:\n* `backup`\n* `dbAdminAnyDatabase`\n* `readAnyDatabase`\n* `readWriteAnyDatabase`\n* `restore`\n* `userAdminAnyDatabase`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MongoDbUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to.\nAvailable roles:\n* `backup`\n* `dbAdminAnyDatabase`\n* `readAnyDatabase`\n* `readWriteAnyDatabase`\n* `restore`\n* `userAdminAnyDatabase`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/opensearchPattern:OpensearchPattern": {
            "description": "Creates a pattern for a opensearch cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst opensearch = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXX\",\n    engine: \"opensearch\",\n    id: \"ZZZ\",\n});\nconst pattern = new ovh.cloudprojectdatabase.OpensearchPattern(\"pattern\", {\n    serviceName: opensearch.then(opensearch =\u003e opensearch.serviceName),\n    clusterId: opensearch.then(opensearch =\u003e opensearch.id),\n    maxIndexCount: 2,\n    pattern: \"logs_*\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nopensearch = ovh.CloudProjectDatabase.get_database(service_name=\"XXX\",\n    engine=\"opensearch\",\n    id=\"ZZZ\")\npattern = ovh.cloud_project_database.OpensearchPattern(\"pattern\",\n    service_name=opensearch.service_name,\n    cluster_id=opensearch.id,\n    max_index_count=2,\n    pattern=\"logs_*\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var opensearch = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"opensearch\",\n        Id = \"ZZZ\",\n    });\n\n    var pattern = new Ovh.CloudProjectDatabase.OpensearchPattern(\"pattern\", new()\n    {\n        ServiceName = opensearch.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        ClusterId = opensearch.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        MaxIndexCount = 2,\n        Pattern = \"logs_*\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topensearch, err := CloudProjectDatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"opensearch\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProjectDatabase.NewOpensearchPattern(ctx, \"pattern\", \u0026CloudProjectDatabase.OpensearchPatternArgs{\n\t\t\tServiceName:   pulumi.String(opensearch.ServiceName),\n\t\t\tClusterId:     pulumi.String(opensearch.Id),\n\t\t\tMaxIndexCount: pulumi.Int(2),\n\t\t\tPattern:       pulumi.String(\"logs_*\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.OpensearchPattern;\nimport com.pulumi.ovh.CloudProjectDatabase.OpensearchPatternArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var opensearch = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"opensearch\")\n            .id(\"ZZZ\")\n            .build());\n\n        var pattern = new OpensearchPattern(\"pattern\", OpensearchPatternArgs.builder()        \n            .serviceName(opensearch.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .clusterId(opensearch.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .maxIndexCount(2)\n            .pattern(\"logs_*\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  pattern:\n    type: ovh:CloudProjectDatabase:OpensearchPattern\n    properties:\n      serviceName: ${opensearch.serviceName}\n      clusterId: ${opensearch.id}\n      maxIndexCount: 2\n      pattern: logs_*\nvariables:\n  opensearch:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabase\n      Arguments:\n        serviceName: XXX\n        engine: opensearch\n        id: ZZZ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed opensearch clusters patterns can be imported using the `service_name`, `cluster_id` and `id` of the pattern, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/opensearchPattern:OpensearchPattern my_pattern service_name/cluster_id/id\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "maxIndexCount": {
                    "type": "integer",
                    "description": "Maximum number of index for this pattern.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern format.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "clusterId",
                "pattern",
                "serviceName"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "maxIndexCount": {
                    "type": "integer",
                    "description": "Maximum number of index for this pattern.\n",
                    "willReplaceOnChanges": true
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern format.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "pattern",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpensearchPattern resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxIndexCount": {
                        "type": "integer",
                        "description": "Maximum number of index for this pattern.\n",
                        "willReplaceOnChanges": true
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Pattern format.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/opensearchUser:OpensearchUser": {
            "description": "\n\n\n## Import\n\nOVHcloud Managed OpenSearch clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/opensearchUser:OpensearchUser my_user service_name/cluster_id/id\n```\n\n ",
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl"
                    },
                    "description": "Acls of the user.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username affected by this acl.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "See Argument Reference above.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl"
                    },
                    "description": "Acls of the user.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Username affected by this acl.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "See Argument Reference above.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpensearchUser resources.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl"
                        },
                        "description": "Acls of the user.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Username affected by this acl.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/postgresSqlUser:PostgresSqlUser": {
            "description": "\n\n\n## Import\n\nOVHcloud Managed PostgreSQL clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/postgresSqlUser:PostgresSqlUser my_user service_name/cluster_id/id\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to.\nAvailable roles:\n* `replication`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to.\nAvailable roles:\n* `replication`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PostgresSqlUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to.\nAvailable roles:\n* `replication`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/redisUser:RedisUser": {
            "description": "\n\n\n## Import\n\nOVHcloud Managed Redis clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/redisUser:RedisUser my_user service_name/cluster_id/id\n```\n\n ",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Categories of the user.\n"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Channels of the user.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Commands of the user.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "channels",
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Categories of the user.\n"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Channels of the user.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Commands of the user.\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RedisUser resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Categories of the user.\n"
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Channels of the user.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "commands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Commands of the user.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/user:User": {
            "description": "\n\n\n## Import\n\nOVHcloud Managed database clusters users can be imported using the `service_name`, `engine`, `cluster_id` and `id` of the user, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:CloudProjectDatabase/user:User my_user service_name/engine/cluster_id/id\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `cassandra`\n* `kafka`\n* `kafkaConnect`\n* `mysql`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "engine",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `cassandra`\n* `kafka`\n* `kafkaConnect`\n* `mysql`\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `cassandra`\n* `kafka`\n* `kafkaConnect`\n* `mysql`\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsInput:LogsInput": {
            "description": "Creates a dbaas logs input.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst logstash = ovh.Dbaas.getLogsInputEngine({\n    name: \"logstash\",\n    version: \"7.x\",\n});\nconst stream = new ovh.dbaas.LogsOutputGraylogStream(\"stream\", {\n    serviceName: \"....\",\n    title: \"my stream\",\n    description: \"my graylog stream\",\n});\nconst input = new ovh.dbaas.LogsInput(\"input\", {\n    serviceName: stream.serviceName,\n    description: stream.description,\n    title: stream.title,\n    engineId: logstash.then(logstash =\u003e logstash.id),\n    streamId: stream.id,\n    allowedNetworks: [\"10.0.0.0/16\"],\n    exposedPort: \"6154\",\n    nbInstance: 2,\n    configuration: {\n        logstash: {\n            inputSection: `  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n    ssl_key =\u003e \"/etc/ssl/private/server.key\"\n  }\n`,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nlogstash = ovh.Dbaas.get_logs_input_engine(name=\"logstash\",\n    version=\"7.x\")\nstream = ovh.dbaas.LogsOutputGraylogStream(\"stream\",\n    service_name=\"....\",\n    title=\"my stream\",\n    description=\"my graylog stream\")\ninput = ovh.dbaas.LogsInput(\"input\",\n    service_name=stream.service_name,\n    description=stream.description,\n    title=stream.title,\n    engine_id=logstash.id,\n    stream_id=stream.id,\n    allowed_networks=[\"10.0.0.0/16\"],\n    exposed_port=\"6154\",\n    nb_instance=2,\n    configuration=ovh.dbaas.LogsInputConfigurationArgs(\n        logstash=ovh.dbaas.LogsInputConfigurationLogstashArgs(\n            input_section=\"\"\"  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n    ssl_key =\u003e \"/etc/ssl/private/server.key\"\n  }\n\"\"\",\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var logstash = Ovh.Dbaas.GetLogsInputEngine.Invoke(new()\n    {\n        Name = \"logstash\",\n        Version = \"7.x\",\n    });\n\n    var stream = new Ovh.Dbaas.LogsOutputGraylogStream(\"stream\", new()\n    {\n        ServiceName = \"....\",\n        Title = \"my stream\",\n        Description = \"my graylog stream\",\n    });\n\n    var input = new Ovh.Dbaas.LogsInput(\"input\", new()\n    {\n        ServiceName = stream.ServiceName,\n        Description = stream.Description,\n        Title = stream.Title,\n        EngineId = logstash.Apply(getLogsInputEngineResult =\u003e getLogsInputEngineResult.Id),\n        StreamId = stream.Id,\n        AllowedNetworks = new[]\n        {\n            \"10.0.0.0/16\",\n        },\n        ExposedPort = \"6154\",\n        NbInstance = 2,\n        Configuration = new Ovh.Dbaas.Inputs.LogsInputConfigurationArgs\n        {\n            Logstash = new Ovh.Dbaas.Inputs.LogsInputConfigurationLogstashArgs\n            {\n                InputSection = @\"  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"\"/etc/ssl/private/server.crt\"\"\n    ssl_key =\u003e \"\"/etc/ssl/private/server.key\"\"\n  }\n\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlogstash, err := Dbaas.GetLogsInputEngine(ctx, \u0026dbaas.GetLogsInputEngineArgs{\n\t\t\tName:    pulumi.StringRef(\"logstash\"),\n\t\t\tVersion: pulumi.StringRef(\"7.x\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tstream, err := Dbaas.NewLogsOutputGraylogStream(ctx, \"stream\", \u0026Dbaas.LogsOutputGraylogStreamArgs{\n\t\t\tServiceName: pulumi.String(\"....\"),\n\t\t\tTitle:       pulumi.String(\"my stream\"),\n\t\t\tDescription: pulumi.String(\"my graylog stream\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Dbaas.NewLogsInput(ctx, \"input\", \u0026Dbaas.LogsInputArgs{\n\t\t\tServiceName: stream.ServiceName,\n\t\t\tDescription: stream.Description,\n\t\t\tTitle:       stream.Title,\n\t\t\tEngineId:    pulumi.String(logstash.Id),\n\t\t\tStreamId:    stream.ID(),\n\t\t\tAllowedNetworks: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.0.0.0/16\"),\n\t\t\t},\n\t\t\tExposedPort: pulumi.String(\"6154\"),\n\t\t\tNbInstance:  pulumi.Int(2),\n\t\t\tConfiguration: \u0026dbaas.LogsInputConfigurationArgs{\n\t\t\t\tLogstash: \u0026dbaas.LogsInputConfigurationLogstashArgs{\n\t\t\t\t\tInputSection: pulumi.String(fmt.Sprintf(`  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n    ssl_key =\u003e \"/etc/ssl/private/server.key\"\n  }\n`)),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsInputEngineArgs;\nimport com.pulumi.ovh.Dbaas.LogsOutputGraylogStream;\nimport com.pulumi.ovh.Dbaas.LogsOutputGraylogStreamArgs;\nimport com.pulumi.ovh.Dbaas.LogsInput;\nimport com.pulumi.ovh.Dbaas.LogsInputArgs;\nimport com.pulumi.ovh.Dbaas.inputs.LogsInputConfigurationArgs;\nimport com.pulumi.ovh.Dbaas.inputs.LogsInputConfigurationLogstashArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var logstash = DbaasFunctions.getLogsInputEngine(GetLogsInputEngineArgs.builder()\n            .name(\"logstash\")\n            .version(\"7.x\")\n            .build());\n\n        var stream = new LogsOutputGraylogStream(\"stream\", LogsOutputGraylogStreamArgs.builder()        \n            .serviceName(\"....\")\n            .title(\"my stream\")\n            .description(\"my graylog stream\")\n            .build());\n\n        var input = new LogsInput(\"input\", LogsInputArgs.builder()        \n            .serviceName(stream.serviceName())\n            .description(stream.description())\n            .title(stream.title())\n            .engineId(logstash.applyValue(getLogsInputEngineResult -\u003e getLogsInputEngineResult.id()))\n            .streamId(stream.id())\n            .allowedNetworks(\"10.0.0.0/16\")\n            .exposedPort(\"6154\")\n            .nbInstance(2)\n            .configuration(LogsInputConfigurationArgs.builder()\n                .logstash(LogsInputConfigurationLogstashArgs.builder()\n                    .inputSection(\"\"\"\n  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n    ssl_key =\u003e \"/etc/ssl/private/server.key\"\n  }\n                    \"\"\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  stream:\n    type: ovh:Dbaas:LogsOutputGraylogStream\n    properties:\n      serviceName: '....'\n      title: my stream\n      description: my graylog stream\n  input:\n    type: ovh:Dbaas:LogsInput\n    properties:\n      serviceName: ${stream.serviceName}\n      description: ${stream.description}\n      title: ${stream.title}\n      engineId: ${logstash.id}\n      streamId: ${stream.id}\n      allowedNetworks:\n        - 10.0.0.0/16\n      exposedPort: '6154'\n      nbInstance: 2\n      configuration:\n        logstash:\n          inputSection: |2\n              beats {\n                port =\u003e 6514\n                ssl =\u003e true\n                ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n                ssl_key =\u003e \"/etc/ssl/private/server.key\"\n              }\nvariables:\n  logstash:\n    fn::invoke:\n      Function: ovh:Dbaas:getLogsInputEngine\n      Arguments:\n        name: logstash\n        version: 7.x\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "configuration": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration",
                    "description": "Input configuration\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Input creation\n"
                },
                "description": {
                    "type": "string",
                    "description": "Input description\n"
                },
                "engineId": {
                    "type": "string",
                    "description": "Input engine ID\n"
                },
                "exposedPort": {
                    "type": "string",
                    "description": "Port\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname\n"
                },
                "inputId": {
                    "type": "string",
                    "description": "Input ID\n"
                },
                "isRestartRequired": {
                    "type": "boolean",
                    "description": "Indicate if input need to be restarted\n"
                },
                "nbInstance": {
                    "type": "integer",
                    "description": "Number of instance running\n"
                },
                "publicAddress": {
                    "type": "string",
                    "description": "Input IP address\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "service name\n"
                },
                "sslCertificate": {
                    "type": "string",
                    "description": "Input SSL certificate\n",
                    "secret": true
                },
                "status": {
                    "type": "string",
                    "description": "init: configuration required, pending: ready to start, running: available\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Associated Graylog stream\n"
                },
                "title": {
                    "type": "string",
                    "description": "Input title\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Input last update\n"
                }
            },
            "required": [
                "allowedNetworks",
                "configuration",
                "createdAt",
                "description",
                "engineId",
                "exposedPort",
                "hostname",
                "inputId",
                "isRestartRequired",
                "nbInstance",
                "publicAddress",
                "serviceName",
                "sslCertificate",
                "status",
                "streamId",
                "title",
                "updatedAt"
            ],
            "inputProperties": {
                "allowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "configuration": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration",
                    "description": "Input configuration\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Input description\n"
                },
                "engineId": {
                    "type": "string",
                    "description": "Input engine ID\n"
                },
                "exposedPort": {
                    "type": "string",
                    "description": "Port\n"
                },
                "nbInstance": {
                    "type": "integer",
                    "description": "Number of instance running\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "service name\n",
                    "willReplaceOnChanges": true
                },
                "streamId": {
                    "type": "string",
                    "description": "Associated Graylog stream\n"
                },
                "title": {
                    "type": "string",
                    "description": "Input title\n"
                }
            },
            "requiredInputs": [
                "configuration",
                "description",
                "engineId",
                "serviceName",
                "streamId",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsInput resources.\n",
                "properties": {
                    "allowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP blocks\n"
                    },
                    "configuration": {
                        "$ref": "#/types/ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration",
                        "description": "Input configuration\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Input creation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Input description\n"
                    },
                    "engineId": {
                        "type": "string",
                        "description": "Input engine ID\n"
                    },
                    "exposedPort": {
                        "type": "string",
                        "description": "Port\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Hostname\n"
                    },
                    "inputId": {
                        "type": "string",
                        "description": "Input ID\n"
                    },
                    "isRestartRequired": {
                        "type": "boolean",
                        "description": "Indicate if input need to be restarted\n"
                    },
                    "nbInstance": {
                        "type": "integer",
                        "description": "Number of instance running\n"
                    },
                    "publicAddress": {
                        "type": "string",
                        "description": "Input IP address\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "service name\n",
                        "willReplaceOnChanges": true
                    },
                    "sslCertificate": {
                        "type": "string",
                        "description": "Input SSL certificate\n",
                        "secret": true
                    },
                    "status": {
                        "type": "string",
                        "description": "init: configuration required, pending: ready to start, running: available\n"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Associated Graylog stream\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Input title\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Input last update\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsOutputGraylogStream:LogsOutputGraylogStream": {
            "properties": {
                "canAlert": {
                    "type": "boolean",
                    "description": "Indicates if the current user can create alert on the stream\n"
                },
                "coldStorageCompression": {
                    "type": "string",
                    "description": "Cold storage compression method\n"
                },
                "coldStorageContent": {
                    "type": "string",
                    "description": "ColdStorage content\n"
                },
                "coldStorageEnabled": {
                    "type": "boolean",
                    "description": "Is Cold storage enabled?\n"
                },
                "coldStorageNotifyEnabled": {
                    "type": "boolean",
                    "description": "Notify on new Cold storage archive\n"
                },
                "coldStorageRetention": {
                    "type": "integer",
                    "description": "Cold storage retention in year\n"
                },
                "coldStorageTarget": {
                    "type": "string",
                    "description": "ColdStorage destination\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Stream creation\n"
                },
                "description": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "indexingEnabled": {
                    "type": "boolean",
                    "description": "Enable ES indexing\n"
                },
                "indexingMaxSize": {
                    "type": "integer",
                    "description": "Maximum indexing size (in GB)\n"
                },
                "indexingNotifyEnabled": {
                    "type": "boolean",
                    "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to edit entry\n"
                },
                "isShareable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to share entry\n"
                },
                "nbAlertCondition": {
                    "type": "integer",
                    "description": "Number of alert condition\n"
                },
                "nbArchive": {
                    "type": "integer",
                    "description": "Number of coldstored archives\n"
                },
                "parentStreamId": {
                    "type": "string",
                    "description": "Parent stream ID\n"
                },
                "pauseIndexingOnMaxSize": {
                    "type": "boolean",
                    "description": "If set, pause indexing when maximum size is reach\n"
                },
                "retentionId": {
                    "type": "string",
                    "description": "Retention ID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Stream ID\n"
                },
                "title": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Stream last update\n"
                },
                "webSocketEnabled": {
                    "type": "boolean",
                    "description": "Enable Websocket\n"
                }
            },
            "required": [
                "canAlert",
                "coldStorageCompression",
                "coldStorageContent",
                "coldStorageEnabled",
                "coldStorageNotifyEnabled",
                "coldStorageRetention",
                "coldStorageTarget",
                "createdAt",
                "description",
                "indexingEnabled",
                "indexingMaxSize",
                "indexingNotifyEnabled",
                "isEditable",
                "isShareable",
                "nbAlertCondition",
                "nbArchive",
                "pauseIndexingOnMaxSize",
                "retentionId",
                "serviceName",
                "streamId",
                "title",
                "updatedAt",
                "webSocketEnabled"
            ],
            "inputProperties": {
                "coldStorageCompression": {
                    "type": "string",
                    "description": "Cold storage compression method\n"
                },
                "coldStorageContent": {
                    "type": "string",
                    "description": "ColdStorage content\n"
                },
                "coldStorageEnabled": {
                    "type": "boolean",
                    "description": "Is Cold storage enabled?\n"
                },
                "coldStorageNotifyEnabled": {
                    "type": "boolean",
                    "description": "Notify on new Cold storage archive\n"
                },
                "coldStorageRetention": {
                    "type": "integer",
                    "description": "Cold storage retention in year\n"
                },
                "coldStorageTarget": {
                    "type": "string",
                    "description": "ColdStorage destination\n"
                },
                "description": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "indexingEnabled": {
                    "type": "boolean",
                    "description": "Enable ES indexing\n"
                },
                "indexingMaxSize": {
                    "type": "integer",
                    "description": "Maximum indexing size (in GB)\n"
                },
                "indexingNotifyEnabled": {
                    "type": "boolean",
                    "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                },
                "parentStreamId": {
                    "type": "string",
                    "description": "Parent stream ID\n",
                    "willReplaceOnChanges": true
                },
                "pauseIndexingOnMaxSize": {
                    "type": "boolean",
                    "description": "If set, pause indexing when maximum size is reach\n"
                },
                "retentionId": {
                    "type": "string",
                    "description": "Retention ID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "title": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "webSocketEnabled": {
                    "type": "boolean",
                    "description": "Enable Websocket\n"
                }
            },
            "requiredInputs": [
                "description",
                "serviceName",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsOutputGraylogStream resources.\n",
                "properties": {
                    "canAlert": {
                        "type": "boolean",
                        "description": "Indicates if the current user can create alert on the stream\n"
                    },
                    "coldStorageCompression": {
                        "type": "string",
                        "description": "Cold storage compression method\n"
                    },
                    "coldStorageContent": {
                        "type": "string",
                        "description": "ColdStorage content\n"
                    },
                    "coldStorageEnabled": {
                        "type": "boolean",
                        "description": "Is Cold storage enabled?\n"
                    },
                    "coldStorageNotifyEnabled": {
                        "type": "boolean",
                        "description": "Notify on new Cold storage archive\n"
                    },
                    "coldStorageRetention": {
                        "type": "integer",
                        "description": "Cold storage retention in year\n"
                    },
                    "coldStorageTarget": {
                        "type": "string",
                        "description": "ColdStorage destination\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Stream creation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "indexingEnabled": {
                        "type": "boolean",
                        "description": "Enable ES indexing\n"
                    },
                    "indexingMaxSize": {
                        "type": "integer",
                        "description": "Maximum indexing size (in GB)\n"
                    },
                    "indexingNotifyEnabled": {
                        "type": "boolean",
                        "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "isShareable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to share entry\n"
                    },
                    "nbAlertCondition": {
                        "type": "integer",
                        "description": "Number of alert condition\n"
                    },
                    "nbArchive": {
                        "type": "integer",
                        "description": "Number of coldstored archives\n"
                    },
                    "parentStreamId": {
                        "type": "string",
                        "description": "Parent stream ID\n",
                        "willReplaceOnChanges": true
                    },
                    "pauseIndexingOnMaxSize": {
                        "type": "boolean",
                        "description": "If set, pause indexing when maximum size is reach\n"
                    },
                    "retentionId": {
                        "type": "string",
                        "description": "Retention ID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Stream ID\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Stream last update\n"
                    },
                    "webSocketEnabled": {
                        "type": "boolean",
                        "description": "Enable Websocket\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/cephAcl:CephAcl": {
            "description": "Add a new access ACL for the given network/mask.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst my-ceph = ovh.Dedicated.getCeph({\n    serviceName: \"94d423da-0e55-45f2-9812-836460a19939\",\n});\nconst my_acl = new ovh.dedicated.CephAcl(\"my-acl\", {\n    serviceName: my_ceph.then(my_ceph =\u003e my_ceph.id),\n    network: \"1.2.3.4\",\n    netmask: \"255.255.255.255\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nmy_ceph = ovh.Dedicated.get_ceph(service_name=\"94d423da-0e55-45f2-9812-836460a19939\")\nmy_acl = ovh.dedicated.CephAcl(\"my-acl\",\n    service_name=my_ceph.id,\n    network=\"1.2.3.4\",\n    netmask=\"255.255.255.255\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var my_ceph = Ovh.Dedicated.GetCeph.Invoke(new()\n    {\n        ServiceName = \"94d423da-0e55-45f2-9812-836460a19939\",\n    });\n\n    var my_acl = new Ovh.Dedicated.CephAcl(\"my-acl\", new()\n    {\n        ServiceName = my_ceph.Apply(getCephResult =\u003e getCephResult).Apply(my_ceph =\u003e my_ceph.Apply(getCephResult =\u003e getCephResult.Id)),\n        Network = \"1.2.3.4\",\n        Netmask = \"255.255.255.255\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmy_ceph, err := Dedicated.GetCeph(ctx, \u0026dedicated.GetCephArgs{\n\t\t\tServiceName: \"94d423da-0e55-45f2-9812-836460a19939\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Dedicated.NewCephAcl(ctx, \"my-acl\", \u0026Dedicated.CephAclArgs{\n\t\t\tServiceName: pulumi.String(my_ceph.Id),\n\t\t\tNetwork:     pulumi.String(\"1.2.3.4\"),\n\t\t\tNetmask:     pulumi.String(\"255.255.255.255\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetCephArgs;\nimport com.pulumi.ovh.Dedicated.CephAcl;\nimport com.pulumi.ovh.Dedicated.CephAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var my-ceph = DedicatedFunctions.getCeph(GetCephArgs.builder()\n            .serviceName(\"94d423da-0e55-45f2-9812-836460a19939\")\n            .build());\n\n        var my_acl = new CephAcl(\"my-acl\", CephAclArgs.builder()        \n            .serviceName(my_ceph.id())\n            .network(\"1.2.3.4\")\n            .netmask(\"255.255.255.255\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  my-acl:\n    type: ovh:Dedicated:CephAcl\n    properties:\n      serviceName: ${[\"my-ceph\"].id}\n      network: 1.2.3.4\n      netmask: 255.255.255.255\nvariables:\n  my-ceph:\n    fn::invoke:\n      Function: ovh:Dedicated:getCeph\n      Arguments:\n        serviceName: 94d423da-0e55-45f2-9812-836460a19939\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "family": {
                    "type": "string",
                    "description": "IP family. `IPv4` or `IPv6`\n"
                },
                "netmask": {
                    "type": "string",
                    "description": "The network mask to apply\n"
                },
                "network": {
                    "type": "string",
                    "description": "The network IP to authorize\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated CEPH\n"
                }
            },
            "required": [
                "family",
                "netmask",
                "network",
                "serviceName"
            ],
            "inputProperties": {
                "netmask": {
                    "type": "string",
                    "description": "The network mask to apply\n",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "description": "The network IP to authorize\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated CEPH\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "netmask",
                "network",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CephAcl resources.\n",
                "properties": {
                    "family": {
                        "type": "string",
                        "description": "IP family. `IPv4` or `IPv6`\n"
                    },
                    "netmask": {
                        "type": "string",
                        "description": "The network mask to apply\n",
                        "willReplaceOnChanges": true
                    },
                    "network": {
                        "type": "string",
                        "description": "The network IP to authorize\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated CEPH\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/nasHAPartition:NasHAPartition": {
            "description": "Provides a resource for managing partitions on HA-NAS services\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst my_partition = new ovh.Dedicated.NasHAPartition(\"my-partition\", {\n    protocol: \"NFS\",\n    serviceName: \"zpool-12345\",\n    size: 20,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmy_partition = ovh.dedicated.NasHAPartition(\"my-partition\",\n    protocol=\"NFS\",\n    service_name=\"zpool-12345\",\n    size=20)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var my_partition = new Ovh.Dedicated.NasHAPartition(\"my-partition\", new()\n    {\n        Protocol = \"NFS\",\n        ServiceName = \"zpool-12345\",\n        Size = 20,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Dedicated.NewNasHAPartition(ctx, \"my-partition\", \u0026Dedicated.NasHAPartitionArgs{\n\t\t\tProtocol:    pulumi.String(\"NFS\"),\n\t\t\tServiceName: pulumi.String(\"zpool-12345\"),\n\t\t\tSize:        pulumi.Int(20),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.NasHAPartition;\nimport com.pulumi.ovh.Dedicated.NasHAPartitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var my_partition = new NasHAPartition(\"my-partition\", NasHAPartitionArgs.builder()        \n            .protocol(\"NFS\")\n            .serviceName(\"zpool-12345\")\n            .size(20)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  my-partition:\n    type: ovh:Dedicated:NasHAPartition\n    properties:\n      protocol: NFS\n      serviceName: zpool-12345\n      size: 20\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nHA-NAS can be imported using the `{service_name}/{name}`, e.g.\n\n\n\n```sh\n $ pulumi import ovh:Dedicated/nasHAPartition:NasHAPartition my-partition zpool-12345/my-partition`\n```\n\n ",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "description": "Percentage of partition space used in %\n"
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the partition\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the partition\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "one of \"NFS\", \"CIFS\" or \"NFS_CIFS\"\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n"
                },
                "size": {
                    "type": "integer",
                    "description": "size of the partition in GB\n"
                },
                "usedBySnapshots": {
                    "type": "integer",
                    "description": "Percentage of partition space used by snapshots in %\n"
                }
            },
            "required": [
                "capacity",
                "name",
                "protocol",
                "serviceName",
                "size",
                "usedBySnapshots"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A brief description of the partition\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the partition\n",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "description": "one of \"NFS\", \"CIFS\" or \"NFS_CIFS\"\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "size of the partition in GB\n"
                }
            },
            "requiredInputs": [
                "protocol",
                "serviceName",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NasHAPartition resources.\n",
                "properties": {
                    "capacity": {
                        "type": "integer",
                        "description": "Percentage of partition space used in %\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A brief description of the partition\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the partition\n",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "string",
                        "description": "one of \"NFS\", \"CIFS\" or \"NFS_CIFS\"\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "size of the partition in GB\n"
                    },
                    "usedBySnapshots": {
                        "type": "integer",
                        "description": "Percentage of partition space used by snapshots in %\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/nasHAPartitionAccess:NasHAPartitionAccess": {
            "description": "Provides a resource for managing access rights to partitions on HA-NAS services\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst my_partition = new ovh.Dedicated.NasHAPartitionAccess(\"my-partition\", {\n    ip: \"123.123.123.123/32\",\n    partitionName: \"my-partition\",\n    serviceName: \"zpool-12345\",\n    type: \"readwrite\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmy_partition = ovh.dedicated.NasHAPartitionAccess(\"my-partition\",\n    ip=\"123.123.123.123/32\",\n    partition_name=\"my-partition\",\n    service_name=\"zpool-12345\",\n    type=\"readwrite\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var my_partition = new Ovh.Dedicated.NasHAPartitionAccess(\"my-partition\", new()\n    {\n        Ip = \"123.123.123.123/32\",\n        PartitionName = \"my-partition\",\n        ServiceName = \"zpool-12345\",\n        Type = \"readwrite\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Dedicated.NewNasHAPartitionAccess(ctx, \"my-partition\", \u0026Dedicated.NasHAPartitionAccessArgs{\n\t\t\tIp:            pulumi.String(\"123.123.123.123/32\"),\n\t\t\tPartitionName: pulumi.String(\"my-partition\"),\n\t\t\tServiceName:   pulumi.String(\"zpool-12345\"),\n\t\t\tType:          pulumi.String(\"readwrite\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.NasHAPartitionAccess;\nimport com.pulumi.ovh.Dedicated.NasHAPartitionAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var my_partition = new NasHAPartitionAccess(\"my-partition\", NasHAPartitionAccessArgs.builder()        \n            .ip(\"123.123.123.123/32\")\n            .partitionName(\"my-partition\")\n            .serviceName(\"zpool-12345\")\n            .type(\"readwrite\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  my-partition:\n    type: ovh:Dedicated:NasHAPartitionAccess\n    properties:\n      ip: 123.123.123.123/32\n      partitionName: my-partition\n      serviceName: zpool-12345\n      type: readwrite\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nHA-NAS partition access can be imported using the `{service_name}/{partition_name}/{ip}`, e.g.\n\n\n\n```sh\n $ pulumi import ovh:Dedicated/nasHAPartitionAccess:NasHAPartitionAccess my-partition zpool-12345/my-partition/123.123.123.123%2F32`\n```\n\n ",
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "ip block in x.x.x.x/x format\n"
                },
                "partitionName": {
                    "type": "string",
                    "description": "name of the partition\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n"
                },
                "type": {
                    "type": "string",
                    "description": "one of \"readwrite\", \"readonly\"\n"
                }
            },
            "required": [
                "ip",
                "partitionName",
                "serviceName"
            ],
            "inputProperties": {
                "ip": {
                    "type": "string",
                    "description": "ip block in x.x.x.x/x format\n",
                    "willReplaceOnChanges": true
                },
                "partitionName": {
                    "type": "string",
                    "description": "name of the partition\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "one of \"readwrite\", \"readonly\"\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ip",
                "partitionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NasHAPartitionAccess resources.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "ip block in x.x.x.x/x format\n",
                        "willReplaceOnChanges": true
                    },
                    "partitionName": {
                        "type": "string",
                        "description": "name of the partition\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "one of \"readwrite\", \"readonly\"\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/nasHAPartitionSnapshot:NasHAPartitionSnapshot": {
            "description": "Provides a resource for managing **snapshot** to partitions on HA-NAS services\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst my_partition = new ovh.Dedicated.NasHAPartitionSnapshot(\"my-partition\", {\n    partitionName: \"my-partition\",\n    serviceName: \"zpool-12345\",\n    type: \"day-3\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmy_partition = ovh.dedicated.NasHAPartitionSnapshot(\"my-partition\",\n    partition_name=\"my-partition\",\n    service_name=\"zpool-12345\",\n    type=\"day-3\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var my_partition = new Ovh.Dedicated.NasHAPartitionSnapshot(\"my-partition\", new()\n    {\n        PartitionName = \"my-partition\",\n        ServiceName = \"zpool-12345\",\n        Type = \"day-3\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Dedicated.NewNasHAPartitionSnapshot(ctx, \"my-partition\", \u0026Dedicated.NasHAPartitionSnapshotArgs{\n\t\t\tPartitionName: pulumi.String(\"my-partition\"),\n\t\t\tServiceName:   pulumi.String(\"zpool-12345\"),\n\t\t\tType:          pulumi.String(\"day-3\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.NasHAPartitionSnapshot;\nimport com.pulumi.ovh.Dedicated.NasHAPartitionSnapshotArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var my_partition = new NasHAPartitionSnapshot(\"my-partition\", NasHAPartitionSnapshotArgs.builder()        \n            .partitionName(\"my-partition\")\n            .serviceName(\"zpool-12345\")\n            .type(\"day-3\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  my-partition:\n    type: ovh:Dedicated:NasHAPartitionSnapshot\n    properties:\n      partitionName: my-partition\n      serviceName: zpool-12345\n      type: day-3\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nHA-NAS partition snapshot can be imported using the `{service_name}/{partition_name}/{type}`, e.g.\n\n\n\n```sh\n $ pulumi import ovh:Dedicated/nasHAPartitionSnapshot:NasHAPartitionSnapshot my-partition zpool-12345/my-partition/day-3`\n```\n\n ",
            "properties": {
                "partitionName": {
                    "type": "string",
                    "description": "name of the partition\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n"
                },
                "type": {
                    "type": "string",
                    "description": "Snapshot interval, allowed : day-1, day-2, day-3, day-7, hour-1, hour-6\n"
                }
            },
            "required": [
                "partitionName",
                "serviceName",
                "type"
            ],
            "inputProperties": {
                "partitionName": {
                    "type": "string",
                    "description": "name of the partition\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Snapshot interval, allowed : day-1, day-2, day-3, day-7, hour-1, hour-6\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "partitionName",
                "serviceName",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NasHAPartitionSnapshot resources.\n",
                "properties": {
                    "partitionName": {
                        "type": "string",
                        "description": "name of the partition\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Snapshot interval, allowed : day-1, day-2, day-3, day-7, hour-1, hour-6\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverInstallTask:ServerInstallTask": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rescue = ovh.Dedicated.getServerBoots({\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    bootType: \"rescue\",\n});\nconst key = new ovh.me.SshKey(\"key\", {\n    keyName: \"mykey\",\n    key: \"ssh-ed25519 AAAAC3...\",\n});\nconst debian = new ovh.me.InstallationTemplate(\"debian\", {\n    baseTemplateName: \"debian11_64\",\n    templateName: \"mydebian11\",\n    defaultLanguage: \"en\",\n    customization: {\n        sshKeyName: key.keyName,\n    },\n});\nconst serverInstall = new ovh.dedicated.ServerInstallTask(\"serverInstall\", {\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    templateName: debian.templateName,\n    bootidOnDestroy: rescue.then(rescue =\u003e rescue.results?[0]),\n    details: {\n        customHostname: \"mytest\",\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nrescue = ovh.Dedicated.get_server_boots(service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    boot_type=\"rescue\")\nkey = ovh.me.SshKey(\"key\",\n    key_name=\"mykey\",\n    key=\"ssh-ed25519 AAAAC3...\")\ndebian = ovh.me.InstallationTemplate(\"debian\",\n    base_template_name=\"debian11_64\",\n    template_name=\"mydebian11\",\n    default_language=\"en\",\n    customization=ovh.me.InstallationTemplateCustomizationArgs(\n        ssh_key_name=key.key_name,\n    ))\nserver_install = ovh.dedicated.ServerInstallTask(\"serverInstall\",\n    service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    template_name=debian.template_name,\n    bootid_on_destroy=rescue.results[0],\n    details=ovh.dedicated.ServerInstallTaskDetailsArgs(\n        custom_hostname=\"mytest\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rescue = Ovh.Dedicated.GetServerBoots.Invoke(new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n        BootType = \"rescue\",\n    });\n\n    var key = new Ovh.Me.SshKey(\"key\", new()\n    {\n        KeyName = \"mykey\",\n        Key = \"ssh-ed25519 AAAAC3...\",\n    });\n\n    var debian = new Ovh.Me.InstallationTemplate(\"debian\", new()\n    {\n        BaseTemplateName = \"debian11_64\",\n        TemplateName = \"mydebian11\",\n        DefaultLanguage = \"en\",\n        Customization = new Ovh.Me.Inputs.InstallationTemplateCustomizationArgs\n        {\n            SshKeyName = key.KeyName,\n        },\n    });\n\n    var serverInstall = new Ovh.Dedicated.ServerInstallTask(\"serverInstall\", new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n        TemplateName = debian.TemplateName,\n        BootidOnDestroy = rescue.Apply(getServerBootsResult =\u003e getServerBootsResult.Results[0]),\n        Details = new Ovh.Dedicated.Inputs.ServerInstallTaskDetailsArgs\n        {\n            CustomHostname = \"mytest\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dedicated\"\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\trescue, err := Dedicated.GetServerBoots(ctx, \u0026dedicated.GetServerBootsArgs{\n\t\t\tServiceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n\t\t\tBootType:    pulumi.StringRef(\"rescue\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tkey, err := Me.NewSshKey(ctx, \"key\", \u0026Me.SshKeyArgs{\n\t\t\tKeyName: pulumi.String(\"mykey\"),\n\t\t\tKey:     pulumi.String(\"ssh-ed25519 AAAAC3...\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdebian, err := Me.NewInstallationTemplate(ctx, \"debian\", \u0026Me.InstallationTemplateArgs{\n\t\t\tBaseTemplateName: pulumi.String(\"debian11_64\"),\n\t\t\tTemplateName:     pulumi.String(\"mydebian11\"),\n\t\t\tDefaultLanguage:  pulumi.String(\"en\"),\n\t\t\tCustomization: \u0026me.InstallationTemplateCustomizationArgs{\n\t\t\t\tSshKeyName: key.KeyName,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Dedicated.NewServerInstallTask(ctx, \"serverInstall\", \u0026Dedicated.ServerInstallTaskArgs{\n\t\t\tServiceName:     pulumi.String(\"nsxxxxxxx.ip-xx-xx-xx.eu\"),\n\t\t\tTemplateName:    debian.TemplateName,\n\t\t\tBootidOnDestroy: pulumi.Int(rescue.Results[0]),\n\t\t\tDetails: \u0026dedicated.ServerInstallTaskDetailsArgs{\n\t\t\t\tCustomHostname: pulumi.String(\"mytest\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetServerBootsArgs;\nimport com.pulumi.ovh.Me.SshKey;\nimport com.pulumi.ovh.Me.SshKeyArgs;\nimport com.pulumi.ovh.Me.InstallationTemplate;\nimport com.pulumi.ovh.Me.InstallationTemplateArgs;\nimport com.pulumi.ovh.Me.inputs.InstallationTemplateCustomizationArgs;\nimport com.pulumi.ovh.Dedicated.ServerInstallTask;\nimport com.pulumi.ovh.Dedicated.ServerInstallTaskArgs;\nimport com.pulumi.ovh.Dedicated.inputs.ServerInstallTaskDetailsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rescue = DedicatedFunctions.getServerBoots(GetServerBootsArgs.builder()\n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .bootType(\"rescue\")\n            .build());\n\n        var key = new SshKey(\"key\", SshKeyArgs.builder()        \n            .keyName(\"mykey\")\n            .key(\"ssh-ed25519 AAAAC3...\")\n            .build());\n\n        var debian = new InstallationTemplate(\"debian\", InstallationTemplateArgs.builder()        \n            .baseTemplateName(\"debian11_64\")\n            .templateName(\"mydebian11\")\n            .defaultLanguage(\"en\")\n            .customization(InstallationTemplateCustomizationArgs.builder()\n                .sshKeyName(key.keyName())\n                .build())\n            .build());\n\n        var serverInstall = new ServerInstallTask(\"serverInstall\", ServerInstallTaskArgs.builder()        \n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .templateName(debian.templateName())\n            .bootidOnDestroy(rescue.applyValue(getServerBootsResult -\u003e getServerBootsResult.results()[0]))\n            .details(ServerInstallTaskDetailsArgs.builder()\n                .customHostname(\"mytest\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  key:\n    type: ovh:Me:SshKey\n    properties:\n      keyName: mykey\n      key: ssh-ed25519 AAAAC3...\n  debian:\n    type: ovh:Me:InstallationTemplate\n    properties:\n      baseTemplateName: debian11_64\n      templateName: mydebian11\n      defaultLanguage: en\n      customization:\n        sshKeyName: ${key.keyName}\n  serverInstall:\n    type: ovh:Dedicated:ServerInstallTask\n    properties:\n      serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n      templateName: ${debian.templateName}\n      bootidOnDestroy: ${rescue.results[0]}\n      details:\n        customHostname: mytest\nvariables:\n  rescue:\n    fn::invoke:\n      Function: ovh:Dedicated:getServerBoots\n      Arguments:\n        serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n        bootType: rescue\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "bootidOnDestroy": {
                    "type": "integer",
                    "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                },
                "comment": {
                    "type": "string",
                    "description": "Details of this task. (should be `Install asked`)\n"
                },
                "details": {
                    "$ref": "#/types/ovh:Dedicated/ServerInstallTaskDetails:ServerInstallTaskDetails",
                    "description": "see `details` block below.\n"
                },
                "doneDate": {
                    "type": "string",
                    "description": "Completion date in RFC3339 format.\n"
                },
                "function": {
                    "type": "string",
                    "description": "Function name (should be `hardInstall`).\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update in RFC3339 format.\n"
                },
                "partitionSchemeName": {
                    "type": "string",
                    "description": "Partition scheme name.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Task creation date in RFC3339 format.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Task status (should be `done`)\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name.\n"
                }
            },
            "required": [
                "comment",
                "doneDate",
                "function",
                "lastUpdate",
                "serviceName",
                "startDate",
                "status",
                "templateName"
            ],
            "inputProperties": {
                "bootidOnDestroy": {
                    "type": "integer",
                    "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                },
                "details": {
                    "$ref": "#/types/ovh:Dedicated/ServerInstallTaskDetails:ServerInstallTaskDetails",
                    "description": "see `details` block below.\n",
                    "willReplaceOnChanges": true
                },
                "partitionSchemeName": {
                    "type": "string",
                    "description": "Partition scheme name.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n",
                    "willReplaceOnChanges": true
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerInstallTask resources.\n",
                "properties": {
                    "bootidOnDestroy": {
                        "type": "integer",
                        "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Details of this task. (should be `Install asked`)\n"
                    },
                    "details": {
                        "$ref": "#/types/ovh:Dedicated/ServerInstallTaskDetails:ServerInstallTaskDetails",
                        "description": "see `details` block below.\n",
                        "willReplaceOnChanges": true
                    },
                    "doneDate": {
                        "type": "string",
                        "description": "Completion date in RFC3339 format.\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "Function name (should be `hardInstall`).\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update in RFC3339 format.\n"
                    },
                    "partitionSchemeName": {
                        "type": "string",
                        "description": "Partition scheme name.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Task creation date in RFC3339 format.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Task status (should be `done`)\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverNetworking:ServerNetworking": {
            "description": "Manage dedicated server networking interface on SCALE and HIGH-GRADE range.\n\n\n## Import\n\nA dedicated server networking configuration can be imported using the `service_name`. bash\n\n```sh\n $ pulumi import ovh:Dedicated/serverNetworking:ServerNetworking server service_name\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Operation description.\n"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface"
                    },
                    "description": "Interface or interfaces aggregation.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server. The full list of available dedicated servers can be found using the `ovh.getServers` datasource.\n"
                },
                "status": {
                    "type": "string",
                    "description": "status of the networking configuration (should be `active`).\n"
                }
            },
            "required": [
                "description",
                "interfaces",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface"
                    },
                    "description": "Interface or interfaces aggregation.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server. The full list of available dedicated servers can be found using the `ovh.getServers` datasource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "interfaces",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerNetworking resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Operation description.\n"
                    },
                    "interfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface"
                        },
                        "description": "Interface or interfaces aggregation.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server. The full list of available dedicated servers can be found using the `ovh.getServers` datasource.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "status of the networking configuration (should be `active`).\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverRebootTask:ServerRebootTask": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rescue = ovh.Dedicated.getServerBoots({\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    bootType: \"rescue\",\n    kernel: \"rescue64-pro\",\n});\nconst serverOnRescue = new ovh.dedicated.ServerUpdate(\"serverOnRescue\", {\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    bootId: rescue.then(rescue =\u003e rescue.results?[0]),\n    monitoring: true,\n    state: \"ok\",\n});\nconst serverReboot = new ovh.dedicated.ServerRebootTask(\"serverReboot\", {\n    serviceName: rescue.then(rescue =\u003e rescue.serviceName),\n    keepers: [serverOnRescue.bootId],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nrescue = ovh.Dedicated.get_server_boots(service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    boot_type=\"rescue\",\n    kernel=\"rescue64-pro\")\nserver_on_rescue = ovh.dedicated.ServerUpdate(\"serverOnRescue\",\n    service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    boot_id=rescue.results[0],\n    monitoring=True,\n    state=\"ok\")\nserver_reboot = ovh.dedicated.ServerRebootTask(\"serverReboot\",\n    service_name=rescue.service_name,\n    keepers=[server_on_rescue.boot_id])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rescue = Ovh.Dedicated.GetServerBoots.Invoke(new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n        BootType = \"rescue\",\n        Kernel = \"rescue64-pro\",\n    });\n\n    var serverOnRescue = new Ovh.Dedicated.ServerUpdate(\"serverOnRescue\", new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n        BootId = rescue.Apply(getServerBootsResult =\u003e getServerBootsResult.Results[0]),\n        Monitoring = true,\n        State = \"ok\",\n    });\n\n    var serverReboot = new Ovh.Dedicated.ServerRebootTask(\"serverReboot\", new()\n    {\n        ServiceName = rescue.Apply(getServerBootsResult =\u003e getServerBootsResult.ServiceName),\n        Keepers = new[]\n        {\n            serverOnRescue.BootId,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\trescue, err := Dedicated.GetServerBoots(ctx, \u0026dedicated.GetServerBootsArgs{\n\t\t\tServiceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n\t\t\tBootType:    pulumi.StringRef(\"rescue\"),\n\t\t\tKernel:      pulumi.StringRef(\"rescue64-pro\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tserverOnRescue, err := Dedicated.NewServerUpdate(ctx, \"serverOnRescue\", \u0026Dedicated.ServerUpdateArgs{\n\t\t\tServiceName: pulumi.String(\"nsxxxxxxx.ip-xx-xx-xx.eu\"),\n\t\t\tBootId:      pulumi.Int(rescue.Results[0]),\n\t\t\tMonitoring:  pulumi.Bool(true),\n\t\t\tState:       pulumi.String(\"ok\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Dedicated.NewServerRebootTask(ctx, \"serverReboot\", \u0026Dedicated.ServerRebootTaskArgs{\n\t\t\tServiceName: pulumi.String(rescue.ServiceName),\n\t\t\tKeepers: pulumi.StringArray{\n\t\t\t\tserverOnRescue.BootId,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetServerBootsArgs;\nimport com.pulumi.ovh.Dedicated.ServerUpdate;\nimport com.pulumi.ovh.Dedicated.ServerUpdateArgs;\nimport com.pulumi.ovh.Dedicated.ServerRebootTask;\nimport com.pulumi.ovh.Dedicated.ServerRebootTaskArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rescue = DedicatedFunctions.getServerBoots(GetServerBootsArgs.builder()\n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .bootType(\"rescue\")\n            .kernel(\"rescue64-pro\")\n            .build());\n\n        var serverOnRescue = new ServerUpdate(\"serverOnRescue\", ServerUpdateArgs.builder()        \n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .bootId(rescue.applyValue(getServerBootsResult -\u003e getServerBootsResult.results()[0]))\n            .monitoring(true)\n            .state(\"ok\")\n            .build());\n\n        var serverReboot = new ServerRebootTask(\"serverReboot\", ServerRebootTaskArgs.builder()        \n            .serviceName(rescue.applyValue(getServerBootsResult -\u003e getServerBootsResult.serviceName()))\n            .keepers(serverOnRescue.bootId())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  serverOnRescue:\n    type: ovh:Dedicated:ServerUpdate\n    properties:\n      serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n      bootId: ${rescue.results[0]}\n      monitoring: true\n      state: ok\n  serverReboot:\n    type: ovh:Dedicated:ServerRebootTask\n    properties:\n      serviceName: ${rescue.serviceName}\n      keepers:\n        - ${serverOnRescue.bootId}\nvariables:\n  rescue:\n    fn::invoke:\n      Function: ovh:Dedicated:getServerBoots\n      Arguments:\n        serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n        bootType: rescue\n        kernel: rescue64-pro\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Details of this task. (should be `Reboot asked`)\n"
                },
                "doneDate": {
                    "type": "string",
                    "description": "Completion date in RFC3339 format.\n"
                },
                "function": {
                    "type": "string",
                    "description": "Function name (should be `hardReboot`).\n"
                },
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values tracked to trigger reboot, used also to form implicit dependencies.\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update in RFC3339 format.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Task creation date in RFC3339 format.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Task status (should be `done`)\n"
                }
            },
            "required": [
                "comment",
                "doneDate",
                "function",
                "keepers",
                "lastUpdate",
                "serviceName",
                "startDate",
                "status"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values tracked to trigger reboot, used also to form implicit dependencies.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "keepers",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerRebootTask resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Details of this task. (should be `Reboot asked`)\n"
                    },
                    "doneDate": {
                        "type": "string",
                        "description": "Completion date in RFC3339 format.\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "Function name (should be `hardReboot`).\n"
                    },
                    "keepers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of values tracked to trigger reboot, used also to form implicit dependencies.\n",
                        "willReplaceOnChanges": true
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update in RFC3339 format.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Task creation date in RFC3339 format.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Task status (should be `done`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverUpdate:ServerUpdate": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rescue = ovh.Dedicated.getServerBoots({\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    bootType: \"rescue\",\n    kernel: \"rescue64-pro\",\n});\nconst server = new ovh.dedicated.ServerUpdate(\"server\", {\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    bootId: rescue.then(rescue =\u003e rescue.results?[0]),\n    monitoring: true,\n    state: \"ok\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nrescue = ovh.Dedicated.get_server_boots(service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    boot_type=\"rescue\",\n    kernel=\"rescue64-pro\")\nserver = ovh.dedicated.ServerUpdate(\"server\",\n    service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    boot_id=rescue.results[0],\n    monitoring=True,\n    state=\"ok\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rescue = Ovh.Dedicated.GetServerBoots.Invoke(new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n        BootType = \"rescue\",\n        Kernel = \"rescue64-pro\",\n    });\n\n    var server = new Ovh.Dedicated.ServerUpdate(\"server\", new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n        BootId = rescue.Apply(getServerBootsResult =\u003e getServerBootsResult.Results[0]),\n        Monitoring = true,\n        State = \"ok\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\trescue, err := Dedicated.GetServerBoots(ctx, \u0026dedicated.GetServerBootsArgs{\n\t\t\tServiceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n\t\t\tBootType:    pulumi.StringRef(\"rescue\"),\n\t\t\tKernel:      pulumi.StringRef(\"rescue64-pro\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Dedicated.NewServerUpdate(ctx, \"server\", \u0026Dedicated.ServerUpdateArgs{\n\t\t\tServiceName: pulumi.String(\"nsxxxxxxx.ip-xx-xx-xx.eu\"),\n\t\t\tBootId:      pulumi.Int(rescue.Results[0]),\n\t\t\tMonitoring:  pulumi.Bool(true),\n\t\t\tState:       pulumi.String(\"ok\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetServerBootsArgs;\nimport com.pulumi.ovh.Dedicated.ServerUpdate;\nimport com.pulumi.ovh.Dedicated.ServerUpdateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rescue = DedicatedFunctions.getServerBoots(GetServerBootsArgs.builder()\n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .bootType(\"rescue\")\n            .kernel(\"rescue64-pro\")\n            .build());\n\n        var server = new ServerUpdate(\"server\", ServerUpdateArgs.builder()        \n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .bootId(rescue.applyValue(getServerBootsResult -\u003e getServerBootsResult.results()[0]))\n            .monitoring(true)\n            .state(\"ok\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  server:\n    type: ovh:Dedicated:ServerUpdate\n    properties:\n      serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n      bootId: ${rescue.results[0]}\n      monitoring: true\n      state: ok\nvariables:\n  rescue:\n    fn::invoke:\n      Function: ovh:Dedicated:getServerBoots\n      Arguments:\n        serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n        bootType: rescue\n        kernel: rescue64-pro\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "bootId": {
                    "type": "integer",
                    "description": "boot id of the server\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "state": {
                    "type": "string",
                    "description": "error, hacked, hackedBlocked, ok\n"
                }
            },
            "required": [
                "bootId",
                "monitoring",
                "serviceName",
                "state"
            ],
            "inputProperties": {
                "bootId": {
                    "type": "integer",
                    "description": "boot id of the server\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "state": {
                    "type": "string",
                    "description": "error, hacked, hackedBlocked, ok\n"
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerUpdate resources.\n",
                "properties": {
                    "bootId": {
                        "type": "integer",
                        "description": "boot id of the server\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "error, hacked, hackedBlocked, ok\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zone:Zone": {
            "description": "Creates a domain zone.\n\n## Important\n\n\u003e __WARNING__ This resource is in beta state. Use with caution.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n});\nconst zoneCartProductPlan = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"dns\",\n    planCode: \"zone\",\n}));\nconst zoneZone = new ovh.domain.Zone(\"zoneZone\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"fidelity\",\n    plan: {\n        duration: zoneCartProductPlan.then(zoneCartProductPlan =\u003e zoneCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: zoneCartProductPlan.then(zoneCartProductPlan =\u003e zoneCartProductPlan.planCode),\n        pricingMode: zoneCartProductPlan.then(zoneCartProductPlan =\u003e zoneCartProductPlan.selectedPrices?[0]?.pricingMode),\n        configurations: [\n            {\n                label: \"zone\",\n                value: \"myzone.mydomain.com\",\n            },\n            {\n                label: \"template\",\n                value: \"minimized\",\n            },\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\")\nzone_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"dns\",\n    plan_code=\"zone\")\nzone_zone = ovh.domain.Zone(\"zoneZone\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"fidelity\",\n    plan=ovh.domain.ZonePlanArgs(\n        duration=zone_cart_product_plan.selected_prices[0].duration,\n        plan_code=zone_cart_product_plan.plan_code,\n        pricing_mode=zone_cart_product_plan.selected_prices[0].pricing_mode,\n        configurations=[\n            ovh.domain.ZonePlanConfigurationArgs(\n                label=\"zone\",\n                value=\"myzone.mydomain.com\",\n            ),\n            ovh.domain.ZonePlanConfigurationArgs(\n                label=\"template\",\n                value=\"minimized\",\n            ),\n        ],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n    });\n\n    var zoneCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"dns\",\n        PlanCode = \"zone\",\n    });\n\n    var zoneZone = new Ovh.Domain.Zone(\"zoneZone\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        PaymentMean = \"fidelity\",\n        Plan = new Ovh.Domain.Inputs.ZonePlanArgs\n        {\n            Duration = zoneCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = zoneCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = zoneCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Domain.Inputs.ZonePlanConfigurationArgs\n                {\n                    Label = \"zone\",\n                    Value = \"myzone.mydomain.com\",\n                },\n                new Ovh.Domain.Inputs.ZonePlanConfigurationArgs\n                {\n                    Label = \"template\",\n                    Value = \"minimized\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Domain\"\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tzoneCartProductPlan, err := Order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"dns\",\n\t\t\tPlanCode:      \"zone\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Domain.NewZone(ctx, \"zoneZone\", \u0026Domain.ZoneArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"fidelity\"),\n\t\t\tPlan: \u0026domain.ZonePlanArgs{\n\t\t\t\tDuration:    pulumi.String(zoneCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(zoneCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(zoneCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: domain.ZonePlanConfigurationArray{\n\t\t\t\t\t\u0026domain.ZonePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"zone\"),\n\t\t\t\t\t\tValue: pulumi.String(\"myzone.mydomain.com\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026domain.ZonePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"template\"),\n\t\t\t\t\t\tValue: pulumi.String(\"minimized\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Domain.Zone;\nimport com.pulumi.ovh.Domain.ZoneArgs;\nimport com.pulumi.ovh.Domain.inputs.ZonePlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .build());\n\n        final var zoneCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"dns\")\n            .planCode(\"zone\")\n            .build());\n\n        var zoneZone = new Zone(\"zoneZone\", ZoneArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .paymentMean(\"fidelity\")\n            .plan(ZonePlanArgs.builder()\n                .duration(zoneCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(zoneCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(zoneCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(                \n                    ZonePlanConfigurationArgs.builder()\n                        .label(\"zone\")\n                        .value(\"myzone.mydomain.com\")\n                        .build(),\n                    ZonePlanConfigurationArgs.builder()\n                        .label(\"template\")\n                        .value(\"minimized\")\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  zoneZone:\n    type: ovh:Domain:Zone\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: fidelity\n      plan:\n        duration: ${zoneCartProductPlan.selectedPrices[0].duration}\n        planCode: ${zoneCartProductPlan.planCode}\n        pricingMode: ${zoneCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: zone\n            value: myzone.mydomain.com\n          - label: template\n            value: minimized\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n  zoneCartProductPlan:\n    fn::invoke:\n      Function: ovh:Order:getCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: dns\n        planCode: zone\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "dnssecSupported": {
                    "type": "boolean",
                    "description": "Is DNSSEC supported by this zone\n"
                },
                "hasDnsAnycast": {
                    "type": "boolean",
                    "description": "hasDnsAnycast flag of the DNS zone\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update date of the DNS zone\n"
                },
                "name": {
                    "type": "string",
                    "description": "Zone name\n"
                },
                "nameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name servers that host the DNS zone\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZoneOrder:ZoneOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:Domain/ZonePlan:ZonePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanOption:ZonePlanOption"
                    },
                    "description": "Product Plan to order\n"
                }
            },
            "required": [
                "dnssecSupported",
                "hasDnsAnycast",
                "lastUpdate",
                "name",
                "nameServers",
                "orders",
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "inputProperties": {
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Domain/ZonePlan:ZonePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanOption:ZonePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Zone resources.\n",
                "properties": {
                    "dnssecSupported": {
                        "type": "boolean",
                        "description": "Is DNSSEC supported by this zone\n"
                    },
                    "hasDnsAnycast": {
                        "type": "boolean",
                        "description": "hasDnsAnycast flag of the DNS zone\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update date of the DNS zone\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Zone name\n"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name servers that host the DNS zone\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/ZoneOrder:ZoneOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Domain/ZonePlan:ZonePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/ZonePlanOption:ZonePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zoneRecord:ZoneRecord": {
            "description": "Provides a OVHcloud domain zone record.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\n// Add a record to a sub-domain\nconst test = new ovh.Domain.ZoneRecord(\"test\", {\n    fieldtype: \"A\",\n    subdomain: \"test\",\n    target: \"0.0.0.0\",\n    ttl: 3600,\n    zone: \"testdemo.ovh\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\n# Add a record to a sub-domain\ntest = ovh.domain.ZoneRecord(\"test\",\n    fieldtype=\"A\",\n    subdomain=\"test\",\n    target=\"0.0.0.0\",\n    ttl=3600,\n    zone=\"testdemo.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Add a record to a sub-domain\n    var test = new Ovh.Domain.ZoneRecord(\"test\", new()\n    {\n        Fieldtype = \"A\",\n        Subdomain = \"test\",\n        Target = \"0.0.0.0\",\n        Ttl = 3600,\n        Zone = \"testdemo.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Domain.NewZoneRecord(ctx, \"test\", \u0026Domain.ZoneRecordArgs{\n\t\t\tFieldtype: pulumi.String(\"A\"),\n\t\t\tSubdomain: pulumi.String(\"test\"),\n\t\t\tTarget:    pulumi.String(\"0.0.0.0\"),\n\t\t\tTtl:       pulumi.Int(3600),\n\t\t\tZone:      pulumi.String(\"testdemo.ovh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.ZoneRecord;\nimport com.pulumi.ovh.Domain.ZoneRecordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new ZoneRecord(\"test\", ZoneRecordArgs.builder()        \n            .fieldtype(\"A\")\n            .subdomain(\"test\")\n            .target(\"0.0.0.0\")\n            .ttl(\"3600\")\n            .zone(\"testdemo.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Add a record to a sub-domain\n  test:\n    type: ovh:Domain:ZoneRecord\n    properties:\n      fieldtype: A\n      subdomain: test\n      target: 0.0.0.0\n      ttl: '3600'\n      zone: testdemo.ovh\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud domain zone record can be imported using the `id`, which can be retrieved by using [OVH API portal](https://api.ovh.com/console/#/domain/zone/%7BzoneName%7D/record~GET), and the `zone`, separated by \".\" E.g., bash\n\n```sh\n $ pulumi import ovh:Domain/zoneRecord:ZoneRecord test id.zone\n```\n\n ",
            "properties": {
                "fieldtype": {
                    "type": "string",
                    "description": "The type of the record\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the record\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the record\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL of the record\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the record to\n"
                }
            },
            "required": [
                "fieldtype",
                "target",
                "zone"
            ],
            "inputProperties": {
                "fieldtype": {
                    "type": "string",
                    "description": "The type of the record\n",
                    "willReplaceOnChanges": true
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the record\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the record\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL of the record\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the record to\n"
                }
            },
            "requiredInputs": [
                "fieldtype",
                "target",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneRecord resources.\n",
                "properties": {
                    "fieldtype": {
                        "type": "string",
                        "description": "The type of the record\n",
                        "willReplaceOnChanges": true
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The name of the record\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "The value of the record\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The TTL of the record\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The domain to add the record to\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zoneRedirection:ZoneRedirection": {
            "description": "Provides a OVHcloud domain zone redirection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\n// Add a redirection to a sub-domain\nconst test = new ovh.Domain.ZoneRedirection(\"test\", {\n    subdomain: \"test\",\n    target: \"http://www.ovh\",\n    type: \"visiblePermanent\",\n    zone: \"testdemo.ovh\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\n# Add a redirection to a sub-domain\ntest = ovh.domain.ZoneRedirection(\"test\",\n    subdomain=\"test\",\n    target=\"http://www.ovh\",\n    type=\"visiblePermanent\",\n    zone=\"testdemo.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Add a redirection to a sub-domain\n    var test = new Ovh.Domain.ZoneRedirection(\"test\", new()\n    {\n        Subdomain = \"test\",\n        Target = \"http://www.ovh\",\n        Type = \"visiblePermanent\",\n        Zone = \"testdemo.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Domain.NewZoneRedirection(ctx, \"test\", \u0026Domain.ZoneRedirectionArgs{\n\t\t\tSubdomain: pulumi.String(\"test\"),\n\t\t\tTarget:    pulumi.String(\"http://www.ovh\"),\n\t\t\tType:      pulumi.String(\"visiblePermanent\"),\n\t\t\tZone:      pulumi.String(\"testdemo.ovh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.ZoneRedirection;\nimport com.pulumi.ovh.Domain.ZoneRedirectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new ZoneRedirection(\"test\", ZoneRedirectionArgs.builder()        \n            .subdomain(\"test\")\n            .target(\"http://www.ovh\")\n            .type(\"visiblePermanent\")\n            .zone(\"testdemo.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Add a redirection to a sub-domain\n  test:\n    type: ovh:Domain:ZoneRedirection\n    properties:\n      subdomain: test\n      target: http://www.ovh\n      type: visiblePermanent\n      zone: testdemo.ovh\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of this redirection\n"
                },
                "keywords": {
                    "type": "string",
                    "description": "Keywords to describe this redirection\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the redirection\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the redirection\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of this redirection\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the redirection, with values:\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the redirection to\n"
                }
            },
            "required": [
                "target",
                "type",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of this redirection\n"
                },
                "keywords": {
                    "type": "string",
                    "description": "Keywords to describe this redirection\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the redirection\n",
                    "willReplaceOnChanges": true
                },
                "target": {
                    "type": "string",
                    "description": "The value of the redirection\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of this redirection\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the redirection, with values:\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the redirection to\n"
                }
            },
            "requiredInputs": [
                "target",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneRedirection resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of this redirection\n"
                    },
                    "keywords": {
                        "type": "string",
                        "description": "Keywords to describe this redirection\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The name of the redirection\n",
                        "willReplaceOnChanges": true
                    },
                    "target": {
                        "type": "string",
                        "description": "The value of the redirection\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of this redirection\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the redirection, with values:\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The domain to add the redirection to\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabase:PrivateDatabase": {
            "description": "Creates an OVHcloud managed private cloud database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my privatedatabase order cart\",\n});\nconst databaseCartProductPlan = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"privateSQL\",\n    planCode: \"private-sql-512-instance\",\n}));\nconst databasePrivateDatabase = new ovh.hosting.PrivateDatabase(\"databasePrivateDatabase\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"ovh-account\",\n    displayName: \"Postgresql-12\",\n    plan: {\n        duration: databaseCartProductPlan.then(databaseCartProductPlan =\u003e databaseCartProductPlan.prices?[3]?.duration),\n        planCode: databaseCartProductPlan.then(databaseCartProductPlan =\u003e databaseCartProductPlan.planCode),\n        pricingMode: databaseCartProductPlan.then(databaseCartProductPlan =\u003e databaseCartProductPlan.selectedPrices?[0]?.pricingMode),\n        configurations: [\n            {\n                label: \"dc\",\n                value: \"gra3\",\n            },\n            {\n                label: \"engine\",\n                value: \"postgresql_12\",\n            },\n        ],\n    },\n});\nexport const privatedatabaseServiceName = databasePrivateDatabase.serviceName;\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\",\n    description=\"my privatedatabase order cart\")\ndatabase_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"privateSQL\",\n    plan_code=\"private-sql-512-instance\")\ndatabase_private_database = ovh.hosting.PrivateDatabase(\"databasePrivateDatabase\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"ovh-account\",\n    display_name=\"Postgresql-12\",\n    plan=ovh.hosting.PrivateDatabasePlanArgs(\n        duration=database_cart_product_plan.prices[3].duration,\n        plan_code=database_cart_product_plan.plan_code,\n        pricing_mode=database_cart_product_plan.selected_prices[0].pricing_mode,\n        configurations=[\n            ovh.hosting.PrivateDatabasePlanConfigurationArgs(\n                label=\"dc\",\n                value=\"gra3\",\n            ),\n            ovh.hosting.PrivateDatabasePlanConfigurationArgs(\n                label=\"engine\",\n                value=\"postgresql_12\",\n            ),\n        ],\n    ))\npulumi.export(\"privatedatabaseServiceName\", database_private_database.service_name)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my privatedatabase order cart\",\n    });\n\n    var databaseCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"privateSQL\",\n        PlanCode = \"private-sql-512-instance\",\n    });\n\n    var databasePrivateDatabase = new Ovh.Hosting.PrivateDatabase(\"databasePrivateDatabase\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        PaymentMean = \"ovh-account\",\n        DisplayName = \"Postgresql-12\",\n        Plan = new Ovh.Hosting.Inputs.PrivateDatabasePlanArgs\n        {\n            Duration = databaseCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.Prices[3]?.Duration),\n            PlanCode = databaseCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = databaseCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Hosting.Inputs.PrivateDatabasePlanConfigurationArgs\n                {\n                    Label = \"dc\",\n                    Value = \"gra3\",\n                },\n                new Ovh.Hosting.Inputs.PrivateDatabasePlanConfigurationArgs\n                {\n                    Label = \"engine\",\n                    Value = \"postgresql_12\",\n                },\n            },\n        },\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"privatedatabaseServiceName\"] = databasePrivateDatabase.ServiceName,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Hosting\"\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my privatedatabase order cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdatabaseCartProductPlan, err := Order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"privateSQL\",\n\t\t\tPlanCode:      \"private-sql-512-instance\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdatabasePrivateDatabase, err := Hosting.NewPrivateDatabase(ctx, \"databasePrivateDatabase\", \u0026Hosting.PrivateDatabaseArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"ovh-account\"),\n\t\t\tDisplayName:   pulumi.String(\"Postgresql-12\"),\n\t\t\tPlan: \u0026hosting.PrivateDatabasePlanArgs{\n\t\t\t\tDuration:    pulumi.String(databaseCartProductPlan.Prices[3].Duration),\n\t\t\t\tPlanCode:    pulumi.String(databaseCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(databaseCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: hosting.PrivateDatabasePlanConfigurationArray{\n\t\t\t\t\t\u0026hosting.PrivateDatabasePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"dc\"),\n\t\t\t\t\t\tValue: pulumi.String(\"gra3\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026hosting.PrivateDatabasePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"engine\"),\n\t\t\t\t\t\tValue: pulumi.String(\"postgresql_12\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"privatedatabaseServiceName\", databasePrivateDatabase.ServiceName)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Hosting.PrivateDatabase;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseArgs;\nimport com.pulumi.ovh.Hosting.inputs.PrivateDatabasePlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my privatedatabase order cart\")\n            .build());\n\n        final var databaseCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"privateSQL\")\n            .planCode(\"private-sql-512-instance\")\n            .build());\n\n        var databasePrivateDatabase = new PrivateDatabase(\"databasePrivateDatabase\", PrivateDatabaseArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .paymentMean(\"ovh-account\")\n            .displayName(\"Postgresql-12\")\n            .plan(PrivateDatabasePlanArgs.builder()\n                .duration(databaseCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.prices()[3].duration()))\n                .planCode(databaseCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(databaseCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(                \n                    PrivateDatabasePlanConfigurationArgs.builder()\n                        .label(\"dc\")\n                        .value(\"gra3\")\n                        .build(),\n                    PrivateDatabasePlanConfigurationArgs.builder()\n                        .label(\"engine\")\n                        .value(\"postgresql_12\")\n                        .build())\n                .build())\n            .build());\n\n        ctx.export(\"privatedatabaseServiceName\", databasePrivateDatabase.serviceName());\n    }\n}\n```\n```yaml\nresources:\n  databasePrivateDatabase:\n    type: ovh:Hosting:PrivateDatabase\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: ovh-account\n      displayName: Postgresql-12\n      plan:\n        duration: ${databaseCartProductPlan.prices[3].duration}\n        planCode: ${databaseCartProductPlan.planCode}\n        pricingMode: ${databaseCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: dc\n            value: gra3\n          - label: engine\n            value: postgresql_12\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my privatedatabase order cart\n  databaseCartProductPlan:\n    fn::invoke:\n      Function: ovh:Order:getCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: privateSQL\n        planCode: private-sql-512-instance\noutputs:\n  privatedatabaseServiceName: ${databasePrivateDatabase.serviceName}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Webhosting database can be imported using the `service_name`, E.g.,\n\n```sh\n $ pulumi import ovh:Hosting/privateDatabase:PrivateDatabase database service_name\n```\n\n ",
            "properties": {
                "cpu": {
                    "type": "integer",
                    "description": "Number of CPU on your private database\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "Datacenter where this private database is located\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name displayed in customer panel for your private database\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Private database hostname\n"
                },
                "hostnameFtp": {
                    "type": "string",
                    "description": "Private database FTP hostname\n"
                },
                "infrastructure": {
                    "type": "string",
                    "description": "Infrastructure where service was stored\n"
                },
                "offer": {
                    "type": "string",
                    "description": "Type of the private database offer\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder"
                    },
                    "description": "Details about your Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Private database service port\n"
                },
                "portFtp": {
                    "type": "integer",
                    "description": "Private database FTP port\n"
                },
                "quotaSize": {
                    "type": "integer",
                    "description": "Space allowed (in MB) on your private database\n"
                },
                "quotaUsed": {
                    "type": "integer",
                    "description": "Sapce used (in MB) on your private database\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "Amount of ram (in MB) on your private database\n"
                },
                "server": {
                    "type": "string",
                    "description": "Private database server name\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "Private database state\n"
                },
                "type": {
                    "type": "string",
                    "description": "Private database type\n"
                },
                "version": {
                    "type": "string",
                    "description": "Private database available versions\n"
                },
                "versionLabel": {
                    "type": "string",
                    "description": "Private database version label\n"
                },
                "versionNumber": {
                    "type": "number",
                    "description": "Private database version number\n"
                }
            },
            "required": [
                "cpu",
                "datacenter",
                "displayName",
                "hostname",
                "hostnameFtp",
                "infrastructure",
                "offer",
                "orders",
                "ovhSubsidiary",
                "paymentMean",
                "plan",
                "port",
                "portFtp",
                "quotaSize",
                "quotaUsed",
                "ram",
                "server",
                "serviceName",
                "state",
                "type",
                "version",
                "versionLabel",
                "versionNumber"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Name displayed in customer panel for your private database\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabase resources.\n",
                "properties": {
                    "cpu": {
                        "type": "integer",
                        "description": "Number of CPU on your private database\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "Datacenter where this private database is located\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name displayed in customer panel for your private database\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Private database hostname\n"
                    },
                    "hostnameFtp": {
                        "type": "string",
                        "description": "Private database FTP hostname\n"
                    },
                    "infrastructure": {
                        "type": "string",
                        "description": "Infrastructure where service was stored\n"
                    },
                    "offer": {
                        "type": "string",
                        "description": "Type of the private database offer\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder"
                        },
                        "description": "Details about your Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Private database service port\n"
                    },
                    "portFtp": {
                        "type": "integer",
                        "description": "Private database FTP port\n"
                    },
                    "quotaSize": {
                        "type": "integer",
                        "description": "Space allowed (in MB) on your private database\n"
                    },
                    "quotaUsed": {
                        "type": "integer",
                        "description": "Sapce used (in MB) on your private database\n"
                    },
                    "ram": {
                        "type": "integer",
                        "description": "Amount of ram (in MB) on your private database\n"
                    },
                    "server": {
                        "type": "string",
                        "description": "Private database server name\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "Private database state\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Private database type\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Private database available versions\n"
                    },
                    "versionLabel": {
                        "type": "string",
                        "description": "Private database version label\n"
                    },
                    "versionNumber": {
                        "type": "number",
                        "description": "Private database version number\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseAllowlist:PrivateDatabaseAllowlist": {
            "description": "Create a new IP whitelist on your private cloud database instance.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst ip = new ovh.Hosting.PrivateDatabaseAllowlist(\"ip\", {\n    ip: \"1.2.3.4\",\n    service: true,\n    serviceName: \"XXXXXX\",\n    sftp: true,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nip = ovh.hosting.PrivateDatabaseAllowlist(\"ip\",\n    ip=\"1.2.3.4\",\n    service=True,\n    service_name=\"XXXXXX\",\n    sftp=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ip = new Ovh.Hosting.PrivateDatabaseAllowlist(\"ip\", new()\n    {\n        Ip = \"1.2.3.4\",\n        Service = true,\n        ServiceName = \"XXXXXX\",\n        Sftp = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Hosting.NewPrivateDatabaseAllowlist(ctx, \"ip\", \u0026Hosting.PrivateDatabaseAllowlistArgs{\n\t\t\tIp:          pulumi.String(\"1.2.3.4\"),\n\t\t\tService:     pulumi.Bool(true),\n\t\t\tServiceName: pulumi.String(\"XXXXXX\"),\n\t\t\tSftp:        pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseAllowlist;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseAllowlistArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var ip = new PrivateDatabaseAllowlist(\"ip\", PrivateDatabaseAllowlistArgs.builder()        \n            .ip(\"1.2.3.4\")\n            .service(true)\n            .serviceName(\"XXXXXX\")\n            .sftp(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ip:\n    type: ovh:Hosting:PrivateDatabaseAllowlist\n    properties:\n      ip: 1.2.3.4\n      service: true\n      serviceName: XXXXXX\n      sftp: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud database whitelist can be imported using the `service_name` and the `ip`, separated by \"/\" E.g.,\n\n```sh\n $ pulumi import ovh:Hosting/privateDatabaseAllowlist:PrivateDatabaseAllowlist ip service_name/ip\n```\n\n ",
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "The whitelisted IP in your instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Custom name for your Whitelisted IP.\n"
                },
                "service": {
                    "type": "boolean",
                    "description": "Authorize this IP to access service port. Values can be `true` or `false`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n"
                },
                "sftp": {
                    "type": "boolean",
                    "description": "Authorize this IP to access SFTP port. Values can be `true` or `false`\n"
                }
            },
            "required": [
                "ip",
                "name",
                "service",
                "serviceName",
                "sftp"
            ],
            "inputProperties": {
                "ip": {
                    "type": "string",
                    "description": "The whitelisted IP in your instance.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Custom name for your Whitelisted IP.\n"
                },
                "service": {
                    "type": "boolean",
                    "description": "Authorize this IP to access service port. Values can be `true` or `false`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n"
                },
                "sftp": {
                    "type": "boolean",
                    "description": "Authorize this IP to access SFTP port. Values can be `true` or `false`\n"
                }
            },
            "requiredInputs": [
                "ip",
                "service",
                "serviceName",
                "sftp"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseAllowlist resources.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The whitelisted IP in your instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom name for your Whitelisted IP.\n"
                    },
                    "service": {
                        "type": "boolean",
                        "description": "Authorize this IP to access service port. Values can be `true` or `false`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database.\n"
                    },
                    "sftp": {
                        "type": "boolean",
                        "description": "Authorize this IP to access SFTP port. Values can be `true` or `false`\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseDb:PrivateDatabaseDb": {
            "description": "Create a new database on your private cloud database service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst database = new ovh.Hosting.PrivateDatabaseDb(\"database\", {\n    databaseName: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\ndatabase = ovh.hosting.PrivateDatabaseDb(\"database\",\n    database_name=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var database = new Ovh.Hosting.PrivateDatabaseDb(\"database\", new()\n    {\n        DatabaseName = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Hosting.NewPrivateDatabaseDb(ctx, \"database\", \u0026Hosting.PrivateDatabaseDbArgs{\n\t\t\tDatabaseName: pulumi.String(\"XXXXXX\"),\n\t\t\tServiceName:  pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseDb;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseDbArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var database = new PrivateDatabaseDb(\"database\", PrivateDatabaseDbArgs.builder()        \n            .databaseName(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  database:\n    type: ovh:Hosting:PrivateDatabaseDb\n    properties:\n      databaseName: XXXXXX\n      serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Webhosting database can be imported using the `service_name` and the `database_name`, separated by \"/\" E.g.,\n\n```sh\n $ pulumi import ovh:Hosting/privateDatabaseDb:PrivateDatabaseDb database service_name/database_name\n```\n\n ",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Name of your new database\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n"
                }
            },
            "required": [
                "databaseName",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "Name of your new database\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseDb resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Name of your new database\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseUser:PrivateDatabaseUser": {
            "description": "Create a new user on your private cloud database instance.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst user = new ovh.Hosting.PrivateDatabaseUser(\"user\", {\n    password: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n    userName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nuser = ovh.hosting.PrivateDatabaseUser(\"user\",\n    password=\"XXXXXX\",\n    service_name=\"XXXXXX\",\n    user_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = new Ovh.Hosting.PrivateDatabaseUser(\"user\", new()\n    {\n        Password = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n        UserName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Hosting.NewPrivateDatabaseUser(ctx, \"user\", \u0026Hosting.PrivateDatabaseUserArgs{\n\t\t\tPassword:    pulumi.String(\"XXXXXX\"),\n\t\t\tServiceName: pulumi.String(\"XXXXXX\"),\n\t\t\tUserName:    pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseUser;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user = new PrivateDatabaseUser(\"user\", PrivateDatabaseUserArgs.builder()        \n            .password(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .userName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: ovh:Hosting:PrivateDatabaseUser\n    properties:\n      password: XXXXXX\n      serviceName: XXXXXX\n      userName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud database user can be imported using the `service_name` and the `user_name`, separated by \"/\" E.g.,\n\n```sh\n $ pulumi import ovh:Hosting/privateDatabaseUser:PrivateDatabaseUser user service_name/user_name\n```\n\n ",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Password for the new user (alphanumeric, minimum one number and 8 characters minimum)\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases\n"
                }
            },
            "required": [
                "password",
                "serviceName",
                "userName"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "Password for the new user (alphanumeric, minimum one number and 8 characters minimum)\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n",
                    "willReplaceOnChanges": true
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "password",
                "serviceName",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "Password for the new user (alphanumeric, minimum one number and 8 characters minimum)\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database.\n",
                        "willReplaceOnChanges": true
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name used to connect on your databases\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseUserGrant:PrivateDatabaseUserGrant": {
            "description": "Add grant on a database in your private cloud database instance.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst userGrant = new ovh.Hosting.PrivateDatabaseUserGrant(\"user_grant\", {\n    databaseName: \"ovhcloud\",\n    grant: \"admin\",\n    serviceName: \"XXXXXX\",\n    userName: \"terraform\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nuser_grant = ovh.hosting.PrivateDatabaseUserGrant(\"userGrant\",\n    database_name=\"ovhcloud\",\n    grant=\"admin\",\n    service_name=\"XXXXXX\",\n    user_name=\"terraform\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var userGrant = new Ovh.Hosting.PrivateDatabaseUserGrant(\"userGrant\", new()\n    {\n        DatabaseName = \"ovhcloud\",\n        Grant = \"admin\",\n        ServiceName = \"XXXXXX\",\n        UserName = \"terraform\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Hosting.NewPrivateDatabaseUserGrant(ctx, \"userGrant\", \u0026Hosting.PrivateDatabaseUserGrantArgs{\n\t\t\tDatabaseName: pulumi.String(\"ovhcloud\"),\n\t\t\tGrant:        pulumi.String(\"admin\"),\n\t\t\tServiceName:  pulumi.String(\"XXXXXX\"),\n\t\t\tUserName:     pulumi.String(\"terraform\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseUserGrant;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseUserGrantArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var userGrant = new PrivateDatabaseUserGrant(\"userGrant\", PrivateDatabaseUserGrantArgs.builder()        \n            .databaseName(\"ovhcloud\")\n            .grant(\"admin\")\n            .serviceName(\"XXXXXX\")\n            .userName(\"terraform\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  userGrant:\n    type: ovh:Hosting:PrivateDatabaseUserGrant\n    properties:\n      databaseName: ovhcloud\n      grant: admin\n      serviceName: XXXXXX\n      userName: terraform\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud database user's grant can be imported using the `service_name`, the `user_name`, the `database_name` and the `grant`, separated by \"/\" E.g.,\n\n```sh\n $ pulumi import ovh:Hosting/privateDatabaseUserGrant:PrivateDatabaseUserGrant user service_name/user_name/database_name/grant\n```\n\n ",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database name where add grant.\n"
                },
                "grant": {
                    "type": "string",
                    "description": "Database name where add grant. Values can be: \n- admin\n- none\n- ro\n- rw\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases.\n"
                }
            },
            "required": [
                "databaseName",
                "grant",
                "serviceName",
                "userName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database name where add grant.\n",
                    "willReplaceOnChanges": true
                },
                "grant": {
                    "type": "string",
                    "description": "Database name where add grant. Values can be: \n- admin\n- none\n- ro\n- rw\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n",
                    "willReplaceOnChanges": true
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseName",
                "grant",
                "serviceName",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseUserGrant resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Database name where add grant.\n",
                        "willReplaceOnChanges": true
                    },
                    "grant": {
                        "type": "string",
                        "description": "Database name where add grant. Values can be: \n- admin\n- none\n- ro\n- rw\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database.\n",
                        "willReplaceOnChanges": true
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name used to connect on your databases.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/ipService:IpService": {
            "description": "Orders an ip service.\n\n\n## Important\n\nThis resource orders an OVHcloud product for a long period of time and may generate heavy costs !\nUse with caution.\n\n__NOTE__ 1: the \"default-payment-mean\" will scan your registered bank accounts, credit card and paypal payment means to find your default payment mean.\n\n__NOTE__ 2: this resource is in beta state. Use with caution.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n    description: \"order ip block\",\n});\nconst ipblockCartProductPlan = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"ip\",\n    planCode: \"ip-v4-s30-ripe\",\n}));\nconst ipblockIpService = new ovh.ip.IpService(\"ipblockIpService\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"ovh-account\",\n    description: \"my ip block\",\n    plan: {\n        duration: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.planCode),\n        pricingMode: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.selectedPrices?[0]?.pricingMode),\n        configurations: [{\n            label: \"country\",\n            value: \"FR\",\n        }],\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\",\n    description=\"order ip block\")\nipblock_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"ip\",\n    plan_code=\"ip-v4-s30-ripe\")\nipblock_ip_service = ovh.ip.IpService(\"ipblockIpService\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"ovh-account\",\n    description=\"my ip block\",\n    plan=ovh.ip.IpServicePlanArgs(\n        duration=ipblock_cart_product_plan.selected_prices[0].duration,\n        plan_code=ipblock_cart_product_plan.plan_code,\n        pricing_mode=ipblock_cart_product_plan.selected_prices[0].pricing_mode,\n        configurations=[ovh.ip.IpServicePlanConfigurationArgs(\n            label=\"country\",\n            value=\"FR\",\n        )],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"order ip block\",\n    });\n\n    var ipblockCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"ip\",\n        PlanCode = \"ip-v4-s30-ripe\",\n    });\n\n    var ipblockIpService = new Ovh.Ip.IpService(\"ipblockIpService\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        PaymentMean = \"ovh-account\",\n        Description = \"my ip block\",\n        Plan = new Ovh.Ip.Inputs.IpServicePlanArgs\n        {\n            Duration = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Ip.Inputs.IpServicePlanConfigurationArgs\n                {\n                    Label = \"country\",\n                    Value = \"FR\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Ip\"\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"order ip block\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipblockCartProductPlan, err := Order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"ip\",\n\t\t\tPlanCode:      \"ip-v4-s30-ripe\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Ip.NewIpService(ctx, \"ipblockIpService\", \u0026Ip.IpServiceArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"ovh-account\"),\n\t\t\tDescription:   pulumi.String(\"my ip block\"),\n\t\t\tPlan: \u0026ip.IpServicePlanArgs{\n\t\t\t\tDuration:    pulumi.String(ipblockCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(ipblockCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(ipblockCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: ip.IpServicePlanConfigurationArray{\n\t\t\t\t\t\u0026ip.IpServicePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"country\"),\n\t\t\t\t\t\tValue: pulumi.String(\"FR\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Ip.IpService;\nimport com.pulumi.ovh.Ip.IpServiceArgs;\nimport com.pulumi.ovh.Ip.inputs.IpServicePlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"order ip block\")\n            .build());\n\n        final var ipblockCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"ip\")\n            .planCode(\"ip-v4-s30-ripe\")\n            .build());\n\n        var ipblockIpService = new IpService(\"ipblockIpService\", IpServiceArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .paymentMean(\"ovh-account\")\n            .description(\"my ip block\")\n            .plan(IpServicePlanArgs.builder()\n                .duration(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(IpServicePlanConfigurationArgs.builder()\n                    .label(\"country\")\n                    .value(\"FR\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ipblockIpService:\n    type: ovh:Ip:IpService\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: ovh-account\n      description: my ip block\n      plan:\n        duration: ${ipblockCartProductPlan.selectedPrices[0].duration}\n        planCode: ${ipblockCartProductPlan.planCode}\n        pricingMode: ${ipblockCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: country\n            value: FR\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: order ip block\n  ipblockCartProductPlan:\n    fn::invoke:\n      Function: ovh:Order:getCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: ip\n        planCode: ip-v4-s30-ripe\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "canBeTerminated": {
                    "type": "boolean",
                    "description": "can be terminated\n"
                },
                "country": {
                    "type": "string",
                    "description": "country\n"
                },
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "ip block\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceOrder:IpServiceOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "organisationId": {
                    "type": "string",
                    "description": "IP block organisation Id\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:Ip/IpServicePlan:IpServicePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanOption:IpServicePlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "routedTos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceRoutedTo:IpServiceRoutedTo"
                    },
                    "description": "Routage information\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service where ip is routed to\n* `service_name`: service name\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible values for ip type\n"
                }
            },
            "required": [
                "canBeTerminated",
                "country",
                "description",
                "ip",
                "orders",
                "organisationId",
                "ovhSubsidiary",
                "paymentMean",
                "plan",
                "routedTos",
                "serviceName",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip.\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Ip/IpServicePlan:IpServicePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanOption:IpServicePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpService resources.\n",
                "properties": {
                    "canBeTerminated": {
                        "type": "boolean",
                        "description": "can be terminated\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "country\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Custom description on your ip.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "ip block\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/IpServiceOrder:IpServiceOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "organisationId": {
                        "type": "string",
                        "description": "IP block organisation Id\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Ip/IpServicePlan:IpServicePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/IpServicePlanOption:IpServicePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "routedTos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/IpServiceRoutedTo:IpServiceRoutedTo"
                        },
                        "description": "Routage information\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service where ip is routed to\n* `service_name`: service name\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible values for ip type\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/reverse:Reverse": {
            "description": "Provides a OVHcloud IP reverse.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\n// Set the reverse of an IP\nconst test = new ovh.Ip.Reverse(\"test\", {\n    ip: \"192.0.2.0/24\",\n    ReverseIp: \"192.0.2.1\",\n    ReverseValue: \"example.com\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\n# Set the reverse of an IP\ntest = ovh.ip.Reverse(\"test\",\n    ip=\"192.0.2.0/24\",\n    reverse_ip=\"192.0.2.1\",\n    reverse_value=\"example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Set the reverse of an IP\n    var test = new Ovh.Ip.Reverse(\"test\", new()\n    {\n        Ip = \"192.0.2.0/24\",\n        ReverseIp = \"192.0.2.1\",\n        ReverseValue = \"example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Ip.NewReverse(ctx, \"test\", \u0026Ip.ReverseArgs{\n\t\t\tIp:           pulumi.String(\"192.0.2.0/24\"),\n\t\t\tReverseIp:    pulumi.String(\"192.0.2.1\"),\n\t\t\tReverseValue: pulumi.String(\"example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.Reverse;\nimport com.pulumi.ovh.Ip.ReverseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Reverse(\"test\", ReverseArgs.builder()        \n            .ip(\"192.0.2.0/24\")\n            .ReverseIp(\"192.0.2.1\")\n            .ReverseValue(\"example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Set the reverse of an IP\n  test:\n    type: ovh:Ip:Reverse\n    properties:\n      ip: 192.0.2.0/24\n      ReverseIp: 192.0.2.1\n      ReverseValue: example.com\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThe resource can be imported using the `ip`, `ip_reverse` of the address, separated by \"|\" E.g., bash\n\n```sh\n $ pulumi import ovh:Ip/reverse:Reverse my_reverse '2001:0db8:c0ff:ee::/64|2001:0db8:c0ff:ee::42'\n```\n\n ",
            "properties": {
                "ReverseIp": {
                    "type": "string",
                    "description": "The IP to set the reverse of\n"
                },
                "ReverseValue": {
                    "type": "string",
                    "description": "The value of the reverse\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP block to which the IP belongs\n"
                }
            },
            "required": [
                "ip",
                "ReverseIp",
                "ReverseValue"
            ],
            "inputProperties": {
                "ReverseIp": {
                    "type": "string",
                    "description": "The IP to set the reverse of\n",
                    "willReplaceOnChanges": true
                },
                "ReverseValue": {
                    "type": "string",
                    "description": "The value of the reverse\n",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "description": "The IP block to which the IP belongs\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ip",
                "ReverseIp",
                "ReverseValue"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Reverse resources.\n",
                "properties": {
                    "ReverseIp": {
                        "type": "string",
                        "description": "The IP to set the reverse of\n",
                        "willReplaceOnChanges": true
                    },
                    "ReverseValue": {
                        "type": "string",
                        "description": "The value of the reverse\n",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "description": "The IP block to which the IP belongs\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpFarm:HttpFarm": {
            "description": "Creates a HTTP backend server group (farm) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farmname = new ovh.IpLoadBalancing.HttpFarm(\"farmname\", {\n    displayName: \"ingress-8080-gra\",\n    serviceName: lb.id,\n    zone: \"GRA\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.ip_load_balancing.HttpFarm(\"farmname\",\n    display_name=\"ingress-8080-gra\",\n    service_name=lb.id,\n    zone=\"GRA\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmname = new Ovh.IpLoadBalancing.HttpFarm(\"farmname\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.Id),\n        Zone = \"GRA\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := IpLoadBalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = IpLoadBalancing.NewHttpFarm(ctx, \"farmname\", \u0026IpLoadBalancing.HttpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tServiceName: pulumi.String(lb.Id),\n\t\t\tZone:        pulumi.String(\"GRA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmname = new HttpFarm(\"farmname\", HttpFarmArgs.builder()        \n            .displayName(\"ingress-8080-gra\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.id()))\n            .zone(\"GRA\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farmname:\n    type: ovh:IpLoadBalancing:HttpFarm\n    properties:\n      displayName: ingress-8080-gra\n      serviceName: ${lb.id}\n      zone: GRA\nvariables:\n  lb:\n    fn::invoke:\n      Function: ovh:IpLoadBalancing:getIpLoadBalancing\n      Arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to receive traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                }
            },
            "required": [
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to receive traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpFarm resources.\n",
                "properties": {
                    "balance": {
                        "type": "string",
                        "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Readable label for loadbalancer farm\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port for backends to receive traffic on.\n"
                    },
                    "probe": {
                        "$ref": "#/types/ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe",
                        "description": "define a backend healthcheck probe\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "stickiness": {
                        "type": "string",
                        "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpFarmServer:HttpFarmServer": {
            "description": "Creates a backend server entry linked to HTTP loadbalancing group (farm)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farmname = new ovh.IpLoadBalancing.HttpFarm(\"farmname\", {\n    port: 8080,\n    serviceName: lb.id,\n    zone: \"all\",\n});\nconst backend = new ovh.IpLoadBalancing.HttpFarmServer(\"backend\", {\n    address: \"4.5.6.7\",\n    backup: true,\n    displayName: \"mybackend\",\n    farmId: farmname.id.apply(id =\u003e Number.parseFloat(id)),\n    port: 80,\n    probe: true,\n    proxyProtocolVersion: \"v2\",\n    serviceName: lb.id,\n    ssl: false,\n    status: \"active\",\n    weight: 2,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.ip_load_balancing.HttpFarm(\"farmname\",\n    port=8080,\n    service_name=lb.id,\n    zone=\"all\")\nbackend = ovh.ip_load_balancing.HttpFarmServer(\"backend\",\n    address=\"4.5.6.7\",\n    backup=True,\n    display_name=\"mybackend\",\n    farm_id=farmname.id,\n    port=80,\n    probe=True,\n    proxy_protocol_version=\"v2\",\n    service_name=lb.id,\n    ssl=False,\n    status=\"active\",\n    weight=2)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmname = new Ovh.IpLoadBalancing.HttpFarm(\"farmname\", new()\n    {\n        Port = 8080,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.Id),\n        Zone = \"all\",\n    });\n\n    var backend = new Ovh.IpLoadBalancing.HttpFarmServer(\"backend\", new()\n    {\n        Address = \"4.5.6.7\",\n        Backup = true,\n        DisplayName = \"mybackend\",\n        FarmId = farmname.Id,\n        Port = 80,\n        Probe = true,\n        ProxyProtocolVersion = \"v2\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.Id),\n        Ssl = false,\n        Status = \"active\",\n        Weight = 2,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := IpLoadBalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarmname, err := IpLoadBalancing.NewHttpFarm(ctx, \"farmname\", \u0026IpLoadBalancing.HttpFarmArgs{\n\t\t\tPort:        pulumi.Int(8080),\n\t\t\tServiceName: pulumi.String(lb.Id),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = IpLoadBalancing.NewHttpFarmServer(ctx, \"backend\", \u0026IpLoadBalancing.HttpFarmServerArgs{\n\t\t\tAddress:              pulumi.String(\"4.5.6.7\"),\n\t\t\tBackup:               pulumi.Bool(true),\n\t\t\tDisplayName:          pulumi.String(\"mybackend\"),\n\t\t\tFarmId:               farmname.ID(),\n\t\t\tPort:                 pulumi.Int(80),\n\t\t\tProbe:                pulumi.Bool(true),\n\t\t\tProxyProtocolVersion: pulumi.String(\"v2\"),\n\t\t\tServiceName:          pulumi.String(lb.Id),\n\t\t\tSsl:                  pulumi.Bool(false),\n\t\t\tStatus:               pulumi.String(\"active\"),\n\t\t\tWeight:               pulumi.Int(2),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmServer;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmname = new HttpFarm(\"farmname\", HttpFarmArgs.builder()        \n            .port(8080)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.id()))\n            .zone(\"all\")\n            .build());\n\n        var backend = new HttpFarmServer(\"backend\", HttpFarmServerArgs.builder()        \n            .address(\"4.5.6.7\")\n            .backup(true)\n            .displayName(\"mybackend\")\n            .farmId(farmname.id())\n            .port(80)\n            .probe(true)\n            .proxyProtocolVersion(\"v2\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.id()))\n            .ssl(false)\n            .status(\"active\")\n            .weight(2)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farmname:\n    type: ovh:IpLoadBalancing:HttpFarm\n    properties:\n      port: 8080\n      serviceName: ${lb.id}\n      zone: all\n  backend:\n    type: ovh:IpLoadBalancing:HttpFarmServer\n    properties:\n      address: 4.5.6.7\n      backup: true\n      displayName: mybackend\n      farmId: ${farmname.id}\n      port: 80\n      probe: true\n      proxyProtocolVersion: v2\n      serviceName: ${lb.id}\n      ssl: false\n      status: active\n      weight: 2\nvariables:\n  lb:\n    fn::invoke:\n      Function: ovh:IpLoadBalancing:getIpLoadBalancing\n      Arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVHcloud network)\n"
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "cookie": {
                    "type": "string",
                    "description": "Value of the stickiness cookie used for this backend.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n"
                },
                "onMarkedDown": {
                    "type": "string",
                    "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "required": [
                "address",
                "cookie",
                "farmId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVHcloud network)\n",
                    "willReplaceOnChanges": true
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n",
                    "willReplaceOnChanges": true
                },
                "onMarkedDown": {
                    "type": "string",
                    "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the backend server (IP from either internal or OVHcloud network)\n",
                        "willReplaceOnChanges": true
                    },
                    "backup": {
                        "type": "boolean",
                        "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "cookie": {
                        "type": "string",
                        "description": "Value of the stickiness cookie used for this backend.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Label for the server\n"
                    },
                    "farmId": {
                        "type": "integer",
                        "description": "ID of the farm this server is attached to\n",
                        "willReplaceOnChanges": true
                    },
                    "onMarkedDown": {
                        "type": "string",
                        "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port that backend will respond on\n"
                    },
                    "probe": {
                        "type": "boolean",
                        "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                    },
                    "proxyProtocolVersion": {
                        "type": "string",
                        "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "is the connection ciphered with SSL (TLS)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "backend status - `active` or `inactive`\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "used in loadbalancing algorithm\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpFrontend:HttpFrontend": {
            "description": "Creates a backend HTTP server group (frontend) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farm80 = new ovh.IpLoadBalancing.HttpFarm(\"farm80\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\nconst testfrontend = new ovh.IpLoadBalancing.HttpFrontend(\"testfrontend\", {\n    defaultFarmId: farm80.id.apply(id =\u003e Number.parseFloat(id)),\n    displayName: \"ingress-8080-gra\",\n    port: \"80,443\",\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm80 = ovh.ip_load_balancing.HttpFarm(\"farm80\",\n    display_name=\"ingress-8080-gra\",\n    port=80,\n    service_name=lb.service_name,\n    zone=\"all\")\ntestfrontend = ovh.ip_load_balancing.HttpFrontend(\"testfrontend\",\n    default_farm_id=farm80.id,\n    display_name=\"ingress-8080-gra\",\n    port=\"80,443\",\n    service_name=lb.service_name,\n    zone=\"all\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farm80 = new Ovh.IpLoadBalancing.HttpFarm(\"farm80\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        Port = 80,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n    var testfrontend = new Ovh.IpLoadBalancing.HttpFrontend(\"testfrontend\", new()\n    {\n        DefaultFarmId = farm80.Id,\n        DisplayName = \"ingress-8080-gra\",\n        Port = \"80,443\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := IpLoadBalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarm80, err := IpLoadBalancing.NewHttpFarm(ctx, \"farm80\", \u0026IpLoadBalancing.HttpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:        pulumi.Int(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = IpLoadBalancing.NewHttpFrontend(ctx, \"testfrontend\", \u0026IpLoadBalancing.HttpFrontendArgs{\n\t\t\tDefaultFarmId: farm80.ID(),\n\t\t\tDisplayName:   pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:          pulumi.String(\"80,443\"),\n\t\t\tServiceName:   pulumi.String(lb.ServiceName),\n\t\t\tZone:          pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFrontend;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFrontendArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farm80 = new HttpFarm(\"farm80\", HttpFarmArgs.builder()        \n            .displayName(\"ingress-8080-gra\")\n            .port(80)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n        var testfrontend = new HttpFrontend(\"testfrontend\", HttpFrontendArgs.builder()        \n            .defaultFarmId(farm80.id())\n            .displayName(\"ingress-8080-gra\")\n            .port(\"80,443\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farm80:\n    type: ovh:IpLoadBalancing:HttpFarm\n    properties:\n      displayName: ingress-8080-gra\n      port: 80\n      serviceName: ${lb.serviceName}\n      zone: all\n  testfrontend:\n    type: ovh:IpLoadBalancing:HttpFrontend\n    properties:\n      defaultFarmId: ${farm80.id}\n      displayName: ingress-8080-gra\n      port: 80,443\n      serviceName: ${lb.serviceName}\n      zone: all\nvariables:\n  lb:\n    fn::invoke:\n      Function: ovh:IpLoadBalancing:getIpLoadBalancing\n      Arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\n{{% /example %}}\n{{% example %}}\n### With HTTP Header\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farm80 = new ovh.IpLoadBalancing.HttpFarm(\"farm80\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\nconst testfrontend = new ovh.IpLoadBalancing.HttpFrontend(\"testfrontend\", {\n    defaultFarmId: farm80.id.apply(id =\u003e Number.parseFloat(id)),\n    displayName: \"ingress-8080-gra\",\n    httpHeaders: [\n        \"X-Ip-Header %%ci\",\n        \"X-Port-Header %%cp\",\n    ],\n    port: \"80,443\",\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm80 = ovh.ip_load_balancing.HttpFarm(\"farm80\",\n    display_name=\"ingress-8080-gra\",\n    port=80,\n    service_name=lb.service_name,\n    zone=\"all\")\ntestfrontend = ovh.ip_load_balancing.HttpFrontend(\"testfrontend\",\n    default_farm_id=farm80.id,\n    display_name=\"ingress-8080-gra\",\n    http_headers=[\n        \"X-Ip-Header %%ci\",\n        \"X-Port-Header %%cp\",\n    ],\n    port=\"80,443\",\n    service_name=lb.service_name,\n    zone=\"all\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farm80 = new Ovh.IpLoadBalancing.HttpFarm(\"farm80\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        Port = 80,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n    var testfrontend = new Ovh.IpLoadBalancing.HttpFrontend(\"testfrontend\", new()\n    {\n        DefaultFarmId = farm80.Id,\n        DisplayName = \"ingress-8080-gra\",\n        HttpHeaders = new[]\n        {\n            \"X-Ip-Header %%ci\",\n            \"X-Port-Header %%cp\",\n        },\n        Port = \"80,443\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := IpLoadBalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarm80, err := IpLoadBalancing.NewHttpFarm(ctx, \"farm80\", \u0026IpLoadBalancing.HttpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:        pulumi.Int(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = IpLoadBalancing.NewHttpFrontend(ctx, \"testfrontend\", \u0026IpLoadBalancing.HttpFrontendArgs{\n\t\t\tDefaultFarmId: farm80.ID(),\n\t\t\tDisplayName:   pulumi.String(\"ingress-8080-gra\"),\n\t\t\tHttpHeaders: pulumi.StringArray{\n\t\t\t\tpulumi.String(fmt.Sprintf(\"X-Ip-Header %v%vci\", \"%\", \"%\")),\n\t\t\t\tpulumi.String(fmt.Sprintf(\"X-Port-Header %v%vcp\", \"%\", \"%\")),\n\t\t\t},\n\t\t\tPort:        pulumi.String(\"80,443\"),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFrontend;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFrontendArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farm80 = new HttpFarm(\"farm80\", HttpFarmArgs.builder()        \n            .displayName(\"ingress-8080-gra\")\n            .port(80)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n        var testfrontend = new HttpFrontend(\"testfrontend\", HttpFrontendArgs.builder()        \n            .defaultFarmId(farm80.id())\n            .displayName(\"ingress-8080-gra\")\n            .httpHeaders(            \n                \"X-Ip-Header %%ci\",\n                \"X-Port-Header %%cp\")\n            .port(\"80,443\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farm80:\n    type: ovh:IpLoadBalancing:HttpFarm\n    properties:\n      displayName: ingress-8080-gra\n      port: 80\n      serviceName: ${lb.serviceName}\n      zone: all\n  testfrontend:\n    type: ovh:IpLoadBalancing:HttpFrontend\n    properties:\n      defaultFarmId: ${farm80.id}\n      displayName: ingress-8080-gra\n      httpHeaders:\n        - X-Ip-Header %%ci\n        - X-Port-Header %%cp\n      port: 80,443\n      serviceName: ${lb.serviceName}\n      zone: all\nvariables:\n  lb:\n    fn::invoke:\n      Function: ovh:IpLoadBalancing:getIpLoadBalancing\n      Arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "hsts": {
                    "type": "boolean",
                    "description": "HTTP Strict Transport Security. Default: 'false'\n"
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "HTTP headers to add to the frontend. List of string.\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value),\nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "redirectLocation": {
                    "type": "string",
                    "description": "Redirection HTTP'\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "required": [
                "defaultFarmId",
                "defaultSslId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "hsts": {
                    "type": "boolean",
                    "description": "HTTP Strict Transport Security. Default: 'false'\n"
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "HTTP headers to add to the frontend. List of string.\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value),\nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "redirectLocation": {
                    "type": "string",
                    "description": "Redirection HTTP'\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpFrontend resources.\n",
                "properties": {
                    "allowedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                    },
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                    },
                    "defaultFarmId": {
                        "type": "integer",
                        "description": "Default TCP Farm of your frontend\n"
                    },
                    "defaultSslId": {
                        "type": "integer",
                        "description": "Default ssl served to your customer\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable your frontend. Default: 'false'\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your frontend, this field is for you\n"
                    },
                    "hsts": {
                        "type": "boolean",
                        "description": "HTTP Strict Transport Security. Default: 'false'\n"
                    },
                    "httpHeaders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "HTTP headers to add to the frontend. List of string.\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Port(s) attached to your frontend. Supports single port (numerical value),\nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                    },
                    "redirectLocation": {
                        "type": "string",
                        "description": "Redirection HTTP'\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "SSL deciphering. Default: 'false'\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpRoute:HttpRoute": {
            "description": "Manage HTTP route for a loadbalancer service\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nRoute which redirect all url to https.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst httpsredirect = new ovh.IpLoadBalancing.HttpRoute(\"httpsredirect\", {\n    action: {\n        status: 302,\n        target: \"https://${host}${path}${arguments}\",\n        type: \"redirect\",\n    },\n    displayName: \"Redirect to HTTPS\",\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nhttpsredirect = ovh.ip_load_balancing.HttpRoute(\"httpsredirect\",\n    action=ovh.ip_load_balancing.HttpRouteActionArgs(\n        status=302,\n        target=f\"https://{host}{path}{arguments}\",\n        type=\"redirect\",\n    ),\n    display_name=\"Redirect to HTTPS\",\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var httpsredirect = new Ovh.IpLoadBalancing.HttpRoute(\"httpsredirect\", new()\n    {\n        Action = new Ovh.IpLoadBalancing.Inputs.HttpRouteActionArgs\n        {\n            Status = 302,\n            Target = $\"https://{host}{path}{arguments}\",\n            Type = \"redirect\",\n        },\n        DisplayName = \"Redirect to HTTPS\",\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := IpLoadBalancing.NewHttpRoute(ctx, \"httpsredirect\", \u0026IpLoadBalancing.HttpRouteArgs{\n\t\t\tAction: \u0026iploadbalancing.HttpRouteActionArgs{\n\t\t\t\tStatus: pulumi.Int(302),\n\t\t\t\tTarget: pulumi.String(fmt.Sprintf(\"https://%v%v%v\", host, path, arguments)),\n\t\t\t\tType:   pulumi.String(\"redirect\"),\n\t\t\t},\n\t\t\tDisplayName: pulumi.String(\"Redirect to HTTPS\"),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRoute;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.HttpRouteActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var httpsredirect = new HttpRoute(\"httpsredirect\", HttpRouteArgs.builder()        \n            .action(HttpRouteActionArgs.builder()\n                .status(302)\n                .target(String.format(\"https://%s%s%s\", host,path,arguments))\n                .type(\"redirect\")\n                .build())\n            .displayName(\"Redirect to HTTPS\")\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  httpsredirect:\n    type: ovh:IpLoadBalancing:HttpRoute\n    properties:\n      action:\n        status: 302\n        target: https://${host}${path}${arguments}\n        type: redirect\n      displayName: Redirect to HTTPS\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteRule:HttpRouteRule"
                    },
                    "description": "List of rules to match to trigger action\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "HTTP status code for \"redirect\" and \"reject\" actions\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "required": [
                "action",
                "frontendId",
                "rules",
                "serviceName",
                "status",
                "weight"
            ],
            "inputProperties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "requiredInputs": [
                "action",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpRoute resources.\n",
                "properties": {
                    "action": {
                        "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction",
                        "description": "Action triggered when all rules match\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your route, this field is for you\n"
                    },
                    "frontendId": {
                        "type": "integer",
                        "description": "Route traffic for this frontend\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteRule:HttpRouteRule"
                        },
                        "description": "List of rules to match to trigger action\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "HTTP status code for \"redirect\" and \"reject\" actions\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpRouteRule:HttpRouteRule": {
            "description": "Manage rules for HTTP route.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nRoute which redirect all URL to HTTPs for example.com (Vhost).\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst httpsredirect = new ovh.IpLoadBalancing.HttpRoute(\"httpsredirect\", {\n    action: {\n        status: 302,\n        target: \"https://${host}${path}${arguments}\",\n        type: \"redirect\",\n    },\n    displayName: \"Redirect to HTTPS\",\n    frontendId: 11111,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\nconst examplerule = new ovh.IpLoadBalancing.HttpRouteRule(\"examplerule\", {\n    displayName: \"Match example.com host\",\n    field: \"host\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n    routeId: httpsredirect.id,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nhttpsredirect = ovh.ip_load_balancing.HttpRoute(\"httpsredirect\",\n    action=ovh.ip_load_balancing.HttpRouteActionArgs(\n        status=302,\n        target=f\"https://{host}{path}{arguments}\",\n        type=\"redirect\",\n    ),\n    display_name=\"Redirect to HTTPS\",\n    frontend_id=11111,\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\nexamplerule = ovh.ip_load_balancing.HttpRouteRule(\"examplerule\",\n    display_name=\"Match example.com host\",\n    field=\"host\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\",\n    route_id=httpsredirect.id,\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var httpsredirect = new Ovh.IpLoadBalancing.HttpRoute(\"httpsredirect\", new()\n    {\n        Action = new Ovh.IpLoadBalancing.Inputs.HttpRouteActionArgs\n        {\n            Status = 302,\n            Target = $\"https://{host}{path}{arguments}\",\n            Type = \"redirect\",\n        },\n        DisplayName = \"Redirect to HTTPS\",\n        FrontendId = 11111,\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n    });\n\n    var examplerule = new Ovh.IpLoadBalancing.HttpRouteRule(\"examplerule\", new()\n    {\n        DisplayName = \"Match example.com host\",\n        Field = \"host\",\n        Match = \"is\",\n        Negate = false,\n        Pattern = \"example.com\",\n        RouteId = httpsredirect.Id,\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\thttpsredirect, err := IpLoadBalancing.NewHttpRoute(ctx, \"httpsredirect\", \u0026IpLoadBalancing.HttpRouteArgs{\n\t\t\tAction: \u0026iploadbalancing.HttpRouteActionArgs{\n\t\t\t\tStatus: pulumi.Int(302),\n\t\t\t\tTarget: pulumi.String(fmt.Sprintf(\"https://%v%v%v\", host, path, arguments)),\n\t\t\t\tType:   pulumi.String(\"redirect\"),\n\t\t\t},\n\t\t\tDisplayName: pulumi.String(\"Redirect to HTTPS\"),\n\t\t\tFrontendId:  pulumi.Int(11111),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = IpLoadBalancing.NewHttpRouteRule(ctx, \"examplerule\", \u0026IpLoadBalancing.HttpRouteRuleArgs{\n\t\t\tDisplayName: pulumi.String(\"Match example.com host\"),\n\t\t\tField:       pulumi.String(\"host\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t\tRouteId:     httpsredirect.ID(),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRoute;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.HttpRouteActionArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteRule;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var httpsredirect = new HttpRoute(\"httpsredirect\", HttpRouteArgs.builder()        \n            .action(HttpRouteActionArgs.builder()\n                .status(302)\n                .target(String.format(\"https://%s%s%s\", host,path,arguments))\n                .type(\"redirect\")\n                .build())\n            .displayName(\"Redirect to HTTPS\")\n            .frontendId(11111)\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .build());\n\n        var examplerule = new HttpRouteRule(\"examplerule\", HttpRouteRuleArgs.builder()        \n            .displayName(\"Match example.com host\")\n            .field(\"host\")\n            .match(\"is\")\n            .negate(false)\n            .pattern(\"example.com\")\n            .routeId(httpsredirect.id())\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  httpsredirect:\n    type: ovh:IpLoadBalancing:HttpRoute\n    properties:\n      action:\n        status: 302\n        target: https://${host}${path}${arguments}\n        type: redirect\n      displayName: Redirect to HTTPS\n      frontendId: 11111\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n  examplerule:\n    type: ovh:IpLoadBalancing:HttpRouteRule\n    properties:\n      displayName: Match example.com host\n      field: host\n      match: is\n      negate: false\n      pattern: example.com\n      routeId: ${httpsredirect.id}\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n```\n\nRule which match a specific header (same effect as the host match above).\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst examplerule = new ovh.IpLoadBalancing.HttpRouteRule(\"examplerule\", {\n    displayName: \"Match example.com Host header\",\n    field: \"headers\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n    routeId: ovh_iploadbalancing_http_route_httpsredirect.id,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    subField: \"Host\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nexamplerule = ovh.ip_load_balancing.HttpRouteRule(\"examplerule\",\n    display_name=\"Match example.com Host header\",\n    field=\"headers\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\",\n    route_id=ovh_iploadbalancing_http_route[\"httpsredirect\"][\"id\"],\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    sub_field=\"Host\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var examplerule = new Ovh.IpLoadBalancing.HttpRouteRule(\"examplerule\", new()\n    {\n        DisplayName = \"Match example.com Host header\",\n        Field = \"headers\",\n        Match = \"is\",\n        Negate = false,\n        Pattern = \"example.com\",\n        RouteId = ovh_iploadbalancing_http_route.Httpsredirect.Id,\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        SubField = \"Host\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := IpLoadBalancing.NewHttpRouteRule(ctx, \"examplerule\", \u0026IpLoadBalancing.HttpRouteRuleArgs{\n\t\t\tDisplayName: pulumi.String(\"Match example.com Host header\"),\n\t\t\tField:       pulumi.String(\"headers\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t\tRouteId:     pulumi.Any(ovh_iploadbalancing_http_route.Httpsredirect.Id),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tSubField:    pulumi.String(\"Host\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteRule;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var examplerule = new HttpRouteRule(\"examplerule\", HttpRouteRuleArgs.builder()        \n            .displayName(\"Match example.com Host header\")\n            .field(\"headers\")\n            .match(\"is\")\n            .negate(false)\n            .pattern(\"example.com\")\n            .routeId(ovh_iploadbalancing_http_route.httpsredirect().id())\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .subField(\"Host\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  examplerule:\n    type: ovh:IpLoadBalancing:HttpRouteRule\n    properties:\n      displayName: Match example.com Host header\n      field: headers\n      match: is\n      negate: false\n      pattern: example.com\n      routeId: ${ovh_iploadbalancing_http_route.httpsredirect.id}\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      subField: Host\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "required": [
                "field",
                "match",
                "negate",
                "routeId",
                "serviceName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "requiredInputs": [
                "field",
                "match",
                "routeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpRouteRule resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your rule, this field is for you\n"
                    },
                    "field": {
                        "type": "string",
                        "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                    },
                    "match": {
                        "type": "string",
                        "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                    },
                    "negate": {
                        "type": "boolean",
                        "description": "Invert the matching operator effect\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                    },
                    "routeId": {
                        "type": "string",
                        "description": "The route to apply this rule\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "subField": {
                        "type": "string",
                        "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/loadBalancer:LoadBalancer": {
            "description": "Orders an IP load balancing.\n\n## Important\n\n\u003e __WARNING__ This resource orders an OVHcloud product for a long period of time and may generate heavy costs!\nUse with caution.\n\n\u003e __NOTE__ The \"default-payment-mean\" will scan your registered bank accounts, credit card and paypal payment means to find your default payment mean.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n    description: \"mycart\",\n});\nconst iplb = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"ipLoadbalancing\",\n    planCode: \"iplb-lb1\",\n}));\nconst bhs = Promise.all([iplb, iplb, iplb, iplb]).then(([iplb, iplb1, iplb2, iplb3]) =\u003e ovh.Order.getCartProductOptionsPlan({\n    cartId: iplb.cartId,\n    priceCapacity: iplb1.priceCapacity,\n    product: iplb2.product,\n    planCode: iplb3.planCode,\n    optionsPlanCode: \"iplb-zone-lb1-rbx\",\n}));\nconst iplb_lb1 = new ovh.iploadbalancing.LoadBalancer(\"iplb-lb1\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    displayName: \"my ip loadbalancing\",\n    paymentMean: \"ovh-account\",\n    plan: {\n        duration: iplb.then(iplb =\u003e iplb.selectedPrices?[0]?.duration),\n        planCode: iplb.then(iplb =\u003e iplb.planCode),\n        pricingMode: iplb.then(iplb =\u003e iplb.selectedPrices?[0]?.pricingMode),\n    },\n    planOptions: [{\n        duration: bhs.then(bhs =\u003e bhs.selectedPrices?[0]?.duration),\n        planCode: bhs.then(bhs =\u003e bhs.planCode),\n        pricingMode: bhs.then(bhs =\u003e bhs.selectedPrices?[0]?.pricingMode),\n    }],\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\",\n    description=\"mycart\")\niplb = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"ipLoadbalancing\",\n    plan_code=\"iplb-lb1\")\nbhs = ovh.Order.get_cart_product_options_plan(cart_id=iplb.cart_id,\n    price_capacity=iplb.price_capacity,\n    product=iplb.product,\n    plan_code=iplb.plan_code,\n    options_plan_code=\"iplb-zone-lb1-rbx\")\niplb_lb1 = ovh.ip_load_balancing.LoadBalancer(\"iplb-lb1\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    display_name=\"my ip loadbalancing\",\n    payment_mean=\"ovh-account\",\n    plan=ovh.ip_load_balancing.LoadBalancerPlanArgs(\n        duration=iplb.selected_prices[0].duration,\n        plan_code=iplb.plan_code,\n        pricing_mode=iplb.selected_prices[0].pricing_mode,\n    ),\n    plan_options=[ovh.ip_load_balancing.LoadBalancerPlanOptionArgs(\n        duration=bhs.selected_prices[0].duration,\n        plan_code=bhs.plan_code,\n        pricing_mode=bhs.selected_prices[0].pricing_mode,\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"mycart\",\n    });\n\n    var iplb = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"ipLoadbalancing\",\n        PlanCode = \"iplb-lb1\",\n    });\n\n    var bhs = Ovh.Order.GetCartProductOptionsPlan.Invoke(new()\n    {\n        CartId = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.CartId),\n        PriceCapacity = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PriceCapacity),\n        Product = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.Product),\n        PlanCode = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n        OptionsPlanCode = \"iplb-zone-lb1-rbx\",\n    });\n\n    var iplb_lb1 = new Ovh.IpLoadBalancing.LoadBalancer(\"iplb-lb1\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        DisplayName = \"my ip loadbalancing\",\n        PaymentMean = \"ovh-account\",\n        Plan = new Ovh.IpLoadBalancing.Inputs.LoadBalancerPlanArgs\n        {\n            Duration = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n        PlanOptions = new[]\n        {\n            new Ovh.IpLoadBalancing.Inputs.LoadBalancerPlanOptionArgs\n            {\n                Duration = bhs.Apply(getCartProductOptionsPlanResult =\u003e getCartProductOptionsPlanResult.SelectedPrices[0]?.Duration),\n                PlanCode = bhs.Apply(getCartProductOptionsPlanResult =\u003e getCartProductOptionsPlanResult.PlanCode),\n                PricingMode = bhs.Apply(getCartProductOptionsPlanResult =\u003e getCartProductOptionsPlanResult.SelectedPrices[0]?.PricingMode),\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"mycart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tiplb, err := Order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"ipLoadbalancing\",\n\t\t\tPlanCode:      \"iplb-lb1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbhs, err := Order.GetCartProductOptionsPlan(ctx, \u0026order.GetCartProductOptionsPlanArgs{\n\t\t\tCartId:          iplb.CartId,\n\t\t\tPriceCapacity:   iplb.PriceCapacity,\n\t\t\tProduct:         iplb.Product,\n\t\t\tPlanCode:        iplb.PlanCode,\n\t\t\tOptionsPlanCode: \"iplb-zone-lb1-rbx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = IpLoadBalancing.NewLoadBalancer(ctx, \"iplb-lb1\", \u0026IpLoadBalancing.LoadBalancerArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tDisplayName:   pulumi.String(\"my ip loadbalancing\"),\n\t\t\tPaymentMean:   pulumi.String(\"ovh-account\"),\n\t\t\tPlan: \u0026iploadbalancing.LoadBalancerPlanArgs{\n\t\t\t\tDuration:    pulumi.String(iplb.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(iplb.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(iplb.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t\tPlanOptions: iploadbalancing.LoadBalancerPlanOptionArray{\n\t\t\t\t\u0026iploadbalancing.LoadBalancerPlanOptionArgs{\n\t\t\t\t\tDuration:    pulumi.String(bhs.SelectedPrices[0].Duration),\n\t\t\t\t\tPlanCode:    pulumi.String(bhs.PlanCode),\n\t\t\t\t\tPricingMode: pulumi.String(bhs.SelectedPrices[0].PricingMode),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductOptionsPlanArgs;\nimport com.pulumi.ovh.IpLoadBalancing.LoadBalancer;\nimport com.pulumi.ovh.IpLoadBalancing.LoadBalancerArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.LoadBalancerPlanArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.LoadBalancerPlanOptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"mycart\")\n            .build());\n\n        final var iplb = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"ipLoadbalancing\")\n            .planCode(\"iplb-lb1\")\n            .build());\n\n        final var bhs = OrderFunctions.getCartProductOptionsPlan(GetCartProductOptionsPlanArgs.builder()\n            .cartId(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.cartId()))\n            .priceCapacity(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.priceCapacity()))\n            .product(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.product()))\n            .planCode(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n            .optionsPlanCode(\"iplb-zone-lb1-rbx\")\n            .build());\n\n        var iplb_lb1 = new LoadBalancer(\"iplb-lb1\", LoadBalancerArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .displayName(\"my ip loadbalancing\")\n            .paymentMean(\"ovh-account\")\n            .plan(LoadBalancerPlanArgs.builder()\n                .duration(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .planOptions(LoadBalancerPlanOptionArgs.builder()\n                .duration(bhs.applyValue(getCartProductOptionsPlanResult -\u003e getCartProductOptionsPlanResult.selectedPrices()[0].duration()))\n                .planCode(bhs.applyValue(getCartProductOptionsPlanResult -\u003e getCartProductOptionsPlanResult.planCode()))\n                .pricingMode(bhs.applyValue(getCartProductOptionsPlanResult -\u003e getCartProductOptionsPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  iplb-lb1:\n    type: ovh:IpLoadBalancing:LoadBalancer\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      displayName: my ip loadbalancing\n      paymentMean: ovh-account\n      plan:\n        duration: ${iplb.selectedPrices[0].duration}\n        planCode: ${iplb.planCode}\n        pricingMode: ${iplb.selectedPrices[0].pricingMode}\n      planOptions:\n        - duration: ${bhs.selectedPrices[0].duration}\n          planCode: ${bhs.planCode}\n          pricingMode: ${bhs.selectedPrices[0].pricingMode}\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: mycart\n  iplb:\n    fn::invoke:\n      Function: ovh:Order:getCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: ipLoadbalancing\n        planCode: iplb-lb1\n  bhs:\n    fn::invoke:\n      Function: ovh:Order:getCartProductOptionsPlan\n      Arguments:\n        cartId: ${iplb.cartId}\n        priceCapacity: ${iplb.priceCapacity}\n        product: ${iplb.product}\n        planCode: ${iplb.planCode}\n        optionsPlanCode: iplb-zone-lb1-rbx\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                },
                "ipLoadbalancing": {
                    "type": "string",
                    "description": "Your IP load balancing\n"
                },
                "ipv4": {
                    "type": "string",
                    "description": "The IPV4 associated to your IP load balancing\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "The IPV6 associated to your IP load balancing. DEPRECATED.\n"
                },
                "metricsToken": {
                    "type": "string",
                    "description": "The metrics token associated with your IP load balancing\n",
                    "secret": true
                },
                "offer": {
                    "type": "string",
                    "description": "The offer of your IP load balancing\n"
                },
                "orderableZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrderableZone:LoadBalancerOrderableZone"
                    },
                    "description": "Available additional zone for your Load Balancer\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "sslConfiguration": {
                    "type": "string",
                    "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of \"intermediate\", \"modern\".\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of your IP\n"
                },
                "vrackEligibility": {
                    "type": "boolean",
                    "description": "Vrack eligibility\n"
                },
                "vrackName": {
                    "type": "string",
                    "description": "Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Location where your service is\n"
                }
            },
            "required": [
                "displayName",
                "ipLoadbalancing",
                "ipv4",
                "ipv6",
                "metricsToken",
                "offer",
                "orders",
                "orderableZones",
                "ovhSubsidiary",
                "paymentMean",
                "plan",
                "serviceName",
                "sslConfiguration",
                "state",
                "vrackEligibility",
                "vrackName",
                "zones"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "sslConfiguration": {
                    "type": "string",
                    "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of \"intermediate\", \"modern\".\n"
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadBalancer resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string",
                        "description": "Your IP load balancing\n"
                    },
                    "ipv4": {
                        "type": "string",
                        "description": "The IPV4 associated to your IP load balancing\n"
                    },
                    "ipv6": {
                        "type": "string",
                        "description": "The IPV6 associated to your IP load balancing. DEPRECATED.\n"
                    },
                    "metricsToken": {
                        "type": "string",
                        "description": "The metrics token associated with your IP load balancing\n",
                        "secret": true
                    },
                    "offer": {
                        "type": "string",
                        "description": "The offer of your IP load balancing\n"
                    },
                    "orderableZones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrderableZone:LoadBalancerOrderableZone"
                        },
                        "description": "Available additional zone for your Load Balancer\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "sslConfiguration": {
                        "type": "string",
                        "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of \"intermediate\", \"modern\".\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your IP\n"
                    },
                    "vrackEligibility": {
                        "type": "boolean",
                        "description": "Vrack eligibility\n"
                    },
                    "vrackName": {
                        "type": "string",
                        "description": "Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Location where your service is\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/refresh:Refresh": {
            "description": "Applies changes from other `ovh_iploadbalancing_*` resources to the production configuration of loadbalancers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farmname = new ovh.IpLoadBalancing.TcpFarm(\"farmname\", {\n    port: 8080,\n    serviceName: lb.id,\n    zone: \"all\",\n});\nconst backend = new ovh.IpLoadBalancing.TcpFarmServer(\"backend\", {\n    address: \"4.5.6.7\",\n    backup: true,\n    displayName: \"mybackend\",\n    farmId: farmname.id.apply(id =\u003e Number.parseFloat(id)),\n    port: 80,\n    probe: true,\n    proxyProtocolVersion: \"v2\",\n    serviceName: lb.id,\n    ssl: false,\n    status: \"active\",\n    weight: 2,\n});\nconst mylb = new ovh.IpLoadBalancing.Refresh(\"mylb\", {\n    keepers: [backend.address],\n    serviceName: lb.id,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.ip_load_balancing.TcpFarm(\"farmname\",\n    port=8080,\n    service_name=lb.id,\n    zone=\"all\")\nbackend = ovh.ip_load_balancing.TcpFarmServer(\"backend\",\n    address=\"4.5.6.7\",\n    backup=True,\n    display_name=\"mybackend\",\n    farm_id=farmname.id,\n    port=80,\n    probe=True,\n    proxy_protocol_version=\"v2\",\n    service_name=lb.id,\n    ssl=False,\n    status=\"active\",\n    weight=2)\nmylb = ovh.ip_load_balancing.Refresh(\"mylb\",\n    keepers=[[__item.address for __item in [backend]]],\n    service_name=lb.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmname = new Ovh.IpLoadBalancing.TcpFarm(\"farmname\", new()\n    {\n        Port = 8080,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.Id),\n        Zone = \"all\",\n    });\n\n    var backend = new Ovh.IpLoadBalancing.TcpFarmServer(\"backend\", new()\n    {\n        Address = \"4.5.6.7\",\n        Backup = true,\n        DisplayName = \"mybackend\",\n        FarmId = farmname.Id,\n        Port = 80,\n        Probe = true,\n        ProxyProtocolVersion = \"v2\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.Id),\n        Ssl = false,\n        Status = \"active\",\n        Weight = 2,\n    });\n\n    var mylb = new Ovh.IpLoadBalancing.Refresh(\"mylb\", new()\n    {\n        Keepers = new[]\n        {\n            new[]\n            {\n                backend,\n            }.Select(__item =\u003e __item.Address).ToList(),\n        },\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.Id),\n    });\n\n});\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmServer;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmServerArgs;\nimport com.pulumi.ovh.IpLoadBalancing.Refresh;\nimport com.pulumi.ovh.IpLoadBalancing.RefreshArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmname = new TcpFarm(\"farmname\", TcpFarmArgs.builder()        \n            .port(8080)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.id()))\n            .zone(\"all\")\n            .build());\n\n        var backend = new TcpFarmServer(\"backend\", TcpFarmServerArgs.builder()        \n            .address(\"4.5.6.7\")\n            .backup(true)\n            .displayName(\"mybackend\")\n            .farmId(farmname.id())\n            .port(80)\n            .probe(true)\n            .proxyProtocolVersion(\"v2\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.id()))\n            .ssl(false)\n            .status(\"active\")\n            .weight(2)\n            .build());\n\n        var mylb = new Refresh(\"mylb\", RefreshArgs.builder()        \n            .keepers(backend.stream().map(element -\u003e element.address()).collect(toList()))\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.id()))\n            .build());\n\n    }\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values tracked to trigger refresh, used also to form implicit dependencies\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                }
            },
            "required": [
                "keepers",
                "serviceName"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values tracked to trigger refresh, used also to form implicit dependencies\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "keepers",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Refresh resources.\n",
                "properties": {
                    "keepers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of values tracked to trigger refresh, used also to form implicit dependencies\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpFarm:TcpFarm": {
            "description": "Creates a backend server group (farm) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farmname = new ovh.IpLoadBalancing.TcpFarm(\"farmname\", {\n    displayName: \"ingress-8080-gra\",\n    serviceName: lb.id,\n    zone: \"GRA\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.ip_load_balancing.TcpFarm(\"farmname\",\n    display_name=\"ingress-8080-gra\",\n    service_name=lb.id,\n    zone=\"GRA\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmname = new Ovh.IpLoadBalancing.TcpFarm(\"farmname\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.Id),\n        Zone = \"GRA\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := IpLoadBalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = IpLoadBalancing.NewTcpFarm(ctx, \"farmname\", \u0026IpLoadBalancing.TcpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tServiceName: pulumi.String(lb.Id),\n\t\t\tZone:        pulumi.String(\"GRA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmname = new TcpFarm(\"farmname\", TcpFarmArgs.builder()        \n            .displayName(\"ingress-8080-gra\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.id()))\n            .zone(\"GRA\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farmname:\n    type: ovh:IpLoadBalancing:TcpFarm\n    properties:\n      displayName: ingress-8080-gra\n      serviceName: ${lb.id}\n      zone: GRA\nvariables:\n  lb:\n    fn::invoke:\n      Function: ovh:IpLoadBalancing:getIpLoadBalancing\n      Arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to receive traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                }
            },
            "required": [
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to receive traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpFarm resources.\n",
                "properties": {
                    "balance": {
                        "type": "string",
                        "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Readable label for loadbalancer farm\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port for backends to receive traffic on.\n"
                    },
                    "probe": {
                        "$ref": "#/types/ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe",
                        "description": "define a backend healthcheck probe\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "stickiness": {
                        "type": "string",
                        "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpFarmServer:TcpFarmServer": {
            "description": "Creates a backend server entry linked to loadbalancing group (farm)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farmname = new ovh.IpLoadBalancing.TcpFarm(\"farmname\", {\n    port: 8080,\n    serviceName: lb.id,\n    zone: \"all\",\n});\nconst backend = new ovh.IpLoadBalancing.TcpFarmServer(\"backend\", {\n    address: \"4.5.6.7\",\n    backup: true,\n    displayName: \"mybackend\",\n    farmId: farmname.id.apply(id =\u003e Number.parseFloat(id)),\n    port: 80,\n    probe: true,\n    proxyProtocolVersion: \"v2\",\n    serviceName: lb.id,\n    ssl: false,\n    status: \"active\",\n    weight: 2,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.ip_load_balancing.TcpFarm(\"farmname\",\n    port=8080,\n    service_name=lb.id,\n    zone=\"all\")\nbackend = ovh.ip_load_balancing.TcpFarmServer(\"backend\",\n    address=\"4.5.6.7\",\n    backup=True,\n    display_name=\"mybackend\",\n    farm_id=farmname.id,\n    port=80,\n    probe=True,\n    proxy_protocol_version=\"v2\",\n    service_name=lb.id,\n    ssl=False,\n    status=\"active\",\n    weight=2)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmname = new Ovh.IpLoadBalancing.TcpFarm(\"farmname\", new()\n    {\n        Port = 8080,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.Id),\n        Zone = \"all\",\n    });\n\n    var backend = new Ovh.IpLoadBalancing.TcpFarmServer(\"backend\", new()\n    {\n        Address = \"4.5.6.7\",\n        Backup = true,\n        DisplayName = \"mybackend\",\n        FarmId = farmname.Id,\n        Port = 80,\n        Probe = true,\n        ProxyProtocolVersion = \"v2\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.Id),\n        Ssl = false,\n        Status = \"active\",\n        Weight = 2,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := IpLoadBalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarmname, err := IpLoadBalancing.NewTcpFarm(ctx, \"farmname\", \u0026IpLoadBalancing.TcpFarmArgs{\n\t\t\tPort:        pulumi.Int(8080),\n\t\t\tServiceName: pulumi.String(lb.Id),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = IpLoadBalancing.NewTcpFarmServer(ctx, \"backend\", \u0026IpLoadBalancing.TcpFarmServerArgs{\n\t\t\tAddress:              pulumi.String(\"4.5.6.7\"),\n\t\t\tBackup:               pulumi.Bool(true),\n\t\t\tDisplayName:          pulumi.String(\"mybackend\"),\n\t\t\tFarmId:               farmname.ID(),\n\t\t\tPort:                 pulumi.Int(80),\n\t\t\tProbe:                pulumi.Bool(true),\n\t\t\tProxyProtocolVersion: pulumi.String(\"v2\"),\n\t\t\tServiceName:          pulumi.String(lb.Id),\n\t\t\tSsl:                  pulumi.Bool(false),\n\t\t\tStatus:               pulumi.String(\"active\"),\n\t\t\tWeight:               pulumi.Int(2),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmServer;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmname = new TcpFarm(\"farmname\", TcpFarmArgs.builder()        \n            .port(8080)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.id()))\n            .zone(\"all\")\n            .build());\n\n        var backend = new TcpFarmServer(\"backend\", TcpFarmServerArgs.builder()        \n            .address(\"4.5.6.7\")\n            .backup(true)\n            .displayName(\"mybackend\")\n            .farmId(farmname.id())\n            .port(80)\n            .probe(true)\n            .proxyProtocolVersion(\"v2\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.id()))\n            .ssl(false)\n            .status(\"active\")\n            .weight(2)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farmname:\n    type: ovh:IpLoadBalancing:TcpFarm\n    properties:\n      port: 8080\n      serviceName: ${lb.id}\n      zone: all\n  backend:\n    type: ovh:IpLoadBalancing:TcpFarmServer\n    properties:\n      address: 4.5.6.7\n      backup: true\n      displayName: mybackend\n      farmId: ${farmname.id}\n      port: 80\n      probe: true\n      proxyProtocolVersion: v2\n      serviceName: ${lb.id}\n      ssl: false\n      status: active\n      weight: 2\nvariables:\n  lb:\n    fn::invoke:\n      Function: ovh:IpLoadBalancing:getIpLoadBalancing\n      Arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVHcloud network)\n"
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n"
                },
                "onMarkedDown": {
                    "type": "string",
                    "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "required": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVHcloud network)\n",
                    "willReplaceOnChanges": true
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n",
                    "willReplaceOnChanges": true
                },
                "onMarkedDown": {
                    "type": "string",
                    "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the backend server (IP from either internal or OVHcloud network)\n",
                        "willReplaceOnChanges": true
                    },
                    "backup": {
                        "type": "boolean",
                        "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Label for the server\n"
                    },
                    "farmId": {
                        "type": "integer",
                        "description": "ID of the farm this server is attached to\n",
                        "willReplaceOnChanges": true
                    },
                    "onMarkedDown": {
                        "type": "string",
                        "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port that backend will respond on\n"
                    },
                    "probe": {
                        "type": "boolean",
                        "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                    },
                    "proxyProtocolVersion": {
                        "type": "string",
                        "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "is the connection ciphered with SSL (TLS)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "backend status - `active` or `inactive`\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "used in loadbalancing algorithm\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpFrontend:TcpFrontend": {
            "description": "Creates a backend server group (frontend) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farm80 = new ovh.IpLoadBalancing.TcpFarm(\"farm80\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\nconst testfrontend = new ovh.IpLoadBalancing.TcpFrontend(\"testfrontend\", {\n    defaultFarmId: farm80.id.apply(id =\u003e Number.parseFloat(id)),\n    displayName: \"ingress-8080-gra\",\n    port: \"80,443\",\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm80 = ovh.ip_load_balancing.TcpFarm(\"farm80\",\n    display_name=\"ingress-8080-gra\",\n    port=80,\n    service_name=lb.service_name,\n    zone=\"all\")\ntestfrontend = ovh.ip_load_balancing.TcpFrontend(\"testfrontend\",\n    default_farm_id=farm80.id,\n    display_name=\"ingress-8080-gra\",\n    port=\"80,443\",\n    service_name=lb.service_name,\n    zone=\"all\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farm80 = new Ovh.IpLoadBalancing.TcpFarm(\"farm80\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        Port = 80,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n    var testfrontend = new Ovh.IpLoadBalancing.TcpFrontend(\"testfrontend\", new()\n    {\n        DefaultFarmId = farm80.Id,\n        DisplayName = \"ingress-8080-gra\",\n        Port = \"80,443\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := IpLoadBalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarm80, err := IpLoadBalancing.NewTcpFarm(ctx, \"farm80\", \u0026IpLoadBalancing.TcpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:        pulumi.Int(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = IpLoadBalancing.NewTcpFrontend(ctx, \"testfrontend\", \u0026IpLoadBalancing.TcpFrontendArgs{\n\t\t\tDefaultFarmId: farm80.ID(),\n\t\t\tDisplayName:   pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:          pulumi.String(\"80,443\"),\n\t\t\tServiceName:   pulumi.String(lb.ServiceName),\n\t\t\tZone:          pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFrontend;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFrontendArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farm80 = new TcpFarm(\"farm80\", TcpFarmArgs.builder()        \n            .displayName(\"ingress-8080-gra\")\n            .port(80)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n        var testfrontend = new TcpFrontend(\"testfrontend\", TcpFrontendArgs.builder()        \n            .defaultFarmId(farm80.id())\n            .displayName(\"ingress-8080-gra\")\n            .port(\"80,443\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farm80:\n    type: ovh:IpLoadBalancing:TcpFarm\n    properties:\n      displayName: ingress-8080-gra\n      port: 80\n      serviceName: ${lb.serviceName}\n      zone: all\n  testfrontend:\n    type: ovh:IpLoadBalancing:TcpFrontend\n    properties:\n      defaultFarmId: ${farm80.id}\n      displayName: ingress-8080-gra\n      port: 80,443\n      serviceName: ${lb.serviceName}\n      zone: all\nvariables:\n  lb:\n    fn::invoke:\n      Function: ovh:IpLoadBalancing:getIpLoadBalancing\n      Arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "required": [
                "defaultFarmId",
                "defaultSslId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpFrontend resources.\n",
                "properties": {
                    "allowedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                    },
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                    },
                    "defaultFarmId": {
                        "type": "integer",
                        "description": "Default TCP Farm of your frontend\n"
                    },
                    "defaultSslId": {
                        "type": "integer",
                        "description": "Default ssl served to your customer\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable your frontend. Default: 'false'\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your frontend, this field is for you\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "SSL deciphering. Default: 'false'\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpRoute:TcpRoute": {
            "description": "Manage TCP route for a loadbalancer service\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst tcpreject = new ovh.IpLoadBalancing.TcpRoute(\"tcpreject\", {\n    action: {\n        type: \"reject\",\n    },\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\ntcpreject = ovh.ip_load_balancing.TcpRoute(\"tcpreject\",\n    action=ovh.ip_load_balancing.TcpRouteActionArgs(\n        type=\"reject\",\n    ),\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var tcpreject = new Ovh.IpLoadBalancing.TcpRoute(\"tcpreject\", new()\n    {\n        Action = new Ovh.IpLoadBalancing.Inputs.TcpRouteActionArgs\n        {\n            Type = \"reject\",\n        },\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := IpLoadBalancing.NewTcpRoute(ctx, \"tcpreject\", \u0026IpLoadBalancing.TcpRouteArgs{\n\t\t\tAction: \u0026iploadbalancing.TcpRouteActionArgs{\n\t\t\t\tType: pulumi.String(\"reject\"),\n\t\t\t},\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRoute;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRouteArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.TcpRouteActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var tcpreject = new TcpRoute(\"tcpreject\", TcpRouteArgs.builder()        \n            .action(TcpRouteActionArgs.builder()\n                .type(\"reject\")\n                .build())\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  tcpreject:\n    type: ovh:IpLoadBalancing:TcpRoute\n    properties:\n      action:\n        type: reject\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteRule:TcpRouteRule"
                    },
                    "description": "List of rules to match to trigger action\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "required": [
                "action",
                "frontendId",
                "rules",
                "serviceName",
                "status",
                "weight"
            ],
            "inputProperties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "requiredInputs": [
                "action",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpRoute resources.\n",
                "properties": {
                    "action": {
                        "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction",
                        "description": "Action triggered when all rules match\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your route, this field is for you\n"
                    },
                    "frontendId": {
                        "type": "integer",
                        "description": "Route traffic for this frontend\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteRule:TcpRouteRule"
                        },
                        "description": "List of rules to match to trigger action\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpRouteRule:TcpRouteRule": {
            "description": "Manage rules for TCP route.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\n\nconst reject = new ovh.iploadbalancing.TcpRoute(\"reject\", {\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n    frontendId: 11111,\n    action: {\n        type: \"reject\",\n    },\n});\nconst examplerule = new ovh.iploadbalancing.TcpRouteRule(\"examplerule\", {\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    routeId: reject.id,\n    displayName: \"Match example.com host\",\n    field: \"sni\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nreject = ovh.ip_load_balancing.TcpRoute(\"reject\",\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1,\n    frontend_id=11111,\n    action=ovh.ip_load_balancing.TcpRouteActionArgs(\n        type=\"reject\",\n    ))\nexamplerule = ovh.ip_load_balancing.TcpRouteRule(\"examplerule\",\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    route_id=reject.id,\n    display_name=\"Match example.com host\",\n    field=\"sni\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var reject = new Ovh.IpLoadBalancing.TcpRoute(\"reject\", new()\n    {\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n        FrontendId = 11111,\n        Action = new Ovh.IpLoadBalancing.Inputs.TcpRouteActionArgs\n        {\n            Type = \"reject\",\n        },\n    });\n\n    var examplerule = new Ovh.IpLoadBalancing.TcpRouteRule(\"examplerule\", new()\n    {\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        RouteId = reject.Id,\n        DisplayName = \"Match example.com host\",\n        Field = \"sni\",\n        Match = \"is\",\n        Negate = false,\n        Pattern = \"example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treject, err := IpLoadBalancing.NewTcpRoute(ctx, \"reject\", \u0026IpLoadBalancing.TcpRouteArgs{\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t\tFrontendId:  pulumi.Int(11111),\n\t\t\tAction: \u0026iploadbalancing.TcpRouteActionArgs{\n\t\t\t\tType: pulumi.String(\"reject\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = IpLoadBalancing.NewTcpRouteRule(ctx, \"examplerule\", \u0026IpLoadBalancing.TcpRouteRuleArgs{\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tRouteId:     reject.ID(),\n\t\t\tDisplayName: pulumi.String(\"Match example.com host\"),\n\t\t\tField:       pulumi.String(\"sni\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRoute;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRouteArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.TcpRouteActionArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRouteRule;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRouteRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var reject = new TcpRoute(\"reject\", TcpRouteArgs.builder()        \n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .frontendId(11111)\n            .action(TcpRouteActionArgs.builder()\n                .type(\"reject\")\n                .build())\n            .build());\n\n        var examplerule = new TcpRouteRule(\"examplerule\", TcpRouteRuleArgs.builder()        \n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .routeId(reject.id())\n            .displayName(\"Match example.com host\")\n            .field(\"sni\")\n            .match(\"is\")\n            .negate(false)\n            .pattern(\"example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  reject:\n    type: ovh:IpLoadBalancing:TcpRoute\n    properties:\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n      frontendId: 11111\n      action:\n        type: reject\n  examplerule:\n    type: ovh:IpLoadBalancing:TcpRouteRule\n    properties:\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      routeId: ${reject.id}\n      displayName: Match example.com host\n      field: sni\n      match: is\n      negate: false\n      pattern: example.com\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "required": [
                "field",
                "match",
                "negate",
                "routeId",
                "serviceName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "requiredInputs": [
                "field",
                "match",
                "routeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpRouteRule resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your rule, this field is for you\n"
                    },
                    "field": {
                        "type": "string",
                        "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                    },
                    "match": {
                        "type": "string",
                        "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                    },
                    "negate": {
                        "type": "boolean",
                        "description": "Invert the matching operator effect\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                    },
                    "routeId": {
                        "type": "string",
                        "description": "The route to apply this rule\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "subField": {
                        "type": "string",
                        "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/vrackNetwork:VrackNetwork": {
            "description": "Manage a vrack network for your IP Loadbalancing service.\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your vrack network\n"
                },
                "farmIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "This attribute is there for documentation purpose only and isnt passed to the OVHcloud API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                },
                "natIp": {
                    "type": "string",
                    "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "IP block of the private network in the vRack\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "(Required) Internal Load Balancer identifier of the vRack private network\n"
                }
            },
            "required": [
                "natIp",
                "serviceName",
                "subnet",
                "vlan",
                "vrackNetworkId"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your vrack network\n"
                },
                "farmIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "This attribute is there for documentation purpose only and isnt passed to the OVHcloud API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                },
                "natIp": {
                    "type": "string",
                    "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "IP block of the private network in the vRack\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                }
            },
            "requiredInputs": [
                "natIp",
                "serviceName",
                "subnet"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrackNetwork resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your vrack network\n"
                    },
                    "farmIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "This attribute is there for documentation purpose only and isnt passed to the OVHcloud API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                    },
                    "natIp": {
                        "type": "string",
                        "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "IP block of the private network in the vRack\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "(Required) Internal Load Balancer identifier of the vRack private network\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/identityUser:IdentityUser": {
            "description": "Creates an identity user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myUser = new ovh.Me.IdentityUser(\"my_user\", {\n    description: \"Some custom description\",\n    email: \"my_login@example.com\",\n    group: \"DEFAULT\",\n    login: \"my_login\",\n    password: \"super-s3cr3t!password\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmy_user = ovh.me.IdentityUser(\"myUser\",\n    description=\"Some custom description\",\n    email=\"my_login@example.com\",\n    group=\"DEFAULT\",\n    login=\"my_login\",\n    password=\"super-s3cr3t!password\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myUser = new Ovh.Me.IdentityUser(\"myUser\", new()\n    {\n        Description = \"Some custom description\",\n        Email = \"my_login@example.com\",\n        Group = \"DEFAULT\",\n        Login = \"my_login\",\n        Password = \"super-s3cr3t!password\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Me.NewIdentityUser(ctx, \"myUser\", \u0026Me.IdentityUserArgs{\n\t\t\tDescription: pulumi.String(\"Some custom description\"),\n\t\t\tEmail:       pulumi.String(\"my_login@example.com\"),\n\t\t\tGroup:       pulumi.String(\"DEFAULT\"),\n\t\t\tLogin:       pulumi.String(\"my_login\"),\n\t\t\tPassword:    pulumi.String(\"super-s3cr3t!password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.IdentityUser;\nimport com.pulumi.ovh.Me.IdentityUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myUser = new IdentityUser(\"myUser\", IdentityUserArgs.builder()        \n            .description(\"Some custom description\")\n            .email(\"my_login@example.com\")\n            .group(\"DEFAULT\")\n            .login(\"my_login\")\n            .password(\"super-s3cr3t!password\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myUser:\n    type: ovh:Me:IdentityUser\n    properties:\n      description: Some custom description\n      email: my_login@example.com\n      group: DEFAULT\n      login: my_login\n      password: super-s3cr3t!password\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "creation": {
                    "type": "string",
                    "description": "Creation date of this user.\n"
                },
                "description": {
                    "type": "string",
                    "description": "User description.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User's email.\n"
                },
                "group": {
                    "type": "string",
                    "description": "User's group.\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update of this user.\n"
                },
                "login": {
                    "type": "string",
                    "description": "User's login suffix.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User's password.\n",
                    "secret": true
                },
                "passwordLastUpdate": {
                    "type": "string",
                    "description": "When the user changed his password for the last time.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current user's status.\n"
                }
            },
            "required": [
                "creation",
                "email",
                "lastUpdate",
                "login",
                "password",
                "passwordLastUpdate",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "User description.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User's email.\n"
                },
                "group": {
                    "type": "string",
                    "description": "User's group.\n"
                },
                "login": {
                    "type": "string",
                    "description": "User's login suffix.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "User's password.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "email",
                "login",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityUser resources.\n",
                "properties": {
                    "creation": {
                        "type": "string",
                        "description": "Creation date of this user.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User description.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "User's group.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update of this user.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "User's login suffix.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password.\n",
                        "secret": true
                    },
                    "passwordLastUpdate": {
                        "type": "string",
                        "description": "When the user changed his password for the last time.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current user's status.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/installationTemplate:InstallationTemplate": {
            "description": "Use this resource to create a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mytemplate = new ovh.Me.InstallationTemplate(\"mytemplate\", {\n    baseTemplateName: \"centos7_64\",\n    defaultLanguage: \"en\",\n    templateName: \"mytemplate\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmytemplate = ovh.me.InstallationTemplate(\"mytemplate\",\n    base_template_name=\"centos7_64\",\n    default_language=\"en\",\n    template_name=\"mytemplate\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytemplate = new Ovh.Me.InstallationTemplate(\"mytemplate\", new()\n    {\n        BaseTemplateName = \"centos7_64\",\n        DefaultLanguage = \"en\",\n        TemplateName = \"mytemplate\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Me.NewInstallationTemplate(ctx, \"mytemplate\", \u0026Me.InstallationTemplateArgs{\n\t\t\tBaseTemplateName: pulumi.String(\"centos7_64\"),\n\t\t\tDefaultLanguage:  pulumi.String(\"en\"),\n\t\t\tTemplateName:     pulumi.String(\"mytemplate\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.InstallationTemplate;\nimport com.pulumi.ovh.Me.InstallationTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytemplate = new InstallationTemplate(\"mytemplate\", InstallationTemplateArgs.builder()        \n            .baseTemplateName(\"centos7_64\")\n            .defaultLanguage(\"en\")\n            .templateName(\"mytemplate\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytemplate:\n    type: ovh:Me:InstallationTemplate\n    properties:\n      baseTemplateName: centos7_64\n      defaultLanguage: en\n      templateName: mytemplate\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCustom installation template available for dedicated servers can be imported using the `base_template_name`, `template_name` of the cluster, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:Me/installationTemplate:InstallationTemplate mytemplate base_template_name/template_name\n```\n\n ",
            "properties": {
                "availableLanguages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of all language available for this template\n"
                },
                "baseTemplateName": {
                    "type": "string",
                    "description": "OVH template name yours will be based on, choose one among the list given by compatibleTemplates function\n"
                },
                "beta": {
                    "type": "boolean",
                    "description": "This distribution is new and, although tested and functional, may still display odd behaviour\n"
                },
                "bitFormat": {
                    "type": "integer",
                    "description": "This template bit format (32 or 64)\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)\n"
                },
                "customization": {
                    "$ref": "#/types/ovh:Me/InstallationTemplateCustomization:InstallationTemplateCustomization"
                },
                "defaultLanguage": {
                    "type": "string",
                    "description": "The default language of this template\n"
                },
                "deprecated": {
                    "type": "boolean",
                    "description": "is this distribution deprecated\n"
                },
                "description": {
                    "type": "string",
                    "description": "information about this template\n"
                },
                "distribution": {
                    "type": "string",
                    "description": "the distribution this template is based on\n"
                },
                "family": {
                    "type": "string",
                    "description": "this template family type (bsd,linux,solaris,windows)\n"
                },
                "filesystems": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)\n"
                },
                "hardRaidConfiguration": {
                    "type": "boolean",
                    "description": "This distribution supports hardware raid configuration through the OVH API\n"
                },
                "lastModification": {
                    "type": "string",
                    "description": "Date of last modification of the base image\n"
                },
                "lvmReady": {
                    "type": "boolean",
                    "description": "This distribution supports Logical Volumes (Linux LVM)\n"
                },
                "removeDefaultPartitionSchemes": {
                    "type": "boolean",
                    "description": "Remove default partition schemes at creation\n"
                },
                "supportsDistributionKernel": {
                    "type": "boolean",
                    "description": "This distribution supports installation using the distribution's native kernel instead of the recommended OVH kernel\n"
                },
                "supportsRtm": {
                    "type": "boolean",
                    "description": "This distribution supports RTM software\n"
                },
                "supportsSqlServer": {
                    "type": "boolean",
                    "description": "This distribution supports the microsoft SQL server\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "This template name\n"
                }
            },
            "required": [
                "availableLanguages",
                "baseTemplateName",
                "beta",
                "bitFormat",
                "category",
                "defaultLanguage",
                "deprecated",
                "description",
                "distribution",
                "family",
                "filesystems",
                "hardRaidConfiguration",
                "lastModification",
                "lvmReady",
                "removeDefaultPartitionSchemes",
                "supportsDistributionKernel",
                "supportsRtm",
                "supportsSqlServer",
                "templateName"
            ],
            "inputProperties": {
                "baseTemplateName": {
                    "type": "string",
                    "description": "OVH template name yours will be based on, choose one among the list given by compatibleTemplates function\n",
                    "willReplaceOnChanges": true
                },
                "customization": {
                    "$ref": "#/types/ovh:Me/InstallationTemplateCustomization:InstallationTemplateCustomization"
                },
                "defaultLanguage": {
                    "type": "string",
                    "description": "The default language of this template\n",
                    "willReplaceOnChanges": true
                },
                "removeDefaultPartitionSchemes": {
                    "type": "boolean",
                    "description": "Remove default partition schemes at creation\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "This template name\n"
                }
            },
            "requiredInputs": [
                "baseTemplateName",
                "defaultLanguage",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstallationTemplate resources.\n",
                "properties": {
                    "availableLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of all language available for this template\n"
                    },
                    "baseTemplateName": {
                        "type": "string",
                        "description": "OVH template name yours will be based on, choose one among the list given by compatibleTemplates function\n",
                        "willReplaceOnChanges": true
                    },
                    "beta": {
                        "type": "boolean",
                        "description": "This distribution is new and, although tested and functional, may still display odd behaviour\n"
                    },
                    "bitFormat": {
                        "type": "integer",
                        "description": "This template bit format (32 or 64)\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)\n"
                    },
                    "customization": {
                        "$ref": "#/types/ovh:Me/InstallationTemplateCustomization:InstallationTemplateCustomization"
                    },
                    "defaultLanguage": {
                        "type": "string",
                        "description": "The default language of this template\n",
                        "willReplaceOnChanges": true
                    },
                    "deprecated": {
                        "type": "boolean",
                        "description": "is this distribution deprecated\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "information about this template\n"
                    },
                    "distribution": {
                        "type": "string",
                        "description": "the distribution this template is based on\n"
                    },
                    "family": {
                        "type": "string",
                        "description": "this template family type (bsd,linux,solaris,windows)\n"
                    },
                    "filesystems": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)\n"
                    },
                    "hardRaidConfiguration": {
                        "type": "boolean",
                        "description": "This distribution supports hardware raid configuration through the OVH API\n"
                    },
                    "lastModification": {
                        "type": "string",
                        "description": "Date of last modification of the base image\n"
                    },
                    "lvmReady": {
                        "type": "boolean",
                        "description": "This distribution supports Logical Volumes (Linux LVM)\n"
                    },
                    "removeDefaultPartitionSchemes": {
                        "type": "boolean",
                        "description": "Remove default partition schemes at creation\n"
                    },
                    "supportsDistributionKernel": {
                        "type": "boolean",
                        "description": "This distribution supports installation using the distribution's native kernel instead of the recommended OVH kernel\n"
                    },
                    "supportsRtm": {
                        "type": "boolean",
                        "description": "This distribution supports RTM software\n"
                    },
                    "supportsSqlServer": {
                        "type": "boolean",
                        "description": "This distribution supports the microsoft SQL server\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "This template name\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/installationTemplatePartitionScheme:InstallationTemplatePartitionScheme": {
            "description": "Use this resource to create partition scheme for a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\n\nconst mytemplate = new ovh.me.InstallationTemplate(\"mytemplate\", {\n    baseTemplateName: \"centos7_64\",\n    templateName: \"mytemplate\",\n    defaultLanguage: \"fr\",\n});\nconst scheme = new ovh.me.InstallationTemplatePartitionScheme(\"scheme\", {\n    templateName: mytemplate.templateName,\n    priority: 1,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmytemplate = ovh.me.InstallationTemplate(\"mytemplate\",\n    base_template_name=\"centos7_64\",\n    template_name=\"mytemplate\",\n    default_language=\"fr\")\nscheme = ovh.me.InstallationTemplatePartitionScheme(\"scheme\",\n    template_name=mytemplate.template_name,\n    priority=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytemplate = new Ovh.Me.InstallationTemplate(\"mytemplate\", new()\n    {\n        BaseTemplateName = \"centos7_64\",\n        TemplateName = \"mytemplate\",\n        DefaultLanguage = \"fr\",\n    });\n\n    var scheme = new Ovh.Me.InstallationTemplatePartitionScheme(\"scheme\", new()\n    {\n        TemplateName = mytemplate.TemplateName,\n        Priority = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmytemplate, err := Me.NewInstallationTemplate(ctx, \"mytemplate\", \u0026Me.InstallationTemplateArgs{\n\t\t\tBaseTemplateName: pulumi.String(\"centos7_64\"),\n\t\t\tTemplateName:     pulumi.String(\"mytemplate\"),\n\t\t\tDefaultLanguage:  pulumi.String(\"fr\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Me.NewInstallationTemplatePartitionScheme(ctx, \"scheme\", \u0026Me.InstallationTemplatePartitionSchemeArgs{\n\t\t\tTemplateName: mytemplate.TemplateName,\n\t\t\tPriority:     pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.InstallationTemplate;\nimport com.pulumi.ovh.Me.InstallationTemplateArgs;\nimport com.pulumi.ovh.Me.InstallationTemplatePartitionScheme;\nimport com.pulumi.ovh.Me.InstallationTemplatePartitionSchemeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytemplate = new InstallationTemplate(\"mytemplate\", InstallationTemplateArgs.builder()        \n            .baseTemplateName(\"centos7_64\")\n            .templateName(\"mytemplate\")\n            .defaultLanguage(\"fr\")\n            .build());\n\n        var scheme = new InstallationTemplatePartitionScheme(\"scheme\", InstallationTemplatePartitionSchemeArgs.builder()        \n            .templateName(mytemplate.templateName())\n            .priority(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytemplate:\n    type: ovh:Me:InstallationTemplate\n    properties:\n      baseTemplateName: centos7_64\n      templateName: mytemplate\n      defaultLanguage: fr\n  scheme:\n    type: ovh:Me:InstallationTemplatePartitionScheme\n    properties:\n      templateName: ${mytemplate.templateName}\n      priority: 1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThe resource can be imported using the `template_name`, `name` of the cluster, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:Me/installationTemplatePartitionScheme:InstallationTemplatePartitionScheme scheme template_name/name\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,\namong all the compatible partitioning schemes (given the underlying hardware specifications)\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "This template name\n"
                }
            },
            "required": [
                "name",
                "priority",
                "templateName"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,\namong all the compatible partitioning schemes (given the underlying hardware specifications)\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "This template name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "priority",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstallationTemplatePartitionScheme resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "name of this partitioning scheme\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,\namong all the compatible partitioning schemes (given the underlying hardware specifications)\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "This template name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/installationTemplatePartitionSchemeHardwareRaid:InstallationTemplatePartitionSchemeHardwareRaid": {
            "description": "Use this resource to create a hardware raid group in the partition scheme of a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\n\nconst mytemplate = new ovh.me.InstallationTemplate(\"mytemplate\", {\n    baseTemplateName: \"centos7_64\",\n    templateName: \"mytemplate\",\n    defaultLanguage: \"fr\",\n});\nconst scheme = new ovh.me.InstallationTemplatePartitionScheme(\"scheme\", {\n    templateName: mytemplate.templateName,\n    priority: 1,\n});\nconst group1 = new ovh.me.InstallationTemplatePartitionSchemeHardwareRaid(\"group1\", {\n    templateName: scheme.templateName,\n    schemeName: scheme.name,\n    disks: [\n        \"[c1:d1,c1:d2,c1:d3]\",\n        \"[c1:d10,c1:d20,c1:d30]\",\n    ],\n    mode: \"raid50\",\n    step: 1,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmytemplate = ovh.me.InstallationTemplate(\"mytemplate\",\n    base_template_name=\"centos7_64\",\n    template_name=\"mytemplate\",\n    default_language=\"fr\")\nscheme = ovh.me.InstallationTemplatePartitionScheme(\"scheme\",\n    template_name=mytemplate.template_name,\n    priority=1)\ngroup1 = ovh.me.InstallationTemplatePartitionSchemeHardwareRaid(\"group1\",\n    template_name=scheme.template_name,\n    scheme_name=scheme.name,\n    disks=[\n        \"[c1:d1,c1:d2,c1:d3]\",\n        \"[c1:d10,c1:d20,c1:d30]\",\n    ],\n    mode=\"raid50\",\n    step=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytemplate = new Ovh.Me.InstallationTemplate(\"mytemplate\", new()\n    {\n        BaseTemplateName = \"centos7_64\",\n        TemplateName = \"mytemplate\",\n        DefaultLanguage = \"fr\",\n    });\n\n    var scheme = new Ovh.Me.InstallationTemplatePartitionScheme(\"scheme\", new()\n    {\n        TemplateName = mytemplate.TemplateName,\n        Priority = 1,\n    });\n\n    var group1 = new Ovh.Me.InstallationTemplatePartitionSchemeHardwareRaid(\"group1\", new()\n    {\n        TemplateName = scheme.TemplateName,\n        SchemeName = scheme.Name,\n        Disks = new[]\n        {\n            \"[c1:d1,c1:d2,c1:d3]\",\n            \"[c1:d10,c1:d20,c1:d30]\",\n        },\n        Mode = \"raid50\",\n        Step = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmytemplate, err := Me.NewInstallationTemplate(ctx, \"mytemplate\", \u0026Me.InstallationTemplateArgs{\n\t\t\tBaseTemplateName: pulumi.String(\"centos7_64\"),\n\t\t\tTemplateName:     pulumi.String(\"mytemplate\"),\n\t\t\tDefaultLanguage:  pulumi.String(\"fr\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tscheme, err := Me.NewInstallationTemplatePartitionScheme(ctx, \"scheme\", \u0026Me.InstallationTemplatePartitionSchemeArgs{\n\t\t\tTemplateName: mytemplate.TemplateName,\n\t\t\tPriority:     pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Me.NewInstallationTemplatePartitionSchemeHardwareRaid(ctx, \"group1\", \u0026Me.InstallationTemplatePartitionSchemeHardwareRaidArgs{\n\t\t\tTemplateName: scheme.TemplateName,\n\t\t\tSchemeName:   scheme.Name,\n\t\t\tDisks: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"[c1:d1,c1:d2,c1:d3]\"),\n\t\t\t\tpulumi.String(\"[c1:d10,c1:d20,c1:d30]\"),\n\t\t\t},\n\t\t\tMode: pulumi.String(\"raid50\"),\n\t\t\tStep: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.InstallationTemplate;\nimport com.pulumi.ovh.Me.InstallationTemplateArgs;\nimport com.pulumi.ovh.Me.InstallationTemplatePartitionScheme;\nimport com.pulumi.ovh.Me.InstallationTemplatePartitionSchemeArgs;\nimport com.pulumi.ovh.Me.InstallationTemplatePartitionSchemeHardwareRaid;\nimport com.pulumi.ovh.Me.InstallationTemplatePartitionSchemeHardwareRaidArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytemplate = new InstallationTemplate(\"mytemplate\", InstallationTemplateArgs.builder()        \n            .baseTemplateName(\"centos7_64\")\n            .templateName(\"mytemplate\")\n            .defaultLanguage(\"fr\")\n            .build());\n\n        var scheme = new InstallationTemplatePartitionScheme(\"scheme\", InstallationTemplatePartitionSchemeArgs.builder()        \n            .templateName(mytemplate.templateName())\n            .priority(1)\n            .build());\n\n        var group1 = new InstallationTemplatePartitionSchemeHardwareRaid(\"group1\", InstallationTemplatePartitionSchemeHardwareRaidArgs.builder()        \n            .templateName(scheme.templateName())\n            .schemeName(scheme.name())\n            .disks(            \n                \"[c1:d1,c1:d2,c1:d3]\",\n                \"[c1:d10,c1:d20,c1:d30]\")\n            .mode(\"raid50\")\n            .step(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytemplate:\n    type: ovh:Me:InstallationTemplate\n    properties:\n      baseTemplateName: centos7_64\n      templateName: mytemplate\n      defaultLanguage: fr\n  scheme:\n    type: ovh:Me:InstallationTemplatePartitionScheme\n    properties:\n      templateName: ${mytemplate.templateName}\n      priority: 1\n  group1:\n    type: ovh:Me:InstallationTemplatePartitionSchemeHardwareRaid\n    properties:\n      templateName: ${scheme.templateName}\n      schemeName: ${scheme.name}\n      disks:\n        - '[c1:d1,c1:d2,c1:d3]'\n        - '[c1:d10,c1:d20,c1:d30]'\n      mode: raid50\n      step: 1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThe resource can be imported using the `template_name`, `scheme_name`, `name` of the cluster, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:Me/installationTemplatePartitionSchemeHardwareRaid:InstallationTemplatePartitionSchemeHardwareRaid group1 template_name/scheme_name/name\n```\n\n ",
            "properties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id\n"
                },
                "mode": {
                    "type": "string",
                    "description": "RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Hardware RAID name\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "step": {
                    "type": "integer",
                    "description": "Specifies the creation order of the hardware RAID\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                }
            },
            "required": [
                "disks",
                "mode",
                "name",
                "schemeName",
                "step",
                "templateName"
            ],
            "inputProperties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id\n"
                },
                "mode": {
                    "type": "string",
                    "description": "RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Hardware RAID name\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "step": {
                    "type": "integer",
                    "description": "Specifies the creation order of the hardware RAID\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "disks",
                "mode",
                "schemeName",
                "step",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstallationTemplatePartitionSchemeHardwareRaid resources.\n",
                "properties": {
                    "disks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Hardware RAID name\n"
                    },
                    "schemeName": {
                        "type": "string",
                        "description": "name of this partitioning scheme\n"
                    },
                    "step": {
                        "type": "integer",
                        "description": "Specifies the creation order of the hardware RAID\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/installationTemplatePartitionSchemePartition:InstallationTemplatePartitionSchemePartition": {
            "description": "Use this resource to create a partition in the partition scheme of a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\n\nconst mytemplate = new ovh.me.InstallationTemplate(\"mytemplate\", {\n    baseTemplateName: \"centos7_64\",\n    templateName: \"mytemplate\",\n    defaultLanguage: \"fr\",\n});\nconst scheme = new ovh.me.InstallationTemplatePartitionScheme(\"scheme\", {\n    templateName: mytemplate.templateName,\n    priority: 1,\n});\nconst root = new ovh.me.InstallationTemplatePartitionSchemePartition(\"root\", {\n    templateName: scheme.templateName,\n    schemeName: scheme.name,\n    mountpoint: \"/\",\n    filesystem: \"ext4\",\n    size: 400,\n    order: 1,\n    type: \"primary\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmytemplate = ovh.me.InstallationTemplate(\"mytemplate\",\n    base_template_name=\"centos7_64\",\n    template_name=\"mytemplate\",\n    default_language=\"fr\")\nscheme = ovh.me.InstallationTemplatePartitionScheme(\"scheme\",\n    template_name=mytemplate.template_name,\n    priority=1)\nroot = ovh.me.InstallationTemplatePartitionSchemePartition(\"root\",\n    template_name=scheme.template_name,\n    scheme_name=scheme.name,\n    mountpoint=\"/\",\n    filesystem=\"ext4\",\n    size=400,\n    order=1,\n    type=\"primary\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytemplate = new Ovh.Me.InstallationTemplate(\"mytemplate\", new()\n    {\n        BaseTemplateName = \"centos7_64\",\n        TemplateName = \"mytemplate\",\n        DefaultLanguage = \"fr\",\n    });\n\n    var scheme = new Ovh.Me.InstallationTemplatePartitionScheme(\"scheme\", new()\n    {\n        TemplateName = mytemplate.TemplateName,\n        Priority = 1,\n    });\n\n    var root = new Ovh.Me.InstallationTemplatePartitionSchemePartition(\"root\", new()\n    {\n        TemplateName = scheme.TemplateName,\n        SchemeName = scheme.Name,\n        Mountpoint = \"/\",\n        Filesystem = \"ext4\",\n        Size = 400,\n        Order = 1,\n        Type = \"primary\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmytemplate, err := Me.NewInstallationTemplate(ctx, \"mytemplate\", \u0026Me.InstallationTemplateArgs{\n\t\t\tBaseTemplateName: pulumi.String(\"centos7_64\"),\n\t\t\tTemplateName:     pulumi.String(\"mytemplate\"),\n\t\t\tDefaultLanguage:  pulumi.String(\"fr\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tscheme, err := Me.NewInstallationTemplatePartitionScheme(ctx, \"scheme\", \u0026Me.InstallationTemplatePartitionSchemeArgs{\n\t\t\tTemplateName: mytemplate.TemplateName,\n\t\t\tPriority:     pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Me.NewInstallationTemplatePartitionSchemePartition(ctx, \"root\", \u0026Me.InstallationTemplatePartitionSchemePartitionArgs{\n\t\t\tTemplateName: scheme.TemplateName,\n\t\t\tSchemeName:   scheme.Name,\n\t\t\tMountpoint:   pulumi.String(\"/\"),\n\t\t\tFilesystem:   pulumi.String(\"ext4\"),\n\t\t\tSize:         pulumi.Int(400),\n\t\t\tOrder:        pulumi.Int(1),\n\t\t\tType:         pulumi.String(\"primary\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.InstallationTemplate;\nimport com.pulumi.ovh.Me.InstallationTemplateArgs;\nimport com.pulumi.ovh.Me.InstallationTemplatePartitionScheme;\nimport com.pulumi.ovh.Me.InstallationTemplatePartitionSchemeArgs;\nimport com.pulumi.ovh.Me.InstallationTemplatePartitionSchemePartition;\nimport com.pulumi.ovh.Me.InstallationTemplatePartitionSchemePartitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mytemplate = new InstallationTemplate(\"mytemplate\", InstallationTemplateArgs.builder()        \n            .baseTemplateName(\"centos7_64\")\n            .templateName(\"mytemplate\")\n            .defaultLanguage(\"fr\")\n            .build());\n\n        var scheme = new InstallationTemplatePartitionScheme(\"scheme\", InstallationTemplatePartitionSchemeArgs.builder()        \n            .templateName(mytemplate.templateName())\n            .priority(1)\n            .build());\n\n        var root = new InstallationTemplatePartitionSchemePartition(\"root\", InstallationTemplatePartitionSchemePartitionArgs.builder()        \n            .templateName(scheme.templateName())\n            .schemeName(scheme.name())\n            .mountpoint(\"/\")\n            .filesystem(\"ext4\")\n            .size(\"400\")\n            .order(1)\n            .type(\"primary\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mytemplate:\n    type: ovh:Me:InstallationTemplate\n    properties:\n      baseTemplateName: centos7_64\n      templateName: mytemplate\n      defaultLanguage: fr\n  scheme:\n    type: ovh:Me:InstallationTemplatePartitionScheme\n    properties:\n      templateName: ${mytemplate.templateName}\n      priority: 1\n  root:\n    type: ovh:Me:InstallationTemplatePartitionSchemePartition\n    properties:\n      templateName: ${scheme.templateName}\n      schemeName: ${scheme.name}\n      mountpoint: /\n      filesystem: ext4\n      size: '400'\n      order: 1\n      type: primary\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThe resource can be imported using the `template_name`, `scheme_name`, `mountpoint` of the cluster, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:Me/installationTemplatePartitionSchemePartition:InstallationTemplatePartitionSchemePartition root template_name/scheme_name/mountpoint\n```\n\n ",
            "properties": {
                "filesystem": {
                    "type": "string",
                    "description": "Partition filesystem\n"
                },
                "mountpoint": {
                    "type": "string",
                    "description": "partition mount point\n"
                },
                "order": {
                    "type": "integer",
                    "description": "step or order. specifies the creation order of the partition on the disk\n"
                },
                "raid": {
                    "type": "string",
                    "description": "raid partition type\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "size": {
                    "type": "integer",
                    "description": "size of partition in MB, 0 =\u003e rest of the space\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                },
                "type": {
                    "type": "string",
                    "description": "partition type\n"
                },
                "volumeName": {
                    "type": "string",
                    "description": "The volume name needed for proxmox distribution\n"
                }
            },
            "required": [
                "filesystem",
                "mountpoint",
                "order",
                "raid",
                "schemeName",
                "size",
                "templateName",
                "type",
                "volumeName"
            ],
            "inputProperties": {
                "filesystem": {
                    "type": "string",
                    "description": "Partition filesystem\n"
                },
                "mountpoint": {
                    "type": "string",
                    "description": "partition mount point\n"
                },
                "order": {
                    "type": "integer",
                    "description": "step or order. specifies the creation order of the partition on the disk\n"
                },
                "raid": {
                    "type": "string",
                    "description": "raid partition type\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "size": {
                    "type": "integer",
                    "description": "size of partition in MB, 0 =\u003e rest of the space\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "partition type\n"
                },
                "volumeName": {
                    "type": "string",
                    "description": "The volume name needed for proxmox distribution\n"
                }
            },
            "requiredInputs": [
                "filesystem",
                "mountpoint",
                "order",
                "schemeName",
                "size",
                "templateName",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstallationTemplatePartitionSchemePartition resources.\n",
                "properties": {
                    "filesystem": {
                        "type": "string",
                        "description": "Partition filesystem\n"
                    },
                    "mountpoint": {
                        "type": "string",
                        "description": "partition mount point\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "step or order. specifies the creation order of the partition on the disk\n"
                    },
                    "raid": {
                        "type": "string",
                        "description": "raid partition type\n"
                    },
                    "schemeName": {
                        "type": "string",
                        "description": "name of this partitioning scheme\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "size of partition in MB, 0 =\u003e rest of the space\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "partition type\n"
                    },
                    "volumeName": {
                        "type": "string",
                        "description": "The volume name needed for proxmox distribution\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/ipxeScript:IpxeScript": {
            "description": "Creates an IPXE Script.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fs from \"fs\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\n\nconst script = new ovh.me.IpxeScript(\"script\", {script: fs.readFileSync(`${path.module}/boot.ipxe`)});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nscript = ovh.me.IpxeScript(\"script\", script=(lambda path: open(path).read())(f\"{path['module']}/boot.ipxe\"))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.IO;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var script = new Ovh.Me.IpxeScript(\"script\", new()\n    {\n        Script = File.ReadAllText($\"{path.Module}/boot.ipxe\"),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Me.NewIpxeScript(ctx, \"script\", \u0026Me.IpxeScriptArgs{\n\t\t\tScript: readFileOrPanic(fmt.Sprintf(\"%v/boot.ipxe\", path.Module)),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.IpxeScript;\nimport com.pulumi.ovh.Me.IpxeScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var script = new IpxeScript(\"script\", IpxeScriptArgs.builder()        \n            .script(Files.readString(Paths.get(String.format(\"%s/boot.ipxe\", path.module()))))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  script:\n    type: ovh:Me:IpxeScript\n    properties:\n      script:\n        fn::readFile: ${path.module}/boot.ipxe\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "For documentation purpose only. This attribute is not passed to the OVHcloud API as it cannot be retrieved back. Instead a fake description ('$name auto description') is passed at creation time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the IPXE Script.\n"
                },
                "script": {
                    "type": "string",
                    "description": "The content of the script.\n"
                }
            },
            "required": [
                "description",
                "name",
                "script"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "For documentation purpose only. This attribute is not passed to the OVHcloud API as it cannot be retrieved back. Instead a fake description ('$name auto description') is passed at creation time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the IPXE Script.\n",
                    "willReplaceOnChanges": true
                },
                "script": {
                    "type": "string",
                    "description": "The content of the script.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpxeScript resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "For documentation purpose only. This attribute is not passed to the OVHcloud API as it cannot be retrieved back. Instead a fake description ('$name auto description') is passed at creation time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the IPXE Script.\n",
                        "willReplaceOnChanges": true
                    },
                    "script": {
                        "type": "string",
                        "description": "The content of the script.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/sshKey:SshKey": {
            "description": "Creates an SSH Key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mykey = new ovh.Me.SshKey(\"mykey\", {\n    key: \"ssh-ed25519 AAAAC3...\",\n    keyName: \"mykey\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nmykey = ovh.me.SshKey(\"mykey\",\n    key=\"ssh-ed25519 AAAAC3...\",\n    key_name=\"mykey\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mykey = new Ovh.Me.SshKey(\"mykey\", new()\n    {\n        Key = \"ssh-ed25519 AAAAC3...\",\n        KeyName = \"mykey\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Me.NewSshKey(ctx, \"mykey\", \u0026Me.SshKeyArgs{\n\t\t\tKey:     pulumi.String(\"ssh-ed25519 AAAAC3...\"),\n\t\t\tKeyName: pulumi.String(\"mykey\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.SshKey;\nimport com.pulumi.ovh.Me.SshKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mykey = new SshKey(\"mykey\", SshKeyArgs.builder()        \n            .key(\"ssh-ed25519 AAAAC3...\")\n            .keyName(\"mykey\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mykey:\n    type: ovh:Me:SshKey\n    properties:\n      key: ssh-ed25519 AAAAC3...\n      keyName: mykey\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "default": {
                    "type": "boolean",
                    "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The content of the public key in the form \"ssh-algo content\", e.g. \"ssh-ed25519 AAAAC3...\".\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "The friendly name of this SSH key.\n"
                }
            },
            "required": [
                "default",
                "key",
                "keyName"
            ],
            "inputProperties": {
                "default": {
                    "type": "boolean",
                    "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The content of the public key in the form \"ssh-algo content\", e.g. \"ssh-ed25519 AAAAC3...\".\n",
                    "willReplaceOnChanges": true
                },
                "keyName": {
                    "type": "string",
                    "description": "The friendly name of this SSH key.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "key",
                "keyName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SshKey resources.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The content of the public key in the form \"ssh-algo content\", e.g. \"ssh-ed25519 AAAAC3...\".\n",
                        "willReplaceOnChanges": true
                    },
                    "keyName": {
                        "type": "string",
                        "description": "The friendly name of this SSH key.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/cloudProject:CloudProject": {
            "description": "Attach a Public Cloud Project to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vcp = new ovh.Vrack.CloudProject(\"vcp\", {\n    projectId: \"67890\",\n    serviceName: \"12345\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nvcp = ovh.vrack.CloudProject(\"vcp\",\n    project_id=\"67890\",\n    service_name=\"12345\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vcp = new Ovh.Vrack.CloudProject(\"vcp\", new()\n    {\n        ProjectId = \"67890\",\n        ServiceName = \"12345\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Vrack.NewCloudProject(ctx, \"vcp\", \u0026Vrack.CloudProjectArgs{\n\t\t\tProjectId:   pulumi.String(\"67890\"),\n\t\t\tServiceName: pulumi.String(\"12345\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.CloudProject;\nimport com.pulumi.ovh.Vrack.CloudProjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vcp = new CloudProject(\"vcp\", CloudProjectArgs.builder()        \n            .projectId(\"67890\")\n            .serviceName(\"12345\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vcp:\n    type: ovh:Vrack:CloudProject\n    properties:\n      projectId: '67890'\n      serviceName: '12345'\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAttachment of a public cloud project and a VRack can be imported using the `project_id`, the `service_name` (vRackID) and the `attach_id`, separated by \"/\" E.g., bash\n\n```sh\n $ pulumi import ovh:Vrack/cloudProject:CloudProject myattach ookie9mee8Shaeghaeleeju7Xeghohv6e/pn-12345678/vrack_pn-12345678-cloudproject_ookie9mee8Shaeghaeleeju7Xeghohv6e-attach\n```\n\n ",
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "projectId",
                "serviceName"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "projectId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProject resources.\n",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/dedicatedServer:DedicatedServer": {
            "description": "\u003e **NOTE:** The resource `ovh.Vrack.DedicatedServer` is DEPRECATED and will be removed in a future version.\nUse the resource `ovh.Vrack.DedicatedServerInterface` instead.\n\nAttach a dedicated server to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vds = new ovh.Vrack.DedicatedServer(\"vds\", {\n    serverId: \"67890\",\n    serviceName: \"XXXX\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nvds = ovh.vrack.DedicatedServer(\"vds\",\n    server_id=\"67890\",\n    service_name=\"XXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vds = new Ovh.Vrack.DedicatedServer(\"vds\", new()\n    {\n        ServerId = \"67890\",\n        ServiceName = \"XXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Vrack.NewDedicatedServer(ctx, \"vds\", \u0026Vrack.DedicatedServerArgs{\n\t\t\tServerId:    pulumi.String(\"67890\"),\n\t\t\tServiceName: pulumi.String(\"XXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.DedicatedServer;\nimport com.pulumi.ovh.Vrack.DedicatedServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vds = new DedicatedServer(\"vds\", DedicatedServerArgs.builder()        \n            .serverId(\"67890\")\n            .serviceName(\"XXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vds:\n    type: ovh:Vrack:DedicatedServer\n    properties:\n      serverId: '67890'\n      serviceName: XXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "serverId": {
                    "type": "string",
                    "description": "The id of the dedicated server.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "serverId",
                "serviceName"
            ],
            "inputProperties": {
                "serverId": {
                    "type": "string",
                    "description": "The id of the dedicated server.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serverId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServer resources.\n",
                "properties": {
                    "serverId": {
                        "type": "string",
                        "description": "The id of the dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/dedicatedServerInterface:DedicatedServerInterface": {
            "description": "Attach a Dedicated Server Network Interface to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst server = ovh.getServer({\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n});\nconst vdsi = new ovh.vrack.DedicatedServerInterface(\"vdsi\", {\n    serviceName: \"pn-xxxxxxx\",\n    interfaceId: server.then(server =\u003e server.enabledVrackVnis?[0]),\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nserver = ovh.get_server(service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\")\nvdsi = ovh.vrack.DedicatedServerInterface(\"vdsi\",\n    service_name=\"pn-xxxxxxx\",\n    interface_id=server.enabled_vrack_vnis[0])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var server = Ovh.GetServer.Invoke(new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    });\n\n    var vdsi = new Ovh.Vrack.DedicatedServerInterface(\"vdsi\", new()\n    {\n        ServiceName = \"pn-xxxxxxx\",\n        InterfaceId = server.Apply(getServerResult =\u003e getServerResult.EnabledVrackVnis[0]),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tserver, err := ovh.GetServer(ctx, \u0026GetServerArgs{\n\t\t\tServiceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Vrack.NewDedicatedServerInterface(ctx, \"vdsi\", \u0026Vrack.DedicatedServerInterfaceArgs{\n\t\t\tServiceName: pulumi.String(\"pn-xxxxxxx\"),\n\t\t\tInterfaceId: pulumi.String(server.EnabledVrackVnis[0]),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetServerArgs;\nimport com.pulumi.ovh.Vrack.DedicatedServerInterface;\nimport com.pulumi.ovh.Vrack.DedicatedServerInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var server = OvhFunctions.getServer(GetServerArgs.builder()\n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .build());\n\n        var vdsi = new DedicatedServerInterface(\"vdsi\", DedicatedServerInterfaceArgs.builder()        \n            .serviceName(\"pn-xxxxxxx\")\n            .interfaceId(server.applyValue(getServerResult -\u003e getServerResult.enabledVrackVnis()[0]))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vdsi:\n    type: ovh:Vrack:DedicatedServerInterface\n    properties:\n      serviceName: pn-xxxxxxx\n      #name of the vrack\n      interfaceId: ${server.enabledVrackVnis[0]}\nvariables:\n  server:\n    fn::invoke:\n      Function: ovh:getServer\n      Arguments:\n        serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "interfaceId": {
                    "type": "string",
                    "description": "The id of dedicated server network interface.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "interfaceId",
                "serviceName"
            ],
            "inputProperties": {
                "interfaceId": {
                    "type": "string",
                    "description": "The id of dedicated server network interface.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "interfaceId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServerInterface resources.\n",
                "properties": {
                    "interfaceId": {
                        "type": "string",
                        "description": "The id of dedicated server network interface.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/ipAddress:IpAddress": {
            "description": "Attach an IP block to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cart\",\n});\nconst vrackCartProductPlan = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"vrack\",\n    planCode: \"vrack\",\n}));\nconst vrackVrack = new ovh.vrack.Vrack(\"vrackVrack\", {\n    description: mycart.then(mycart =\u003e mycart.description),\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"fidelity\",\n    plan: {\n        duration: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.planCode),\n        pricingMode: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.selectedPrices?[0]?.pricingMode),\n    },\n});\nconst ipblockCartProductPlan = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"ip\",\n    planCode: \"ip-v4-s30-ripe\",\n}));\nconst ipblockIpService = new ovh.ip.IpService(\"ipblockIpService\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"ovh-account\",\n    description: mycart.then(mycart =\u003e mycart.description),\n    plan: {\n        duration: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.planCode),\n        pricingMode: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.selectedPrices?[0]?.pricingMode),\n        configurations: [{\n            label: \"country\",\n            value: \"FR\",\n        }],\n    },\n});\nconst vrackblock = new ovh.vrack.IpAddress(\"vrackblock\", {\n    serviceName: vrackVrack.serviceName,\n    block: ipblockIpService.ip,\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\",\n    description=\"my cart\")\nvrack_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"vrack\",\n    plan_code=\"vrack\")\nvrack_vrack = ovh.vrack.Vrack(\"vrackVrack\",\n    description=mycart.description,\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"fidelity\",\n    plan=ovh.vrack.VrackPlanArgs(\n        duration=vrack_cart_product_plan.selected_prices[0].duration,\n        plan_code=vrack_cart_product_plan.plan_code,\n        pricing_mode=vrack_cart_product_plan.selected_prices[0].pricing_mode,\n    ))\nipblock_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"ip\",\n    plan_code=\"ip-v4-s30-ripe\")\nipblock_ip_service = ovh.ip.IpService(\"ipblockIpService\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"ovh-account\",\n    description=mycart.description,\n    plan=ovh.ip.IpServicePlanArgs(\n        duration=ipblock_cart_product_plan.selected_prices[0].duration,\n        plan_code=ipblock_cart_product_plan.plan_code,\n        pricing_mode=ipblock_cart_product_plan.selected_prices[0].pricing_mode,\n        configurations=[ovh.ip.IpServicePlanConfigurationArgs(\n            label=\"country\",\n            value=\"FR\",\n        )],\n    ))\nvrackblock = ovh.vrack.IpAddress(\"vrackblock\",\n    service_name=vrack_vrack.service_name,\n    block=ipblock_ip_service.ip)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cart\",\n    });\n\n    var vrackCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"vrack\",\n        PlanCode = \"vrack\",\n    });\n\n    var vrackVrack = new Ovh.Vrack.Vrack(\"vrackVrack\", new()\n    {\n        Description = mycart.Apply(getCartResult =\u003e getCartResult.Description),\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        PaymentMean = \"fidelity\",\n        Plan = new Ovh.Vrack.Inputs.VrackPlanArgs\n        {\n            Duration = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n    });\n\n    var ipblockCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"ip\",\n        PlanCode = \"ip-v4-s30-ripe\",\n    });\n\n    var ipblockIpService = new Ovh.Ip.IpService(\"ipblockIpService\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        PaymentMean = \"ovh-account\",\n        Description = mycart.Apply(getCartResult =\u003e getCartResult.Description),\n        Plan = new Ovh.Ip.Inputs.IpServicePlanArgs\n        {\n            Duration = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Ip.Inputs.IpServicePlanConfigurationArgs\n                {\n                    Label = \"country\",\n                    Value = \"FR\",\n                },\n            },\n        },\n    });\n\n    var vrackblock = new Ovh.Vrack.IpAddress(\"vrackblock\", new()\n    {\n        ServiceName = vrackVrack.ServiceName,\n        Block = ipblockIpService.Ip,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Ip\"\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvrackCartProductPlan, err := Order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"vrack\",\n\t\t\tPlanCode:      \"vrack\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvrackVrack, err := Vrack.NewVrack(ctx, \"vrackVrack\", \u0026Vrack.VrackArgs{\n\t\t\tDescription:   pulumi.String(mycart.Description),\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"fidelity\"),\n\t\t\tPlan: \u0026vrack.VrackPlanArgs{\n\t\t\t\tDuration:    pulumi.String(vrackCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(vrackCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(vrackCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipblockCartProductPlan, err := Order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"ip\",\n\t\t\tPlanCode:      \"ip-v4-s30-ripe\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipblockIpService, err := Ip.NewIpService(ctx, \"ipblockIpService\", \u0026Ip.IpServiceArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"ovh-account\"),\n\t\t\tDescription:   pulumi.String(mycart.Description),\n\t\t\tPlan: \u0026ip.IpServicePlanArgs{\n\t\t\t\tDuration:    pulumi.String(ipblockCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(ipblockCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(ipblockCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: ip.IpServicePlanConfigurationArray{\n\t\t\t\t\t\u0026ip.IpServicePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"country\"),\n\t\t\t\t\t\tValue: pulumi.String(\"FR\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Vrack.NewIpAddress(ctx, \"vrackblock\", \u0026Vrack.IpAddressArgs{\n\t\t\tServiceName: vrackVrack.ServiceName,\n\t\t\tBlock:       ipblockIpService.Ip,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Vrack.Vrack;\nimport com.pulumi.ovh.Vrack.VrackArgs;\nimport com.pulumi.ovh.Vrack.inputs.VrackPlanArgs;\nimport com.pulumi.ovh.Ip.IpService;\nimport com.pulumi.ovh.Ip.IpServiceArgs;\nimport com.pulumi.ovh.Ip.inputs.IpServicePlanArgs;\nimport com.pulumi.ovh.Vrack.IpAddress;\nimport com.pulumi.ovh.Vrack.IpAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cart\")\n            .build());\n\n        final var vrackCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"vrack\")\n            .planCode(\"vrack\")\n            .build());\n\n        var vrackVrack = new Vrack(\"vrackVrack\", VrackArgs.builder()        \n            .description(mycart.applyValue(getCartResult -\u003e getCartResult.description()))\n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .paymentMean(\"fidelity\")\n            .plan(VrackPlanArgs.builder()\n                .duration(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n        final var ipblockCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"ip\")\n            .planCode(\"ip-v4-s30-ripe\")\n            .build());\n\n        var ipblockIpService = new IpService(\"ipblockIpService\", IpServiceArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .paymentMean(\"ovh-account\")\n            .description(mycart.applyValue(getCartResult -\u003e getCartResult.description()))\n            .plan(IpServicePlanArgs.builder()\n                .duration(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(IpServicePlanConfigurationArgs.builder()\n                    .label(\"country\")\n                    .value(\"FR\")\n                    .build())\n                .build())\n            .build());\n\n        var vrackblock = new IpAddress(\"vrackblock\", IpAddressArgs.builder()        \n            .serviceName(vrackVrack.serviceName())\n            .block(ipblockIpService.ip())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackVrack:\n    type: ovh:Vrack:Vrack\n    properties:\n      description: ${mycart.description}\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: fidelity\n      plan:\n        duration: ${vrackCartProductPlan.selectedPrices[0].duration}\n        planCode: ${vrackCartProductPlan.planCode}\n        pricingMode: ${vrackCartProductPlan.selectedPrices[0].pricingMode}\n  ipblockIpService:\n    type: ovh:Ip:IpService\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: ovh-account\n      description: ${mycart.description}\n      plan:\n        duration: ${ipblockCartProductPlan.selectedPrices[0].duration}\n        planCode: ${ipblockCartProductPlan.planCode}\n        pricingMode: ${ipblockCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: country\n            value: FR\n  vrackblock:\n    type: ovh:Vrack:IpAddress\n    properties:\n      serviceName: ${vrackVrack.serviceName}\n      block: ${ipblockIpService.ip}\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cart\n  vrackCartProductPlan:\n    fn::invoke:\n      Function: ovh:Order:getCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: vrack\n        planCode: vrack\n  ipblockCartProductPlan:\n    fn::invoke:\n      Function: ovh:Order:getCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: ip\n        planCode: ip-v4-s30-ripe\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "block": {
                    "type": "string",
                    "description": "Your IP block.\n"
                },
                "gateway": {
                    "type": "string",
                    "description": "Your gateway\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Your IP block\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Where you want your block announced on the network\n"
                }
            },
            "required": [
                "block",
                "gateway",
                "ip",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "block": {
                    "type": "string",
                    "description": "Your IP block.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "block",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpAddress resources.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "Your IP block.\n",
                        "willReplaceOnChanges": true
                    },
                    "gateway": {
                        "type": "string",
                        "description": "Your gateway\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Your IP block\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n",
                        "willReplaceOnChanges": true
                    },
                    "zone": {
                        "type": "string",
                        "description": "Where you want your block announced on the network\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/ipLoadbalancing:IpLoadbalancing": {
            "description": "Attach an IP Load Balancing to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst viplb = new ovh.Vrack.IpLoadbalancing(\"viplb\", {\n    LoadbalancingId: \"yyy\",\n    serviceName: \"xxx\",\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\n\nviplb = ovh.vrack.IpLoadbalancing(\"viplb\",\n    loadbalancing_id=\"yyy\",\n    service_name=\"xxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var viplb = new Ovh.Vrack.IpLoadbalancing(\"viplb\", new()\n    {\n        LoadbalancingId = \"yyy\",\n        ServiceName = \"xxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Vrack.NewIpLoadbalancing(ctx, \"viplb\", \u0026Vrack.IpLoadbalancingArgs{\n\t\t\tLoadbalancingId: pulumi.String(\"yyy\"),\n\t\t\tServiceName:     pulumi.String(\"xxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.IpLoadbalancing;\nimport com.pulumi.ovh.Vrack.IpLoadbalancingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var viplb = new IpLoadbalancing(\"viplb\", IpLoadbalancingArgs.builder()        \n            .LoadbalancingId(\"yyy\")\n            .serviceName(\"xxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  viplb:\n    type: ovh:Vrack:IpLoadbalancing\n    properties:\n      LoadbalancingId: yyy\n      serviceName: xxx\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "LoadbalancingId": {
                    "type": "string",
                    "description": "The id of the IP Load Balancing.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack.\n"
                }
            },
            "required": [
                "LoadbalancingId",
                "serviceName"
            ],
            "inputProperties": {
                "LoadbalancingId": {
                    "type": "string",
                    "description": "The id of the IP Load Balancing.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "LoadbalancingId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadbalancing resources.\n",
                "properties": {
                    "LoadbalancingId": {
                        "type": "string",
                        "description": "The id of the IP Load Balancing.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the vrack.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/vrack:Vrack": {
            "description": "Orders a vrack.\n\n## Important\n\n\u003e __WARNING__ This resource is in beta state. Use with caution.\n\n\u003e __NOTE__ Currently, the OVHcloud API doesn't support Vrack termination. You have to open a support ticket to ask for vrack termination. Otherwise, you may hit vrack quota issues.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@lbrlabs/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my vrack order cart\",\n});\nconst vrackCartProductPlan = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"vrack\",\n    planCode: \"vrack\",\n}));\nconst vrackVrack = new ovh.vrack.Vrack(\"vrackVrack\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"fidelity\",\n    description: \"my vrack\",\n    plan: {\n        duration: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.planCode),\n        pricingMode: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.selectedPrices?[0]?.pricingMode),\n    },\n});\n```\n```python\nimport pulumi\nimport lbrlabs_pulumi_ovh as ovh\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\",\n    description=\"my vrack order cart\")\nvrack_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"vrack\",\n    plan_code=\"vrack\")\nvrack_vrack = ovh.vrack.Vrack(\"vrackVrack\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"fidelity\",\n    description=\"my vrack\",\n    plan=ovh.vrack.VrackPlanArgs(\n        duration=vrack_cart_product_plan.selected_prices[0].duration,\n        plan_code=vrack_cart_product_plan.plan_code,\n        pricing_mode=vrack_cart_product_plan.selected_prices[0].pricing_mode,\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Lbrlabs.PulumiPackage.Ovh;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my vrack order cart\",\n    });\n\n    var vrackCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"vrack\",\n        PlanCode = \"vrack\",\n    });\n\n    var vrackVrack = new Ovh.Vrack.Vrack(\"vrackVrack\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        PaymentMean = \"fidelity\",\n        Description = \"my vrack\",\n        Plan = new Ovh.Vrack.Inputs.VrackPlanArgs\n        {\n            Duration = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my vrack order cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvrackCartProductPlan, err := Order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"vrack\",\n\t\t\tPlanCode:      \"vrack\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Vrack.NewVrack(ctx, \"vrackVrack\", \u0026Vrack.VrackArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"fidelity\"),\n\t\t\tDescription:   pulumi.String(\"my vrack\"),\n\t\t\tPlan: \u0026vrack.VrackPlanArgs{\n\t\t\t\tDuration:    pulumi.String(vrackCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(vrackCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(vrackCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Vrack.Vrack;\nimport com.pulumi.ovh.Vrack.VrackArgs;\nimport com.pulumi.ovh.Vrack.inputs.VrackPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my vrack order cart\")\n            .build());\n\n        final var vrackCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"vrack\")\n            .planCode(\"vrack\")\n            .build());\n\n        var vrackVrack = new Vrack(\"vrackVrack\", VrackArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .paymentMean(\"fidelity\")\n            .description(\"my vrack\")\n            .plan(VrackPlanArgs.builder()\n                .duration(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackVrack:\n    type: ovh:Vrack:Vrack\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: fidelity\n      description: my vrack\n      plan:\n        duration: ${vrackCartProductPlan.selectedPrices[0].duration}\n        planCode: ${vrackCartProductPlan.planCode}\n        pricingMode: ${vrackCartProductPlan.selectedPrices[0].pricingMode}\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my vrack order cart\n  vrackCartProductPlan:\n    fn::invoke:\n      Function: ovh:Order:getCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: vrack\n        planCode: vrack\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n"
                },
                "name": {
                    "type": "string",
                    "description": "yourvrackname\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackOrder:VrackOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:Vrack/VrackPlan:VrackPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanOption:VrackPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "required": [
                "description",
                "name",
                "orders",
                "ovhSubsidiary",
                "paymentMean",
                "plan",
                "serviceName"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n"
                },
                "name": {
                    "type": "string",
                    "description": "yourvrackname\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Vrack/VrackPlan:VrackPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanOption:VrackPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vrack resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "yourvrackdescription\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "yourvrackname\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Vrack/VrackOrder:VrackOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "OVHcloud payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Vrack/VrackPlan:VrackPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Vrack/VrackPlanOption:VrackPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "ovh:CloudProject/getCapabilitiesContainerFilter:getCapabilitiesContainerFilter": {
            "description": "Use this data source to filter the list of container registry capabilities associated with a public cloud project to match one and only one capability.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst capability = pulumi.output(ovh.CloudProject.getCapabilitiesContainerFilter({\n    planName: \"SMALL\",\n    region: \"GRA\",\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncapability = ovh.CloudProject.get_capabilities_container_filter(plan_name=\"SMALL\",\n    region=\"GRA\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var capability = Ovh.CloudProject.GetCapabilitiesContainerFilter.Invoke(new()\n    {\n        PlanName = \"SMALL\",\n        Region = \"GRA\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = CloudProject.GetCapabilitiesContainerFilter(ctx, \u0026cloudproject.GetCapabilitiesContainerFilterArgs{\n\t\t\tPlanName:    \"SMALL\",\n\t\t\tRegion:      \"GRA\",\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetCapabilitiesContainerFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var capability = CloudProjectFunctions.getCapabilitiesContainerFilter(GetCapabilitiesContainerFilterArgs.builder()\n            .planName(\"SMALL\")\n            .region(\"GRA\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  capability:\n    fn::invoke:\n      Function: ovh:CloudProject:getCapabilitiesContainerFilter\n      Arguments:\n        planName: SMALL\n        region: GRA\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCapabilitiesContainerFilter.\n",
                "properties": {
                    "planName": {
                        "type": "string",
                        "description": "The plan name. It can be 'SMALL', 'MEDIUM' or 'LARGE'.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "planName",
                    "region",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCapabilitiesContainerFilter.\n",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Plan code from the catalog\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Plan creation date\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerFilterFeature:getCapabilitiesContainerFilterFeature"
                        },
                        "description": "Features of the plan\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Plan name\n"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "registryLimits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerFilterRegistryLimit:getCapabilitiesContainerFilterRegistryLimit"
                        },
                        "description": "Container registry limits\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Plan last update date\n"
                    }
                },
                "type": "object",
                "required": [
                    "code",
                    "createdAt",
                    "features",
                    "name",
                    "planName",
                    "region",
                    "registryLimits",
                    "serviceName",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistry:getCapabilitiesContainerRegistry": {
            "description": "Use this data source to get the container registry capabilities of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst capabilities = pulumi.output(ovh.CloudProject.getCapabilitiesContainerRegistry({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncapabilities = ovh.CloudProject.get_capabilities_container_registry(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var capabilities = Ovh.CloudProject.GetCapabilitiesContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = CloudProject.GetCapabilitiesContainerRegistry(ctx, \u0026cloudproject.GetCapabilitiesContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetCapabilitiesContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var capabilities = CloudProjectFunctions.getCapabilitiesContainerRegistry(GetCapabilitiesContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  capabilities:\n    fn::invoke:\n      Function: ovh:CloudProject:getCapabilitiesContainerRegistry\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCapabilitiesContainerRegistry.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCapabilitiesContainerRegistry.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResult:getCapabilitiesContainerRegistryResult"
                        },
                        "description": "List of container registry capability for a single region\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistries:getContainerRegistries": {
            "description": "Use this data source to get the container registries of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registries = pulumi.output(ovh.CloudProject.getContainerRegistries({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregistries = ovh.CloudProject.get_container_registries(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registries = Ovh.CloudProject.GetContainerRegistries.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = CloudProject.GetContainerRegistries(ctx, \u0026cloudproject.GetContainerRegistriesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistriesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registries = CloudProjectFunctions.getContainerRegistries(GetContainerRegistriesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  registries:\n    fn::invoke:\n      Function: ovh:CloudProject:getContainerRegistries\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistries.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistries.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getContainerRegistriesResult:getContainerRegistriesResult"
                        },
                        "description": "The list of container registries associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistry:getContainerRegistry": {
            "description": "Use this data source to get information about a container registry associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registry = pulumi.output(ovh.CloudProject.getContainerRegistry({\n    registryId: \"yyyy\",\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregistry = ovh.CloudProject.get_container_registry(registry_id=\"yyyy\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registry = Ovh.CloudProject.GetContainerRegistry.Invoke(new()\n    {\n        RegistryId = \"yyyy\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = CloudProject.GetContainerRegistry(ctx, \u0026cloudproject.GetContainerRegistryArgs{\n\t\t\tRegistryId:  \"yyyy\",\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registry = CloudProjectFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()\n            .registryId(\"yyyy\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  registry:\n    fn::invoke:\n      Function: ovh:CloudProject:getContainerRegistry\n      Arguments:\n        registryId: yyyy\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistry.\n",
                "properties": {
                    "registryId": {
                        "type": "string",
                        "description": "Registry ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistry.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Registry creation date\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Registry name\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID of your registry\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the registry\n"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Current size of the registry (bytes)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Registry status\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Registry last update date\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Access url of the registry\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of your registry\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "name",
                    "projectId",
                    "region",
                    "registryId",
                    "serviceName",
                    "size",
                    "status",
                    "updatedAt",
                    "url",
                    "version",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistryUsers:getContainerRegistryUsers": {
            "description": "Use this data source to get the list of users of a container registry associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registry = ovh.CloudProject.getContainerRegistry({\n    serviceName: \"XXXXXX\",\n    registryId: \"yyyy\",\n});\nconst users = ovh.CloudProject.getContainerRegistryUsers({\n    serviceName: ovh_cloud_project_containerregistry.registry.service_name,\n    registryId: ovh_cloud_project_containerregistry.registry.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregistry = ovh.CloudProject.get_container_registry(service_name=\"XXXXXX\",\n    registry_id=\"yyyy\")\nusers = ovh.CloudProject.get_container_registry_users(service_name=ovh_cloud_project_containerregistry[\"registry\"][\"service_name\"],\n    registry_id=ovh_cloud_project_containerregistry[\"registry\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registry = Ovh.CloudProject.GetContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegistryId = \"yyyy\",\n    });\n\n    var users = Ovh.CloudProject.GetContainerRegistryUsers.Invoke(new()\n    {\n        ServiceName = ovh_cloud_project_containerregistry.Registry.Service_name,\n        RegistryId = ovh_cloud_project_containerregistry.Registry.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = CloudProject.GetContainerRegistry(ctx, \u0026cloudproject.GetContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegistryId:  \"yyyy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = CloudProject.GetContainerRegistryUsers(ctx, \u0026cloudproject.GetContainerRegistryUsersArgs{\n\t\t\tServiceName: ovh_cloud_project_containerregistry.Registry.Service_name,\n\t\t\tRegistryId:  ovh_cloud_project_containerregistry.Registry.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryArgs;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registry = CloudProjectFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .registryId(\"yyyy\")\n            .build());\n\n        final var users = CloudProjectFunctions.getContainerRegistryUsers(GetContainerRegistryUsersArgs.builder()\n            .serviceName(ovh_cloud_project_containerregistry.registry().service_name())\n            .registryId(ovh_cloud_project_containerregistry.registry().id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  registry:\n    fn::invoke:\n      Function: ovh:CloudProject:getContainerRegistry\n      Arguments:\n        serviceName: XXXXXX\n        registryId: yyyy\n  users:\n    fn::invoke:\n      Function: ovh:CloudProject:getContainerRegistryUsers\n      Arguments:\n        serviceName: ${ovh_cloud_project_containerregistry.registry.service_name}\n        registryId: ${ovh_cloud_project_containerregistry.registry.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistryUsers.\n",
                "properties": {
                    "registryId": {
                        "type": "string",
                        "description": "Registry ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistryUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getContainerRegistryUsersResult:getContainerRegistryUsersResult"
                        },
                        "description": "The list of users of the container registry associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getFailoverIpAttach:getFailoverIpAttach": {
            "description": "Use this data source to get the details of a failover ip address of a service in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myfailoverip = pulumi.output(ovh.CloudProject.getFailoverIpAttach({\n    ip: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmyfailoverip = ovh.CloudProject.get_failover_ip_attach(ip=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myfailoverip = Ovh.CloudProject.GetFailoverIpAttach.Invoke(new()\n    {\n        Ip = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = CloudProject.GetFailoverIpAttach(ctx, \u0026cloudproject.GetFailoverIpAttachArgs{\n\t\t\tIp:          pulumi.StringRef(\"XXXXXX\"),\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetFailoverIpAttachArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myfailoverip = CloudProjectFunctions.getFailoverIpAttach(GetFailoverIpAttachArgs.builder()\n            .ip(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myfailoverip:\n    fn::invoke:\n      Function: ovh:CloudProject:getFailoverIpAttach\n      Arguments:\n        ip: XXXXXX\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getFailoverIpAttach.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "The IP block\n"
                    },
                    "continentCode": {
                        "type": "string"
                    },
                    "geoLoc": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The failover ip address to query\n"
                    },
                    "routedTo": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFailoverIpAttach.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "The IP block\n"
                    },
                    "continentCode": {
                        "type": "string"
                    },
                    "geoLoc": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The Ip id\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The Ip Address\n"
                    },
                    "progress": {
                        "type": "integer",
                        "description": "Current operation progress in percent\n"
                    },
                    "routedTo": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "Ip status, can be `ok` or `operationPending`\n"
                    },
                    "subType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "block",
                    "continentCode",
                    "geoLoc",
                    "id",
                    "ip",
                    "progress",
                    "routedTo",
                    "serviceName",
                    "status",
                    "subType"
                ]
            }
        },
        "ovh:CloudProject/getKube:getKube": {
            "description": "Use this data source to get a OVHcloud Managed Kubernetes Service cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myKubeCluster = ovh.CloudProject.getKube({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n});\nexport const version = myKubeCluster.then(myKubeCluster =\u003e myKubeCluster.version);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_kube_cluster = ovh.CloudProject.get_kube(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\npulumi.export(\"version\", my_kube_cluster.version)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myKubeCluster = Ovh.CloudProject.GetKube.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"version\"] = myKubeCluster.Apply(getKubeResult =\u003e getKubeResult.Version),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyKubeCluster, err := CloudProject.GetKube(ctx, \u0026cloudproject.GetKubeArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"version\", myKubeCluster.Version)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myKubeCluster = CloudProjectFunctions.getKube(GetKubeArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        ctx.export(\"version\", myKubeCluster.applyValue(getKubeResult -\u003e getKubeResult.version()));\n    }\n}\n```\n```yaml\nvariables:\n  myKubeCluster:\n    fn::invoke:\n      Function: ovh:CloudProject:getKube\n      Arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\noutputs:\n  version: ${myKubeCluster.version}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKube.\n",
                "properties": {
                    "customization": {
                        "$ref": "#/types/ovh:CloudProject/getKubeCustomization:getKubeCustomization",
                        "description": "Customer customization object\n* apiserver - Kubernetes API server customization\n* admissionplugins - Kubernetes API server admission plugins customization\n* enabled - Array of admission plugins enabled, default is [\"NodeRestriction\",\"AlwaysPulImages\"] and only these admission plugins can be enabled at this time.\n* disabled - Array of admission plugins disabled, default is [] and only AlwaysPulImages can be disabled at this time.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the managed kubernetes cluster.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The OVHcloud public cloud region ID of the managed kubernetes cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Kubernetes version of the managed kubernetes cluster.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKube.\n",
                "properties": {
                    "controlPlaneIsUpToDate": {
                        "type": "boolean",
                        "description": "True if control-plane is up to date.\n"
                    },
                    "customization": {
                        "$ref": "#/types/ovh:CloudProject/getKubeCustomization:getKubeCustomization",
                        "description": "Customer customization object\n* apiserver - Kubernetes API server customization\n* admissionplugins - Kubernetes API server admission plugins customization\n* enabled - Array of admission plugins enabled, default is [\"NodeRestriction\",\"AlwaysPulImages\"] and only these admission plugins can be enabled at this time.\n* disabled - Array of admission plugins disabled, default is [] and only AlwaysPulImages can be disabled at this time.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isUpToDate": {
                        "type": "boolean",
                        "description": "True if all nodes and control-plane are up to date.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the managed kubernetes cluster.\n"
                    },
                    "nextUpgradeVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Kubernetes versions available for upgrade.\n"
                    },
                    "nodesUrl": {
                        "type": "string",
                        "description": "Cluster nodes URL.\n"
                    },
                    "privateNetworkId": {
                        "type": "string",
                        "description": "OpenStack private network (or vrack) ID to use.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The OVHcloud public cloud region ID of the managed kubernetes cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Cluster status. Should be normally set to 'READY'.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Management URL of your cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Kubernetes version of the managed kubernetes cluster.\n"
                    }
                },
                "type": "object",
                "required": [
                    "controlPlaneIsUpToDate",
                    "customization",
                    "isUpToDate",
                    "kubeId",
                    "nextUpgradeVersions",
                    "nodesUrl",
                    "privateNetworkId",
                    "serviceName",
                    "status",
                    "url",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeIpRestrictions:getKubeIpRestrictions": {
            "description": "Use this data source to get a OVHcloud Managed Kubernetes Service cluster IP restrictions.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst iprestrictions = ovh.CloudProject.getKubeIpRestrictions({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n});\nexport const ips = iprestrictions.then(iprestrictions =\u003e iprestrictions.ips);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\niprestrictions = ovh.CloudProject.get_kube_ip_restrictions(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\npulumi.export(\"ips\", iprestrictions.ips)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var iprestrictions = Ovh.CloudProject.GetKubeIpRestrictions.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"ips\"] = iprestrictions.Apply(getKubeIpRestrictionsResult =\u003e getKubeIpRestrictionsResult.Ips),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tiprestrictions, err := CloudProject.GetKubeIpRestrictions(ctx, \u0026cloudproject.GetKubeIpRestrictionsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ips\", iprestrictions.Ips)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeIpRestrictionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var iprestrictions = CloudProjectFunctions.getKubeIpRestrictions(GetKubeIpRestrictionsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        ctx.export(\"ips\", iprestrictions.applyValue(getKubeIpRestrictionsResult -\u003e getKubeIpRestrictionsResult.ips()));\n    }\n}\n```\n```yaml\nvariables:\n  iprestrictions:\n    fn::invoke:\n      Function: ovh:CloudProject:getKubeIpRestrictions\n      Arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\noutputs:\n  ips: ${iprestrictions.ips}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeIpRestrictions.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeIpRestrictions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of CIDRs that restricts the access to the API server.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ips",
                    "kubeId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeNodePool:getKubeNodePool": {
            "description": "Use this data source to get a OVHcloud Managed Kubernetes node pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst nodepool = ovh.CloudProject.getKubeNodePool({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    name: \"xxxxxx\",\n});\nexport const maxNodes = nodepool.then(nodepool =\u003e nodepool.maxNodes);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnodepool = ovh.CloudProject.get_kube_node_pool(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    name=\"xxxxxx\")\npulumi.export(\"maxNodes\", nodepool.max_nodes)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nodepool = Ovh.CloudProject.GetKubeNodePool.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n        Name = \"xxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"maxNodes\"] = nodepool.Apply(getKubeNodePoolResult =\u003e getKubeNodePoolResult.MaxNodes),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnodepool, err := CloudProject.GetKubeNodePool(ctx, \u0026cloudproject.GetKubeNodePoolArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n\t\t\tName:        \"xxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"maxNodes\", nodepool.MaxNodes)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeNodePoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var nodepool = CloudProjectFunctions.getKubeNodePool(GetKubeNodePoolArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\")\n            .name(\"xxxxxx\")\n            .build());\n\n        ctx.export(\"maxNodes\", nodepool.applyValue(getKubeNodePoolResult -\u003e getKubeNodePoolResult.maxNodes()));\n    }\n}\n```\n```yaml\nvariables:\n  nodepool:\n    fn::invoke:\n      Function: ovh:CloudProject:getKubeNodePool\n      Arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\n        name: xxxxxx\noutputs:\n  maxNodes: ${nodepool.maxNodes}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeNodePool.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the node pool.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "template": {
                        "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplate:getKubeNodePoolTemplate"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeNodePool.\n",
                "properties": {
                    "antiAffinity": {
                        "type": "boolean",
                        "description": "(Optional) should the pool use the anti-affinity feature. Default to `false`.\n"
                    },
                    "autoscale": {
                        "type": "boolean",
                        "description": "(Optional) Enable auto-scaling for the pool. Default to `false`.\n"
                    },
                    "availableNodes": {
                        "type": "integer",
                        "description": "Number of nodes which are actually ready in the pool\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date\n"
                    },
                    "currentNodes": {
                        "type": "integer",
                        "description": "Number of nodes present in the pool\n"
                    },
                    "desiredNodes": {
                        "type": "integer",
                        "description": "Number of nodes you desire in the pool\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "Flavor name\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "a valid OVHcloud public cloud flavor ID in which the nodes will be started.\nEx: \"b2-7\". Changing this value recreates the resource.\nYou can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "maxNodes": {
                        "type": "integer",
                        "description": "maximum number of nodes allowed in the pool.\nSetting `desired_nodes` over this value will raise an error.\n"
                    },
                    "minNodes": {
                        "type": "integer",
                        "description": "minimum number of nodes allowed in the pool.\nSetting `desired_nodes` under this value will raise an error.\n"
                    },
                    "monthlyBilled": {
                        "type": "boolean",
                        "description": "(Optional) should the nodes be billed on a monthly basis. Default to `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(Optional) The name of the nodepool.\nChanging this value recreates the resource.\nWarning: \"_\" char is not allowed!\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project id\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "sizeStatus": {
                        "type": "string",
                        "description": "Status describing the state between number of nodes wanted and available ones\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status\n"
                    },
                    "template": {
                        "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplate:getKubeNodePoolTemplate"
                    },
                    "upToDateNodes": {
                        "type": "integer",
                        "description": "Number of nodes with the latest version installed in the pool\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date\n"
                    }
                },
                "type": "object",
                "required": [
                    "antiAffinity",
                    "autoscale",
                    "availableNodes",
                    "createdAt",
                    "currentNodes",
                    "desiredNodes",
                    "flavor",
                    "flavorName",
                    "kubeId",
                    "maxNodes",
                    "minNodes",
                    "monthlyBilled",
                    "name",
                    "projectId",
                    "serviceName",
                    "sizeStatus",
                    "status",
                    "upToDateNodes",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeNodePoolNodes:getKubeNodePoolNodes": {
            "description": "Use this data source to get a list of OVHcloud Managed Kubernetes nodes in a specific node pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst nodesKubeNodePoolNodes = ovh.CloudProject.getKubeNodePoolNodes({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    name: \"XXXXXX\",\n});\nexport const nodes = nodesKubeNodePoolNodes;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnodes_kube_node_pool_nodes = ovh.CloudProject.get_kube_node_pool_nodes(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    name=\"XXXXXX\")\npulumi.export(\"nodes\", nodes_kube_node_pool_nodes)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nodesKubeNodePoolNodes = Ovh.CloudProject.GetKubeNodePoolNodes.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n        Name = \"XXXXXX\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"nodes\"] = nodesKubeNodePoolNodes.Apply(getKubeNodePoolNodesResult =\u003e getKubeNodePoolNodesResult),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnodesKubeNodePoolNodes, err := CloudProject.GetKubeNodePoolNodes(ctx, \u0026cloudproject.GetKubeNodePoolNodesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n\t\t\tName:        \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"nodes\", nodesKubeNodePoolNodes)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeNodePoolNodesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var nodesKubeNodePoolNodes = CloudProjectFunctions.getKubeNodePoolNodes(GetKubeNodePoolNodesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\")\n            .name(\"XXXXXX\")\n            .build());\n\n        ctx.export(\"nodes\", nodesKubeNodePoolNodes.applyValue(getKubeNodePoolNodesResult -\u003e getKubeNodePoolNodesResult));\n    }\n}\n```\n```yaml\nvariables:\n  nodesKubeNodePoolNodes:\n    fn::invoke:\n      Function: ovh:CloudProject:getKubeNodePoolNodes\n      Arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\n        name: XXXXXX\noutputs:\n  nodes: ${nodesKubeNodePoolNodes}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeNodePoolNodes.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The ID of the managed kubernetes cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the node pool from which we want the nodes.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeNodePoolNodes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the node.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeNodePoolNodesNode:getKubeNodePoolNodesNode"
                        },
                        "description": "List of all nodes composing the kubernetes cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "name",
                    "nodes",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeNodes:getKubeNodes": {
            "description": "Use this data source to get a list of OVHcloud Managed Kubernetes nodes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst nodesKubeNodes = ovh.CloudProject.getKubeNodes({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n});\nexport const nodes = nodesKubeNodes;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnodes_kube_nodes = ovh.CloudProject.get_kube_nodes(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\")\npulumi.export(\"nodes\", nodes_kube_nodes)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nodesKubeNodes = Ovh.CloudProject.GetKubeNodes.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"nodes\"] = nodesKubeNodes.Apply(getKubeNodesResult =\u003e getKubeNodesResult),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnodesKubeNodes, err := CloudProject.GetKubeNodes(ctx, \u0026cloudproject.GetKubeNodesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"nodes\", nodesKubeNodes)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeNodesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var nodesKubeNodes = CloudProjectFunctions.getKubeNodes(GetKubeNodesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\")\n            .build());\n\n        ctx.export(\"nodes\", nodesKubeNodes.applyValue(getKubeNodesResult -\u003e getKubeNodesResult));\n    }\n}\n```\n```yaml\nvariables:\n  nodesKubeNodes:\n    fn::invoke:\n      Function: ovh:CloudProject:getKubeNodes\n      Arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\noutputs:\n  nodes: ${nodesKubeNodes}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeNodes.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The ID of the managed kubernetes cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeNodes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeNodesNode:getKubeNodesNode"
                        },
                        "description": "List of all nodes composing the kubernetes cluster\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "nodes",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeOidc:getKubeOidc": {
            "description": "Use this data source to get a OVHcloud Managed Kubernetes Service cluster OIDC.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nexport = async () =\u003e {\n    const oidc = await ovh.CloudProject.getKubeOidc({\n        serviceName: \"XXXXXX\",\n        kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n    const oidc_val = oidc.clientId;\n    return {\n        \"oidc-val\": oidc_val,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\noidc = ovh.CloudProject.get_kube_oidc(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\npulumi.export(\"oidc-val\", oidc.client_id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var oidc = Ovh.CloudProject.GetKubeOidc.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oidc-val\"] = oidc.Apply(getKubeOidcResult =\u003e getKubeOidcResult.ClientId),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\toidc, err := CloudProject.GetKubeOidc(ctx, \u0026cloudproject.GetKubeOidcArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"oidc-val\", oidc.ClientId)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeOidcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var oidc = CloudProjectFunctions.getKubeOidc(GetKubeOidcArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        ctx.export(\"oidc-val\", oidc.applyValue(getKubeOidcResult -\u003e getKubeOidcResult.clientId()));\n    }\n}\n```\n```yaml\nvariables:\n  oidc:\n    fn::invoke:\n      Function: ovh:CloudProject:getKubeOidc\n      Arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\noutputs:\n  oidc-val: ${oidc.clientId}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeOidc.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "The OIDC client ID.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "The OIDC issuer url.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "oidcCaContent": {
                        "type": "string"
                    },
                    "oidcGroupsClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcGroupsPrefix": {
                        "type": "string"
                    },
                    "oidcRequiredClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcSigningAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcUsernameClaim": {
                        "type": "string"
                    },
                    "oidcUsernamePrefix": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeOidc.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "The OIDC client ID.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "The OIDC issuer url.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "oidcCaContent": {
                        "type": "string"
                    },
                    "oidcGroupsClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcGroupsPrefix": {
                        "type": "string"
                    },
                    "oidcRequiredClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcSigningAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcUsernameClaim": {
                        "type": "string"
                    },
                    "oidcUsernamePrefix": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getM3dbNamespace:getM3dbNamespace": {
            "description": "Use this data source to get information about a namespace of a M3DB cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst m3dbnamespace = ovh.CloudProject.getM3dbNamespace({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const m3dbnamespaceType = m3dbnamespace.then(m3dbnamespace =\u003e m3dbnamespace.type);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nm3dbnamespace = ovh.CloudProject.get_m3db_namespace(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"m3dbnamespaceType\", m3dbnamespace.type)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var m3dbnamespace = Ovh.CloudProject.GetM3dbNamespace.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"m3dbnamespaceType\"] = m3dbnamespace.Apply(getM3dbNamespaceResult =\u003e getM3dbNamespaceResult.Type),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tm3dbnamespace, err := CloudProject.GetM3dbNamespace(ctx, \u0026cloudproject.GetM3dbNamespaceArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"m3dbnamespaceType\", m3dbnamespace.Type)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetM3dbNamespaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var m3dbnamespace = CloudProjectFunctions.getM3dbNamespace(GetM3dbNamespaceArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"m3dbnamespaceType\", m3dbnamespace.applyValue(getM3dbNamespaceResult -\u003e getM3dbNamespaceResult.type()));\n    }\n}\n```\n```yaml\nvariables:\n  m3dbnamespace:\n    fn::invoke:\n      Function: ovh:CloudProject:getM3dbNamespace\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  m3dbnamespaceType: ${m3dbnamespace.type}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbNamespace.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the namespace.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbNamespace.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "resolution": {
                        "type": "string",
                        "description": "Resolution for an aggregated namespace.\n"
                    },
                    "retentionBlockDataExpirationDuration": {
                        "type": "string",
                        "description": "Controls how long we wait before expiring stale data.\n"
                    },
                    "retentionBlockSizeDuration": {
                        "type": "string",
                        "description": "Controls how long to keep a block in memory before flushing to a fileset on disk.\n"
                    },
                    "retentionBufferFutureDuration": {
                        "type": "string",
                        "description": "Controls how far into the future writes to the namespace will be accepted.\n"
                    },
                    "retentionBufferPastDuration": {
                        "type": "string",
                        "description": "Controls how far into the past writes to the namespace will be accepted.\n"
                    },
                    "retentionPeriodDuration": {
                        "type": "string",
                        "description": "Controls the duration of time that M3DB will retain data for the namespace.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n* `snapshot_enabled`- SDefines whether M3db will create snapshot files for this namespace.\n"
                    },
                    "snapshotEnabled": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of namespace.\n"
                    },
                    "writesToCommitLogEnabled": {
                        "type": "boolean",
                        "description": "Defines whether M3DB will include writes to this namespace in the commit log.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "resolution",
                    "retentionBlockDataExpirationDuration",
                    "retentionBlockSizeDuration",
                    "retentionBufferFutureDuration",
                    "retentionBufferPastDuration",
                    "retentionPeriodDuration",
                    "serviceName",
                    "snapshotEnabled",
                    "type",
                    "writesToCommitLogEnabled",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getM3dbNamespaces:getM3dbNamespaces": {
            "description": "Use this data source to get the list of namespaces of a M3DB cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst namespaces = ovh.CloudProject.getM3dbNamespaces({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n});\nexport const namespaceIds = namespaces.then(namespaces =\u003e namespaces.namespaceIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnamespaces = ovh.CloudProject.get_m3db_namespaces(service_name=\"XXX\",\n    cluster_id=\"YYY\")\npulumi.export(\"namespaceIds\", namespaces.namespace_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var namespaces = Ovh.CloudProject.GetM3dbNamespaces.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"namespaceIds\"] = namespaces.Apply(getM3dbNamespacesResult =\u003e getM3dbNamespacesResult.NamespaceIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnamespaces, err := CloudProject.GetM3dbNamespaces(ctx, \u0026cloudproject.GetM3dbNamespacesArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"namespaceIds\", namespaces.NamespaceIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetM3dbNamespacesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var namespaces = CloudProjectFunctions.getM3dbNamespaces(GetM3dbNamespacesArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .build());\n\n        ctx.export(\"namespaceIds\", namespaces.applyValue(getM3dbNamespacesResult -\u003e getM3dbNamespacesResult.namespaceIds()));\n    }\n}\n```\n```yaml\nvariables:\n  namespaces:\n    fn::invoke:\n      Function: ovh:CloudProject:getM3dbNamespaces\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\noutputs:\n  namespaceIds: ${namespaces.namespaceIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbNamespaces.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbNamespaces.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "namespaceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of namespaces ids of the M3DB cluster associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "namespaceIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getM3dbUser:getM3dbUser": {
            "description": "Use this data source to get information about a user of a M3DB cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst m3dbuser = ovh.CloudProject.getM3dbUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const m3dbuserGroup = m3dbuser.then(m3dbuser =\u003e m3dbuser.group);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nm3dbuser = ovh.CloudProject.get_m3db_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"m3dbuserGroup\", m3dbuser.group)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var m3dbuser = Ovh.CloudProject.GetM3dbUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"m3dbuserGroup\"] = m3dbuser.Apply(getM3dbUserResult =\u003e getM3dbUserResult.Group),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tm3dbuser, err := CloudProject.GetM3dbUser(ctx, \u0026cloudproject.GetM3dbUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"m3dbuserGroup\", m3dbuser.Group)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetM3dbUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var m3dbuser = CloudProjectFunctions.getM3dbUser(GetM3dbUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"m3dbuserGroup\", m3dbuser.applyValue(getM3dbUserResult -\u003e getM3dbUserResult.group()));\n    }\n}\n```\n```yaml\nvariables:\n  m3dbuser:\n    fn::invoke:\n      Function: ovh:CloudProject:getM3dbUser\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  m3dbuserGroup: ${m3dbuser.group}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "group",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getMongoDbUser:getMongoDbUser": {
            "description": "Use this data source to get information about a user of a mongodb cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mongouser = ovh.CloudProject.getMongoDbUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ@admin\",\n});\nexport const mongouserRoles = mongouser.then(mongouser =\u003e mongouser.roles);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmongouser = ovh.CloudProject.get_mongo_db_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ@admin\")\npulumi.export(\"mongouserRoles\", mongouser.roles)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mongouser = Ovh.CloudProject.GetMongoDbUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ@admin\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"mongouserRoles\"] = mongouser.Apply(getMongoDbUserResult =\u003e getMongoDbUserResult.Roles),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmongouser, err := CloudProject.GetMongoDbUser(ctx, \u0026cloudproject.GetMongoDbUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ@admin\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"mongouserRoles\", mongouser.Roles)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetMongoDbUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mongouser = CloudProjectFunctions.getMongoDbUser(GetMongoDbUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ@admin\")\n            .build());\n\n        ctx.export(\"mongouserRoles\", mongouser.applyValue(getMongoDbUserResult -\u003e getMongoDbUserResult.roles()));\n    }\n}\n```\n```yaml\nvariables:\n  mongouser:\n    fn::invoke:\n      Function: ovh:CloudProject:getMongoDbUser\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ@admin\noutputs:\n  mongouserRoles: ${mongouser.roles}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMongoDbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user with the authentication database in the format name@authDB, for example: johndoe@admin\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMongoDbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "name",
                    "roles",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getOpenSearchPattern:getOpenSearchPattern": {
            "description": "Use this data source to get information about a pattern of a opensearch cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst pattern = ovh.CloudProject.getOpenSearchPattern({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    id: \"ZZZ\",\n});\nexport const patternPattern = pattern.then(pattern =\u003e pattern.pattern);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npattern = ovh.CloudProject.get_open_search_pattern(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    id=\"ZZZ\")\npulumi.export(\"patternPattern\", pattern.pattern)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pattern = Ovh.CloudProject.GetOpenSearchPattern.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Id = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"patternPattern\"] = pattern.Apply(getOpenSearchPatternResult =\u003e getOpenSearchPatternResult.Pattern),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpattern, err := CloudProject.GetOpenSearchPattern(ctx, \u0026cloudproject.GetOpenSearchPatternArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"patternPattern\", pattern.Pattern)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetOpenSearchPatternArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var pattern = CloudProjectFunctions.getOpenSearchPattern(GetOpenSearchPatternArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .id(\"ZZZ\")\n            .build());\n\n        ctx.export(\"patternPattern\", pattern.applyValue(getOpenSearchPatternResult -\u003e getOpenSearchPatternResult.pattern()));\n    }\n}\n```\n```yaml\nvariables:\n  pattern:\n    fn::invoke:\n      Function: ovh:CloudProject:getOpenSearchPattern\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        id: ZZZ\noutputs:\n  patternPattern: ${pattern.pattern}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchPattern.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Pattern ID.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchPattern.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "maxIndexCount": {
                        "type": "integer",
                        "description": "Maximum number of index for this pattern.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Pattern format.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the pattern.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "maxIndexCount",
                    "pattern",
                    "serviceName"
                ]
            }
        },
        "ovh:CloudProject/getOpenSearchPatterns:getOpenSearchPatterns": {
            "description": "Use this data source to get the list of pattern of a opensearch cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst patterns = ovh.CloudProject.getOpenSearchPatterns({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n});\nexport const patternIds = patterns.then(patterns =\u003e patterns.patternIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npatterns = ovh.CloudProject.get_open_search_patterns(service_name=\"XXX\",\n    cluster_id=\"YYY\")\npulumi.export(\"patternIds\", patterns.pattern_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var patterns = Ovh.CloudProject.GetOpenSearchPatterns.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"patternIds\"] = patterns.Apply(getOpenSearchPatternsResult =\u003e getOpenSearchPatternsResult.PatternIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpatterns, err := CloudProject.GetOpenSearchPatterns(ctx, \u0026cloudproject.GetOpenSearchPatternsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"patternIds\", patterns.PatternIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetOpenSearchPatternsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var patterns = CloudProjectFunctions.getOpenSearchPatterns(GetOpenSearchPatternsArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .build());\n\n        ctx.export(\"patternIds\", patterns.applyValue(getOpenSearchPatternsResult -\u003e getOpenSearchPatternsResult.patternIds()));\n    }\n}\n```\n```yaml\nvariables:\n  patterns:\n    fn::invoke:\n      Function: ovh:CloudProject:getOpenSearchPatterns\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\noutputs:\n  patternIds: ${patterns.patternIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchPatterns.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchPatterns.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "patternIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of patterns ids of the opensearch cluster associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "patternIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getOpenSearchUser:getOpenSearchUser": {
            "description": "Use this data source to get information about a user of a opensearch cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst osuser = ovh.CloudProject.getOpenSearchUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const osuserAcls = osuser.then(osuser =\u003e osuser.acls);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nosuser = ovh.CloudProject.get_open_search_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"osuserAcls\", osuser.acls)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var osuser = Ovh.CloudProject.GetOpenSearchUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"osuserAcls\"] = osuser.Apply(getOpenSearchUserResult =\u003e getOpenSearchUserResult.Acls),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tosuser, err := CloudProject.GetOpenSearchUser(ctx, \u0026cloudproject.GetOpenSearchUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"osuserAcls\", osuser.Acls)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetOpenSearchUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var osuser = CloudProjectFunctions.getOpenSearchUser(GetOpenSearchUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"osuserAcls\", osuser.applyValue(getOpenSearchUserResult -\u003e getOpenSearchUserResult.acls()));\n    }\n}\n```\n```yaml\nvariables:\n  osuser:\n    fn::invoke:\n      Function: ovh:CloudProject:getOpenSearchUser\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  osuserAcls: ${osuser.acls}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchUser.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getOpenSearchUserAcl:getOpenSearchUserAcl"
                        },
                        "description": "Acls of the user.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "acls",
                    "clusterId",
                    "createdAt",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRedisUser:getRedisUser": {
            "description": "Use this data source to get information about a user of a redis cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst redisuser = ovh.CloudProject.getRedisUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const redisuserCommands = redisuser.then(redisuser =\u003e redisuser.commands);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nredisuser = ovh.CloudProject.get_redis_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"redisuserCommands\", redisuser.commands)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var redisuser = Ovh.CloudProject.GetRedisUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"redisuserCommands\"] = redisuser.Apply(getRedisUserResult =\u003e getRedisUserResult.Commands),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tredisuser, err := CloudProject.GetRedisUser(ctx, \u0026cloudproject.GetRedisUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"redisuserCommands\", redisuser.Commands)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRedisUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var redisuser = CloudProjectFunctions.getRedisUser(GetRedisUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"redisuserCommands\", redisuser.applyValue(getRedisUserResult -\u003e getRedisUserResult.commands()));\n    }\n}\n```\n```yaml\nvariables:\n  redisuser:\n    fn::invoke:\n      Function: ovh:CloudProject:getRedisUser\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  redisuserCommands: ${redisuser.commands}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRedisUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRedisUser.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Categories of the user.\n"
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Channels of the user.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "commands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Commands of the user.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "categories",
                    "channels",
                    "clusterId",
                    "commands",
                    "createdAt",
                    "keys",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRegion:getRegion": {
            "description": "Use this data source to retrieve information about a region associated with a public cloud project. The region must be associated with the project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst gRA1 = pulumi.output(ovh.CloudProject.getRegion({\n    name: \"GRA1\",\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ng_ra1 = ovh.CloudProject.get_region(name=\"GRA1\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var gRA1 = Ovh.CloudProject.GetRegion.Invoke(new()\n    {\n        Name = \"GRA1\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = CloudProject.GetRegion(ctx, \u0026cloudproject.GetRegionArgs{\n\t\t\tName:        \"GRA1\",\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRegionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var gRA1 = CloudProjectFunctions.getRegion(GetRegionArgs.builder()\n            .name(\"GRA1\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  gRA1:\n    fn::invoke:\n      Function: ovh:CloudProject:getRegion\n      Arguments:\n        name: GRA1\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRegion.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the region associated with the public cloud\nproject.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegion.\n",
                "properties": {
                    "continentCode": {
                        "type": "string",
                        "description": "the code of the geographic continent the region is running.\nE.g.: EU for Europe, US for America...\n"
                    },
                    "datacenterLocation": {
                        "type": "string",
                        "description": "The location code of the datacenter.\nE.g.: \"GRA\", meaning Gravelines, for region \"GRA1\"\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the public cloud service\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getRegionService:getRegionService"
                        },
                        "description": "The list of public cloud services running within the region\n"
                    }
                },
                "type": "object",
                "required": [
                    "continentCode",
                    "datacenterLocation",
                    "name",
                    "serviceName",
                    "services",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRegions:getRegions": {
            "description": "Use this data source to get the regions of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst regions = pulumi.output(ovh.CloudProject.getRegions({\n    hasServicesUps: [\"network\"],\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregions = ovh.CloudProject.get_regions(has_services_ups=[\"network\"],\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var regions = Ovh.CloudProject.GetRegions.Invoke(new()\n    {\n        HasServicesUps = new[]\n        {\n            \"network\",\n        },\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = CloudProject.GetRegions(ctx, \u0026cloudproject.GetRegionsArgs{\n\t\t\tHasServicesUps: []string{\n\t\t\t\t\"network\",\n\t\t\t},\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRegionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var regions = CloudProjectFunctions.getRegions(GetRegionsArgs.builder()\n            .hasServicesUps(\"network\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  regions:\n    fn::invoke:\n      Function: ovh:CloudProject:getRegions\n      Arguments:\n        hasServicesUps:\n          - network\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of services which has to be UP in regions.\nExample: \"image\", \"instance\", \"network\", \"storage\", \"volume\", \"workflow\", ...\nIf left blank, returns all regions associated with the service_name.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of regions associated with the project, filtered by services UP.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "names",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUser:getUser": {
            "description": "Get the user details of a previously created public cloud project user.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "the date the user was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of the role\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getUserRole:getUserRole"
                        },
                        "description": "A list of roles associated with the user.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the user. should be normally set to 'ok'.\n"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string",
                        "description": "the username generated for the user. This username can be used with\nthe Openstack API.\n"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "description",
                    "roles",
                    "serviceName",
                    "status",
                    "userId",
                    "username",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUserS3Credential:getUserS3Credential": {
            "description": "Use this data source to retrieve the Secret Access Key of an Access Key ID associated with a public cloud project's user.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUserS3Credential.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "the Access Key ID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyId",
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserS3Credential.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "(Sensitive) the Secret Access Key\n",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyId",
                    "secretAccessKey",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUserS3Credentials:getUserS3Credentials": {
            "description": "Use this data source to retrieve the list of all the S3 access_key_id associated with a public cloud project's user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myS3Credentials = ovh.CloudProject.getUserS3Credentials({\n    serviceName: \"XXXXXX\",\n    userId: \"1234\",\n});\nexport const accessKeyIds = myS3Credentials.then(myS3Credentials =\u003e myS3Credentials.accessKeyIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_s3_credentials = ovh.CloudProject.get_user_s3_credentials(service_name=\"XXXXXX\",\n    user_id=\"1234\")\npulumi.export(\"accessKeyIds\", my_s3_credentials.access_key_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myS3Credentials = Ovh.CloudProject.GetUserS3Credentials.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        UserId = \"1234\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"accessKeyIds\"] = myS3Credentials.Apply(getUserS3CredentialsResult =\u003e getUserS3CredentialsResult.AccessKeyIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyS3Credentials, err := CloudProject.GetUserS3Credentials(ctx, \u0026cloudproject.GetUserS3CredentialsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tUserId:      \"1234\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"accessKeyIds\", myS3Credentials.AccessKeyIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetUserS3CredentialsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myS3Credentials = CloudProjectFunctions.getUserS3Credentials(GetUserS3CredentialsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .userId(\"1234\")\n            .build());\n\n        ctx.export(\"accessKeyIds\", myS3Credentials.applyValue(getUserS3CredentialsResult -\u003e getUserS3CredentialsResult.accessKeyIds()));\n    }\n}\n```\n```yaml\nvariables:\n  myS3Credentials:\n    fn::invoke:\n      Function: ovh:CloudProject:getUserS3Credentials\n      Arguments:\n        serviceName: XXXXXX\n        userId: '1234'\noutputs:\n  accessKeyIds: ${myS3Credentials.accessKeyIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUserS3Credentials.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserS3Credentials.\n",
                "properties": {
                    "accessKeyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the Access Key ID associated with this user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyIds",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUserS3Policy:getUserS3Policy": {
            "description": "Get the S3 Policy of a public cloud project user. The policy can be set by using the `ovh.CloudProject.S3Policy` resource.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUserS3Policy.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserS3Policy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "policy": {
                        "type": "string",
                        "description": "(Required) The policy document. This is a JSON formatted string.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "policy",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUsers:getUsers": {
            "description": "Get the list of all users of a public cloud project.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getUsersUser:getUsersUser"
                        },
                        "description": "The list of users of a public cloud project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "users",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getCapabilities:getCapabilities": {
            "description": "Use this data source to get information about capabilities of a public cloud project.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCapabilities.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCapabilities.\n",
                "properties": {
                    "engines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesEngine:getCapabilitiesEngine"
                        },
                        "description": "Database engines available.\n"
                    },
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesFlavor:getCapabilitiesFlavor"
                        },
                        "description": "Flavors available.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesOption:getCapabilitiesOption"
                        },
                        "description": "Options available.\n"
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesPlan:getCapabilitiesPlan"
                        },
                        "description": "Plans available.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "engines",
                    "flavors",
                    "options",
                    "plans",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getCertificates:getCertificates": {
            "description": "Use this data source to get information about certificates of a cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst certificates = ovh.CloudProjectDatabase.getCertificates({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n});\nexport const certificatesCa = certificates.then(certificates =\u003e certificates.ca);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncertificates = ovh.CloudProjectDatabase.get_certificates(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"certificatesCa\", certificates.ca)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var certificates = Ovh.CloudProjectDatabase.GetCertificates.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"certificatesCa\"] = certificates.Apply(getCertificatesResult =\u003e getCertificatesResult.Ca),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcertificates, err := CloudProjectDatabase.GetCertificates(ctx, \u0026cloudprojectdatabase.GetCertificatesArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"certificatesCa\", certificates.Ca)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetCertificatesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var certificates = CloudProjectDatabaseFunctions.getCertificates(GetCertificatesArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"certificatesCa\", certificates.applyValue(getCertificatesResult -\u003e getCertificatesResult.ca()));\n    }\n}\n```\n```yaml\nvariables:\n  certificates:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getCertificates\n      Arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\noutputs:\n  certificatesCa: ${certificates.ca}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCertificates.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want database information. To get a full list of available engine visit:\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `cassandra`\n* `kafka`\n* `mysql`\n* `postgresql`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCertificates.\n",
                "properties": {
                    "ca": {
                        "type": "string",
                        "description": "CA certificate used for the service.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ca",
                    "clusterId",
                    "engine",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabase:getDatabase": {
            "description": "Use this data source to get the managed database of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo get information of a database cluster service:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst db = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXXXXX\",\n    engine: \"YYYY\",\n    id: \"ZZZZ\",\n});\nexport const clusterId = db.then(db =\u003e db.id);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndb = ovh.CloudProjectDatabase.get_database(service_name=\"XXXXXX\",\n    engine=\"YYYY\",\n    id=\"ZZZZ\")\npulumi.export(\"clusterId\", db.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var db = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Engine = \"YYYY\",\n        Id = \"ZZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"clusterId\"] = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdb, err := CloudProjectDatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tId:          \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"clusterId\", db.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var db = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .engine(\"YYYY\")\n            .id(\"ZZZZ\")\n            .build());\n\n        ctx.export(\"clusterId\", db.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  db:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabase\n      Arguments:\n        serviceName: XXXXXX\n        engine: YYYY\n        id: ZZZZ\noutputs:\n  clusterId: ${db.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabase.\n",
                "properties": {
                    "engine": {
                        "type": "string",
                        "description": "The database engine you want to get information. To get a full list of available engine visit:\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "engine",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabase.\n",
                "properties": {
                    "backupTime": {
                        "type": "string",
                        "description": "Time on which backups start every day.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the cluster.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Small description of the database service.\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The disk size (in GB) of the database service.\n"
                    },
                    "diskType": {
                        "type": "string",
                        "description": "The disk type of the database service.\n"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getDatabaseEndpoint:getDatabaseEndpoint"
                        },
                        "description": "List of all endpoints objects of the service.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud database flavor name in which the nodes will be started.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "kafkaRestApi": {
                        "type": "boolean",
                        "description": "Defines whether the REST API is enabled on a kafka cluster.\n"
                    },
                    "maintenanceTime": {
                        "type": "string",
                        "description": "Time on which maintenances can start every day.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Type of network of the cluster.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getDatabaseNode:getDatabaseNode"
                        },
                        "description": "List of nodes object.\n"
                    },
                    "opensearchAclsEnabled": {
                        "type": "boolean"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Plan of the cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the engine in which the service should be deployed\n"
                    }
                },
                "type": "object",
                "required": [
                    "backupTime",
                    "createdAt",
                    "description",
                    "diskSize",
                    "diskType",
                    "endpoints",
                    "engine",
                    "flavor",
                    "id",
                    "kafkaRestApi",
                    "maintenanceTime",
                    "networkType",
                    "nodes",
                    "opensearchAclsEnabled",
                    "plan",
                    "serviceName",
                    "status",
                    "version"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseInstance:getDatabaseInstance": {
            "description": "Use this data source to get information about a database of a database cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst database = ovh.CloudProjectDatabase.getDatabaseInstance({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n    name: \"UUU\",\n});\nexport const databaseName = database.then(database =\u003e database.name);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndatabase = ovh.CloudProjectDatabase.get_database_instance(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\",\n    name=\"UUU\")\npulumi.export(\"databaseName\", database.name)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var database = Ovh.CloudProjectDatabase.GetDatabaseInstance.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n        Name = \"UUU\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"databaseName\"] = database.Apply(getDatabaseInstanceResult =\u003e getDatabaseInstanceResult.Name),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdatabase, err := CloudProjectDatabase.GetDatabaseInstance(ctx, \u0026cloudprojectdatabase.GetDatabaseInstanceArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t\tName:        \"UUU\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"databaseName\", database.Name)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var database = CloudProjectDatabaseFunctions.getDatabaseInstance(GetDatabaseInstanceArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .name(\"UUU\")\n            .build());\n\n        ctx.export(\"databaseName\", database.applyValue(getDatabaseInstanceResult -\u003e getDatabaseInstanceResult.name()));\n    }\n}\n```\n```yaml\nvariables:\n  database:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabaseInstance\n      Arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\n        name: UUU\noutputs:\n  databaseName: ${database.name}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseInstance.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want database information. To get a full list of available engine visit:\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `mysql`\n* `postgresql`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the database.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseInstance.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Defines if the database has been created by default.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the database.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the database.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "default",
                    "engine",
                    "name",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseInstances:getDatabaseInstances": {
            "description": "Use this data source to get the list of databases of a database cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst databases = ovh.CloudProjectDatabase.getDatabaseInstances({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZ\",\n});\nexport const databaseIds = databases.then(databases =\u003e databases.databaseIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndatabases = ovh.CloudProjectDatabase.get_database_instances(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"databaseIds\", databases.database_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var databases = Ovh.CloudProjectDatabase.GetDatabaseInstances.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"databaseIds\"] = databases.Apply(getDatabaseInstancesResult =\u003e getDatabaseInstancesResult.DatabaseIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdatabases, err := CloudProjectDatabase.GetDatabaseInstances(ctx, \u0026cloudprojectdatabase.GetDatabaseInstancesArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"databaseIds\", databases.DatabaseIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseInstancesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var databases = CloudProjectDatabaseFunctions.getDatabaseInstances(GetDatabaseInstancesArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"databaseIds\", databases.applyValue(getDatabaseInstancesResult -\u003e getDatabaseInstancesResult.databaseIds()));\n    }\n}\n```\n```yaml\nvariables:\n  databases:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabaseInstances\n      Arguments:\n        serviceName: XXXX\n        engine: YYYY\n        clusterId: ZZZ\noutputs:\n  databaseIds: ${databases.databaseIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseInstances.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to list databases. To get a full list of available engine visit:\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `mysql`\n* `postgresql`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseInstances.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "databaseIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of databases ids of the database cluster associated with the project.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "databaseIds",
                    "engine",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseIntegration:getDatabaseIntegration": {
            "description": "Use this data source to get information about an integration of a database cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst integration = ovh.CloudProjectDatabase.getDatabaseIntegration({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n    id: \"UUU\",\n});\nexport const integrationType = integration.then(integration =\u003e integration.type);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nintegration = ovh.CloudProjectDatabase.get_database_integration(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\",\n    id=\"UUU\")\npulumi.export(\"integrationType\", integration.type)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var integration = Ovh.CloudProjectDatabase.GetDatabaseIntegration.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n        Id = \"UUU\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"integrationType\"] = integration.Apply(getDatabaseIntegrationResult =\u003e getDatabaseIntegrationResult.Type),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tintegration, err := CloudProjectDatabase.GetDatabaseIntegration(ctx, \u0026cloudprojectdatabase.GetDatabaseIntegrationArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t\tId:          \"UUU\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"integrationType\", integration.Type)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseIntegrationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var integration = CloudProjectDatabaseFunctions.getDatabaseIntegration(GetDatabaseIntegrationArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .id(\"UUU\")\n            .build());\n\n        ctx.export(\"integrationType\", integration.applyValue(getDatabaseIntegrationResult -\u003e getDatabaseIntegrationResult.type()));\n    }\n}\n```\n```yaml\nvariables:\n  integration:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabaseIntegration\n      Arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\n        id: UUU\noutputs:\n  integrationType: ${integration.type}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseIntegration.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAll engines available exept `mongodb`\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Integration ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseIntegration.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "destinationServiceId": {
                        "type": "string",
                        "description": "ID of the destination service.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Parameters for the integration.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "sourceServiceId": {
                        "type": "string",
                        "description": "ID of the source service.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the integration.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the integration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "destinationServiceId",
                    "engine",
                    "id",
                    "parameters",
                    "serviceName",
                    "sourceServiceId",
                    "status",
                    "type"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseIntegrations:getDatabaseIntegrations": {
            "description": "Use this data source to get the list of integrations of a database cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst integrations = ovh.CloudProjectDatabase.getDatabaseIntegrations({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n});\nexport const integrationIds = integrations.then(integrations =\u003e integrations.integrationIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nintegrations = ovh.CloudProjectDatabase.get_database_integrations(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"integrationIds\", integrations.integration_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var integrations = Ovh.CloudProjectDatabase.GetDatabaseIntegrations.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"integrationIds\"] = integrations.Apply(getDatabaseIntegrationsResult =\u003e getDatabaseIntegrationsResult.IntegrationIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tintegrations, err := CloudProjectDatabase.GetDatabaseIntegrations(ctx, \u0026cloudprojectdatabase.GetDatabaseIntegrationsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"integrationIds\", integrations.IntegrationIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseIntegrationsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var integrations = CloudProjectDatabaseFunctions.getDatabaseIntegrations(GetDatabaseIntegrationsArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"integrationIds\", integrations.applyValue(getDatabaseIntegrationsResult -\u003e getDatabaseIntegrationsResult.integrationIds()));\n    }\n}\n```\n```yaml\nvariables:\n  integrations:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabaseIntegrations\n      Arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\noutputs:\n  integrationIds: ${integrations.integrationIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseIntegrations.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to list integrations. To get a full list of available engine visit:\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAll engines available exept `mongodb`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseIntegrations.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "integrationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of integrations ids of the database cluster associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "integrationIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabases:getDatabases": {
            "description": "Use this data source to get the list of managed databases of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo get the list of database clusters service for a given engine:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst dbs = ovh.CloudProjectDatabase.getDatabases({\n    serviceName: \"XXXXXX\",\n    engine: \"YYYY\",\n});\nexport const clusterIds = dbs.then(dbs =\u003e dbs.clusterIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndbs = ovh.CloudProjectDatabase.get_databases(service_name=\"XXXXXX\",\n    engine=\"YYYY\")\npulumi.export(\"clusterIds\", dbs.cluster_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var dbs = Ovh.CloudProjectDatabase.GetDatabases.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Engine = \"YYYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"clusterIds\"] = dbs.Apply(getDatabasesResult =\u003e getDatabasesResult.ClusterIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdbs, err := CloudProjectDatabase.GetDatabases(ctx, \u0026cloudprojectdatabase.GetDatabasesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"clusterIds\", dbs.ClusterIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabasesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var dbs = CloudProjectDatabaseFunctions.getDatabases(GetDatabasesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .engine(\"YYYY\")\n            .build());\n\n        ctx.export(\"clusterIds\", dbs.applyValue(getDatabasesResult -\u003e getDatabasesResult.clusterIds()));\n    }\n}\n```\n```yaml\nvariables:\n  dbs:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getDatabases\n      Arguments:\n        serviceName: XXXXXX\n        engine: YYYY\noutputs:\n  clusterIds: ${dbs.clusterIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabases.\n",
                "properties": {
                    "engine": {
                        "type": "string",
                        "description": "The database engine you want to list. To get a full list of available engine visit:\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabases.\n",
                "properties": {
                    "clusterIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of managed databases ids of the project.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterIds",
                    "engine",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getIpRestrictions:getIpRestrictions": {
            "description": "Use the list of IP restrictions associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo get the list of IP restriction on a database cluster service:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst iprestrictions = ovh.CloudProjectDatabase.getIpRestrictions({\n    serviceName: \"XXXXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZZ\",\n});\nexport const ips = iprestrictions.then(iprestrictions =\u003e iprestrictions.ips);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\niprestrictions = ovh.CloudProjectDatabase.get_ip_restrictions(service_name=\"XXXXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZZ\")\npulumi.export(\"ips\", iprestrictions.ips)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var iprestrictions = Ovh.CloudProjectDatabase.GetIpRestrictions.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"ips\"] = iprestrictions.Apply(getIpRestrictionsResult =\u003e getIpRestrictionsResult.Ips),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tiprestrictions, err := CloudProjectDatabase.GetIpRestrictions(ctx, \u0026cloudprojectdatabase.GetIpRestrictionsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ips\", iprestrictions.Ips)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetIpRestrictionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var iprestrictions = CloudProjectDatabaseFunctions.getIpRestrictions(GetIpRestrictionsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZZ\")\n            .build());\n\n        ctx.export(\"ips\", iprestrictions.applyValue(getIpRestrictionsResult -\u003e getIpRestrictionsResult.ips()));\n    }\n}\n```\n```yaml\nvariables:\n  iprestrictions:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getIpRestrictions\n      Arguments:\n        serviceName: XXXXXX\n        engine: YYYY\n        clusterId: ZZZZ\noutputs:\n  ips: ${iprestrictions.ips}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpRestrictions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to list IP restrictions. To get a full list of available engine visit:\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpRestrictions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IP restriction of the database associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "ips",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaAcl:getKafkaAcl": {
            "description": "Use this data source to get information about an ACL of a kafka cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst acl = ovh.CloudProjectDatabase.getKafkaAcl({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    id: \"ZZZ\",\n});\nexport const aclPermission = acl.then(acl =\u003e acl.permission);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nacl = ovh.CloudProjectDatabase.get_kafka_acl(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    id=\"ZZZ\")\npulumi.export(\"aclPermission\", acl.permission)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var acl = Ovh.CloudProjectDatabase.GetKafkaAcl.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Id = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"aclPermission\"] = acl.Apply(getKafkaAclResult =\u003e getKafkaAclResult.Permission),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tacl, err := CloudProjectDatabase.GetKafkaAcl(ctx, \u0026cloudprojectdatabase.GetKafkaAclArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"aclPermission\", acl.Permission)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var acl = CloudProjectDatabaseFunctions.getKafkaAcl(GetKafkaAclArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .id(\"ZZZ\")\n            .build());\n\n        ctx.export(\"aclPermission\", acl.applyValue(getKafkaAclResult -\u003e getKafkaAclResult.permission()));\n    }\n}\n```\n```yaml\nvariables:\n  acl:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getKafkaAcl\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        id: ZZZ\noutputs:\n  aclPermission: ${acl.permission}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaAcl.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ACL ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaAcl.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Permission to give to this username on this topic.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic affected by this ACL.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username affected by this ACL.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "permission",
                    "serviceName",
                    "topic",
                    "username"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaAcls:getKafkaAcls": {
            "description": "Use this data source to get the list of ACLs of a kafka cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst acls = ovh.CloudProjectDatabase.getKafkaAcls({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n});\nexport const aclIds = acls.then(acls =\u003e acls.aclIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nacls = ovh.CloudProjectDatabase.get_kafka_acls(service_name=\"XXX\",\n    cluster_id=\"YYY\")\npulumi.export(\"aclIds\", acls.acl_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var acls = Ovh.CloudProjectDatabase.GetKafkaAcls.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"aclIds\"] = acls.Apply(getKafkaAclsResult =\u003e getKafkaAclsResult.AclIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tacls, err := CloudProjectDatabase.GetKafkaAcls(ctx, \u0026cloudprojectdatabase.GetKafkaAclsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"aclIds\", acls.AclIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaAclsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var acls = CloudProjectDatabaseFunctions.getKafkaAcls(GetKafkaAclsArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .build());\n\n        ctx.export(\"aclIds\", acls.applyValue(getKafkaAclsResult -\u003e getKafkaAclsResult.aclIds()));\n    }\n}\n```\n```yaml\nvariables:\n  acls:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getKafkaAcls\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\noutputs:\n  aclIds: ${acls.aclIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaAcls.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaAcls.\n",
                "properties": {
                    "aclIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of ACLs ids of the kafka cluster associated with the project.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "aclIds",
                    "clusterId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaTopic:getKafkaTopic": {
            "description": "Use this data source to get information about a topic of a kafka cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst topic = ovh.CloudProjectDatabase.getKafkaTopic({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    id: \"ZZZ\",\n});\nexport const topicName = topic.then(topic =\u003e topic.name);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntopic = ovh.CloudProjectDatabase.get_kafka_topic(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    id=\"ZZZ\")\npulumi.export(\"topicName\", topic.name)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var topic = Ovh.CloudProjectDatabase.GetKafkaTopic.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Id = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"topicName\"] = topic.Apply(getKafkaTopicResult =\u003e getKafkaTopicResult.Name),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttopic, err := CloudProjectDatabase.GetKafkaTopic(ctx, \u0026cloudprojectdatabase.GetKafkaTopicArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"topicName\", topic.Name)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaTopicArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var topic = CloudProjectDatabaseFunctions.getKafkaTopic(GetKafkaTopicArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .id(\"ZZZ\")\n            .build());\n\n        ctx.export(\"topicName\", topic.applyValue(getKafkaTopicResult -\u003e getKafkaTopicResult.name()));\n    }\n}\n```\n```yaml\nvariables:\n  topic:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getKafkaTopic\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        id: ZZZ\noutputs:\n  topicName: ${topic.name}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaTopic.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Topic ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaTopic.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "minInsyncReplicas": {
                        "type": "integer",
                        "description": "Minimum insync replica accepted for this topic.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the topic.\n"
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "Number of partitions for this topic.\n"
                    },
                    "replication": {
                        "type": "integer",
                        "description": "Number of replication for this topic.\n"
                    },
                    "retentionBytes": {
                        "type": "integer",
                        "description": "Number of bytes for the retention of the data for this topic. Inferior to 0 mean Unlimited\n"
                    },
                    "retentionHours": {
                        "type": "integer",
                        "description": "Number of hours for the retention of the data for this topic. Inferior to 0 mean Unlimited\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "minInsyncReplicas",
                    "name",
                    "partitions",
                    "replication",
                    "retentionBytes",
                    "retentionHours",
                    "serviceName"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaTopics:getKafkaTopics": {
            "description": "Use this data source to get the list of topics of a kafka cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst topics = ovh.CloudProjectDatabase.getKafkaTopics({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n});\nexport const topicIds = topics.then(topics =\u003e topics.topicIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntopics = ovh.CloudProjectDatabase.get_kafka_topics(service_name=\"XXX\",\n    cluster_id=\"YYY\")\npulumi.export(\"topicIds\", topics.topic_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var topics = Ovh.CloudProjectDatabase.GetKafkaTopics.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"topicIds\"] = topics.Apply(getKafkaTopicsResult =\u003e getKafkaTopicsResult.TopicIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttopics, err := CloudProjectDatabase.GetKafkaTopics(ctx, \u0026cloudprojectdatabase.GetKafkaTopicsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"topicIds\", topics.TopicIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaTopicsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var topics = CloudProjectDatabaseFunctions.getKafkaTopics(GetKafkaTopicsArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .build());\n\n        ctx.export(\"topicIds\", topics.applyValue(getKafkaTopicsResult -\u003e getKafkaTopicsResult.topicIds()));\n    }\n}\n```\n```yaml\nvariables:\n  topics:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getKafkaTopics\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\noutputs:\n  topicIds: ${topics.topicIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaTopics.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaTopics.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "topicIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of topics ids of the kafka cluster associated with the project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName",
                    "topicIds",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaUserAccess:getKafkaUserAccess": {
            "description": "Use this data source to get information about user acces of a kafka cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst access = ovh.CloudProjectDatabase.getKafkaUserAccess({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    userId: \"ZZZ\",\n});\nexport const accessCert = access.then(access =\u003e access.cert);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\naccess = ovh.CloudProjectDatabase.get_kafka_user_access(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    user_id=\"ZZZ\")\npulumi.export(\"accessCert\", access.cert)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var access = Ovh.CloudProjectDatabase.GetKafkaUserAccess.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        UserId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"accessCert\"] = access.Apply(getKafkaUserAccessResult =\u003e getKafkaUserAccessResult.Cert),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\taccess, err := CloudProjectDatabase.GetKafkaUserAccess(ctx, \u0026cloudprojectdatabase.GetKafkaUserAccessArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tUserId:      \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"accessCert\", access.Cert)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaUserAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var access = CloudProjectDatabaseFunctions.getKafkaUserAccess(GetKafkaUserAccessArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .userId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"accessCert\", access.applyValue(getKafkaUserAccessResult -\u003e getKafkaUserAccessResult.cert()));\n    }\n}\n```\n```yaml\nvariables:\n  access:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getKafkaUserAccess\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        userId: ZZZ\noutputs:\n  accessCert: ${access.cert}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaUserAccess.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "User ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaUserAccess.\n",
                "properties": {
                    "cert": {
                        "type": "string",
                        "description": "User cert.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "(Sensitive) User key for the cert.\n",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cert",
                    "clusterId",
                    "key",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getPostgresSqlUser:getPostgresSqlUser": {
            "description": "Use this data source to get information about a user of a postgresql cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst pguser = ovh.CloudProjectDatabase.getPostgresSqlUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const pguserRoles = pguser.then(pguser =\u003e pguser.roles);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npguser = ovh.CloudProjectDatabase.get_postgres_sql_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"pguserRoles\", pguser.roles)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pguser = Ovh.CloudProjectDatabase.GetPostgresSqlUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"pguserRoles\"] = pguser.Apply(getPostgresSqlUserResult =\u003e getPostgresSqlUserResult.Roles),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpguser, err := CloudProjectDatabase.GetPostgresSqlUser(ctx, \u0026cloudprojectdatabase.GetPostgresSqlUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"pguserRoles\", pguser.Roles)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetPostgresSqlUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var pguser = CloudProjectDatabaseFunctions.getPostgresSqlUser(GetPostgresSqlUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"pguserRoles\", pguser.applyValue(getPostgresSqlUserResult -\u003e getPostgresSqlUserResult.roles()));\n    }\n}\n```\n```yaml\nvariables:\n  pguser:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getPostgresSqlUser\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  pguserRoles: ${pguser.roles}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPostgresSqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPostgresSqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "name",
                    "roles",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getUser:getUser": {
            "description": "Use this data source to get information about a user of a database cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst user = ovh.CloudProjectDatabase.getUser({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n    name: \"UUU\",\n});\nexport const userName = user.then(user =\u003e user.name);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser = ovh.CloudProjectDatabase.get_user(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\",\n    name=\"UUU\")\npulumi.export(\"userName\", user.name)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Ovh.CloudProjectDatabase.GetUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n        Name = \"UUU\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"userName\"] = user.Apply(getUserResult =\u003e getUserResult.Name),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser, err := CloudProjectDatabase.GetUser(ctx, \u0026cloudprojectdatabase.GetUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t\tName:        \"UUU\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"userName\", user.Name)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = CloudProjectDatabaseFunctions.getUser(GetUserArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .name(\"UUU\")\n            .build());\n\n        ctx.export(\"userName\", user.applyValue(getUserResult -\u003e getUserResult.name()));\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getUser\n      Arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\n        name: UUU\noutputs:\n  userName: ${user.name}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want user information. To get a full list of available engine visit :\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `cassandra`\n* `kafka`\n* `kafkaConnect`\n* `mysql`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "engine",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getUsers:getUsers": {
            "description": "Use this data source to get the list of users of a database cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst users = ovh.CloudProjectDatabase.getUsers({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZ\",\n});\nexport const userIds = users.then(users =\u003e users.userIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nusers = ovh.CloudProjectDatabase.get_users(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"userIds\", users.user_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var users = Ovh.CloudProjectDatabase.GetUsers.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"userIds\"] = users.Apply(getUsersResult =\u003e getUsersResult.UserIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/CloudProjectDatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tusers, err := CloudProjectDatabase.GetUsers(ctx, \u0026cloudprojectdatabase.GetUsersArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"userIds\", users.UserIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var users = CloudProjectDatabaseFunctions.getUsers(GetUsersArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"userIds\", users.applyValue(getUsersResult -\u003e getUsersResult.userIds()));\n    }\n}\n```\n```yaml\nvariables:\n  users:\n    fn::invoke:\n      Function: ovh:CloudProjectDatabase:getUsers\n      Arguments:\n        serviceName: XXXX\n        engine: YYYY\n        clusterId: ZZZ\noutputs:\n  userIds: ${users.userIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to list users. To get a full list of available engine visit:\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\nAvailable engines:\n* `cassandra`\n* `kafka`\n* `kafkaConnect`\n* `mysql`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of users ids of the database cluster associated with the project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName",
                    "userIds",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsInputEngine:getLogsInputEngine": {
            "description": "Use this data source to retrieve information about a DBaas logs input engine.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst logstash = pulumi.output(ovh.Dbaas.getLogsInputEngine({\n    isDeprecated: true,\n    name: \"logstash\",\n    serviceName: \"ldp-xx-xxxxx\",\n    version: \"6.8\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlogstash = ovh.Dbaas.get_logs_input_engine(is_deprecated=True,\n    name=\"logstash\",\n    service_name=\"ldp-xx-xxxxx\",\n    version=\"6.8\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var logstash = Ovh.Dbaas.GetLogsInputEngine.Invoke(new()\n    {\n        IsDeprecated = true,\n        Name = \"logstash\",\n        ServiceName = \"ldp-xx-xxxxx\",\n        Version = \"6.8\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Dbaas.GetLogsInputEngine(ctx, \u0026dbaas.GetLogsInputEngineArgs{\n\t\t\tIsDeprecated: pulumi.BoolRef(true),\n\t\t\tName:         pulumi.StringRef(\"logstash\"),\n\t\t\tServiceName:  \"ldp-xx-xxxxx\",\n\t\t\tVersion:      pulumi.StringRef(\"6.8\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsInputEngineArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var logstash = DbaasFunctions.getLogsInputEngine(GetLogsInputEngineArgs.builder()\n            .isDeprecated(true)\n            .name(\"logstash\")\n            .serviceName(\"ldp-xx-xxxxx\")\n            .version(\"6.8\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  logstash:\n    fn::invoke:\n      Function: ovh:Dbaas:getLogsInputEngine\n      Arguments:\n        isDeprecated: true\n        name: logstash\n        serviceName: ldp-xx-xxxxx\n        version: '6.8'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLogsInputEngine.\n",
                "properties": {
                    "isDeprecated": {
                        "type": "boolean",
                        "description": "Indicates if engine will soon not be supported.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the logs input engine.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name. It's the ID of your Logs Data Platform instance.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Software version\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsInputEngine.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isDeprecated": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "isDeprecated",
                    "name",
                    "serviceName",
                    "version",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsOutputGraylogStream:getLogsOutputGraylogStream": {
            "description": "Use this data source to retrieve information about a DBaas logs output graylog stream.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst stream = pulumi.output(ovh.Dbaas.getLogsOutputGraylogStream({\n    serviceName: \"ldp-xx-xxxxx\",\n    title: \"my stream\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nstream = ovh.Dbaas.get_logs_output_graylog_stream(service_name=\"ldp-xx-xxxxx\",\n    title=\"my stream\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var stream = Ovh.Dbaas.GetLogsOutputGraylogStream.Invoke(new()\n    {\n        ServiceName = \"ldp-xx-xxxxx\",\n        Title = \"my stream\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Dbaas.GetLogsOutputGraylogStream(ctx, \u0026dbaas.GetLogsOutputGraylogStreamArgs{\n\t\t\tServiceName: \"ldp-xx-xxxxx\",\n\t\t\tTitle:       \"my stream\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsOutputGraylogStreamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var stream = DbaasFunctions.getLogsOutputGraylogStream(GetLogsOutputGraylogStreamArgs.builder()\n            .serviceName(\"ldp-xx-xxxxx\")\n            .title(\"my stream\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  stream:\n    fn::invoke:\n      Function: ovh:Dbaas:getLogsOutputGraylogStream\n      Arguments:\n        serviceName: ldp-xx-xxxxx\n        title: my stream\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getLogsOutputGraylogStream.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service name. It's the ID of your Logs Data Platform instance.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Stream description\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "title"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsOutputGraylogStream.\n",
                "properties": {
                    "canAlert": {
                        "type": "boolean"
                    },
                    "coldStorageCompression": {
                        "type": "string",
                        "description": "Cold storage compression method\n"
                    },
                    "coldStorageContent": {
                        "type": "string",
                        "description": "ColdStorage content\n"
                    },
                    "coldStorageEnabled": {
                        "type": "boolean",
                        "description": "Is Cold storage enabled?\n"
                    },
                    "coldStorageNotifyEnabled": {
                        "type": "boolean",
                        "description": "Notify on new Cold storage archive\n"
                    },
                    "coldStorageRetention": {
                        "type": "integer",
                        "description": "Cold storage retention in year\n"
                    },
                    "coldStorageTarget": {
                        "type": "string",
                        "description": "ColdStorage destination\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Stream creation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "indexingEnabled": {
                        "type": "boolean",
                        "description": "Enable ES indexing\n"
                    },
                    "indexingMaxSize": {
                        "type": "integer",
                        "description": "Maximum indexing size (in GB)\n"
                    },
                    "indexingNotifyEnabled": {
                        "type": "boolean",
                        "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "isShareable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to share entry\n"
                    },
                    "nbAlertCondition": {
                        "type": "integer",
                        "description": "Number of alert condition\n"
                    },
                    "nbArchive": {
                        "type": "integer",
                        "description": "Number of coldstored archives\n"
                    },
                    "parentStreamId": {
                        "type": "string",
                        "description": "Parent stream ID\n"
                    },
                    "pauseIndexingOnMaxSize": {
                        "type": "boolean",
                        "description": "If set, pause indexing when maximum size is reach\n"
                    },
                    "retentionId": {
                        "type": "string",
                        "description": "Retention ID\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Stream ID\n"
                    },
                    "title": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Stream last update\n"
                    },
                    "webSocketEnabled": {
                        "type": "boolean",
                        "description": "Enable Websocket\n"
                    }
                },
                "type": "object",
                "required": [
                    "canAlert",
                    "coldStorageCompression",
                    "coldStorageContent",
                    "coldStorageEnabled",
                    "coldStorageNotifyEnabled",
                    "coldStorageRetention",
                    "coldStorageTarget",
                    "createdAt",
                    "description",
                    "indexingEnabled",
                    "indexingMaxSize",
                    "indexingNotifyEnabled",
                    "isEditable",
                    "isShareable",
                    "nbAlertCondition",
                    "nbArchive",
                    "parentStreamId",
                    "pauseIndexingOnMaxSize",
                    "retentionId",
                    "serviceName",
                    "streamId",
                    "title",
                    "updatedAt",
                    "webSocketEnabled",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getCeph:getCeph": {
            "description": "Use this data source to retrieve information about a dedicated CEPH. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst my_ceph = pulumi.output(ovh.Dedicated.getCeph({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_ceph = ovh.Dedicated.get_ceph(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var my_ceph = Ovh.Dedicated.GetCeph.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Dedicated.GetCeph(ctx, \u0026dedicated.GetCephArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetCephArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var my-ceph = DedicatedFunctions.getCeph(GetCephArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  my-ceph:\n    fn::invoke:\n      Function: ovh:Dedicated:getCeph\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCeph.\n",
                "properties": {
                    "cephVersion": {
                        "type": "string",
                        "description": "CEPH cluster version\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name of the dedicated CEPH cluster.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the service\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCeph.\n",
                "properties": {
                    "cephMons": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of CEPH monitors IPs\n"
                    },
                    "cephVersion": {
                        "type": "string",
                        "description": "CEPH cluster version\n"
                    },
                    "crushTunables": {
                        "type": "string",
                        "description": "CRUSH algorithm settings. Possible values\n* OPTIMAL\n* DEFAULT\n* LEGACY\n* BOBTAIL\n* ARGONAUT\n* FIREFLY\n* HAMMER\n* JEWEL\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "CEPH cluster label\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "cluster region\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number",
                        "description": "Cluster size in TB\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "the state of the cluster\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the service\n"
                    }
                },
                "type": "object",
                "required": [
                    "cephMons",
                    "cephVersion",
                    "crushTunables",
                    "label",
                    "region",
                    "serviceName",
                    "size",
                    "state",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getNasHA:getNasHA": {
            "description": "Use this data source to retrieve information about a dedicated HA-NAS.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst my_nas_ha = pulumi.output(ovh.Dedicated.getNasHA({\n    serviceName: \"zpool-12345\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_nas_ha = ovh.Dedicated.get_nas_ha(service_name=\"zpool-12345\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var my_nas_ha = Ovh.Dedicated.GetNasHA.Invoke(new()\n    {\n        ServiceName = \"zpool-12345\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Dedicated.GetNasHA(ctx, \u0026dedicated.GetNasHAArgs{\n\t\t\tServiceName: \"zpool-12345\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetNasHAArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var my-nas-ha = DedicatedFunctions.getNasHA(GetNasHAArgs.builder()\n            .serviceName(\"zpool-12345\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  my-nas-ha:\n    fn::invoke:\n      Function: ovh:Dedicated:getNasHA\n      Arguments:\n        serviceName: zpool-12345\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNasHA.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated HA-NAS.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNasHA.\n",
                "properties": {
                    "canCreatePartition": {
                        "type": "boolean",
                        "description": "True, if partition creation is allowed on this HA-NAS\n"
                    },
                    "customName": {
                        "type": "string",
                        "description": "The name you give to the HA-NAS\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "area of HA-NAS\n"
                    },
                    "diskType": {
                        "type": "string",
                        "description": "the disk type of the HA-NAS. Possible values are: `hdd`, `ssd`, `nvme`\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Access IP of HA-NAS\n"
                    },
                    "monitored": {
                        "type": "boolean",
                        "description": "Send an email to customer if any issue is detected\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The storage service name\n"
                    },
                    "zpoolCapacity": {
                        "type": "number",
                        "description": "percentage of HA-NAS space used in %\n"
                    },
                    "zpoolSize": {
                        "type": "number",
                        "description": "the size of the HA-NAS in GB\n"
                    }
                },
                "type": "object",
                "required": [
                    "canCreatePartition",
                    "customName",
                    "datacenter",
                    "diskType",
                    "ip",
                    "monitored",
                    "serviceName",
                    "zpoolCapacity",
                    "zpoolSize",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getServerBoots:getServerBoots": {
            "description": "Use this data source to get the list of compatible netboots for a dedicated server associated with your OVHcloud Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst netboots = pulumi.output(ovh.Dedicated.getServerBoots({\n    bootType: \"harddisk\",\n    serviceName: \"myserver\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnetboots = ovh.Dedicated.get_server_boots(boot_type=\"harddisk\",\n    service_name=\"myserver\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var netboots = Ovh.Dedicated.GetServerBoots.Invoke(new()\n    {\n        BootType = \"harddisk\",\n        ServiceName = \"myserver\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Dedicated.GetServerBoots(ctx, \u0026dedicated.GetServerBootsArgs{\n\t\t\tBootType:    pulumi.StringRef(\"harddisk\"),\n\t\t\tServiceName: \"myserver\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetServerBootsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var netboots = DedicatedFunctions.getServerBoots(GetServerBootsArgs.builder()\n            .bootType(\"harddisk\")\n            .serviceName(\"myserver\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  netboots:\n    fn::invoke:\n      Function: ovh:Dedicated:getServerBoots\n      Arguments:\n        bootType: harddisk\n        serviceName: myserver\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServerBoots.\n",
                "properties": {
                    "bootType": {
                        "type": "string",
                        "description": "Filter the value of bootType property (harddisk, rescue, ipxeCustomerScript, internal, network)\n"
                    },
                    "kernel": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerBoots.\n",
                "properties": {
                    "bootType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kernel": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dedicated server netboots.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:Domain/getZone:getZone": {
            "description": "Use this data source to retrieve information about a domain zone.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rootzone = pulumi.output(ovh.Domain.getZone({\n    name: \"mysite.ovh\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nrootzone = ovh.Domain.get_zone(name=\"mysite.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rootzone = Ovh.Domain.GetZone.Invoke(new()\n    {\n        Name = \"mysite.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Domain.GetZone(ctx, \u0026domain.GetZoneArgs{\n\t\t\tName: \"mysite.ovh\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.DomainFunctions;\nimport com.pulumi.ovh.Domain.inputs.GetZoneArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rootzone = DomainFunctions.getZone(GetZoneArgs.builder()\n            .name(\"mysite.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  rootzone:\n    fn::invoke:\n      Function: ovh:Domain:getZone\n      Arguments:\n        name: mysite.ovh\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getZone.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the domain zone.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZone.\n",
                "properties": {
                    "dnssecSupported": {
                        "type": "boolean",
                        "description": "Is DNSSEC supported by this zone\n"
                    },
                    "hasDnsAnycast": {
                        "type": "boolean",
                        "description": "hasDnsAnycast flag of the DNS zone\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update date of the DNS zone\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name servers that host the DNS zone\n"
                    }
                },
                "type": "object",
                "required": [
                    "dnssecSupported",
                    "hasDnsAnycast",
                    "lastUpdate",
                    "name",
                    "nameServers",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabase:getPrivateDatabase": {
            "description": "Use this data source to retrieve information about an hosting database.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst database = pulumi.output(ovh.Hosting.getPrivateDatabase({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndatabase = ovh.Hosting.get_private_database(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var database = Ovh.Hosting.GetPrivateDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Hosting.GetPrivateDatabase(ctx, \u0026hosting.GetPrivateDatabaseArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.HostingFunctions;\nimport com.pulumi.ovh.Hosting.inputs.GetPrivateDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var database = HostingFunctions.getPrivateDatabase(GetPrivateDatabaseArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  database:\n    fn::invoke:\n      Function: ovh:Hosting:getPrivateDatabase\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabase.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabase.\n",
                "properties": {
                    "cpu": {
                        "type": "integer",
                        "description": "Number of CPU on your private database\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "Datacenter where this private database is located\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name displayed in customer panel for your private database\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Private database hostname\n"
                    },
                    "hostnameFtp": {
                        "type": "string",
                        "description": "Private database FTP hostname\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "infrastructure": {
                        "type": "string",
                        "description": "Infrastructure where service was stored\n"
                    },
                    "offer": {
                        "type": "string",
                        "description": "Type of the private database offer\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Private database service port\n"
                    },
                    "portFtp": {
                        "type": "integer",
                        "description": "Private database FTP port\n"
                    },
                    "quotaSize": {
                        "type": "integer",
                        "description": "Space allowed (in MB) on your private database\n"
                    },
                    "quotaUsed": {
                        "type": "integer",
                        "description": "Sapce used (in MB) on your private database\n"
                    },
                    "ram": {
                        "type": "integer",
                        "description": "Amount of ram (in MB) on your private database\n"
                    },
                    "server": {
                        "type": "string",
                        "description": "Private database server name\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "Private database state\n"
                    },
                    "type": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string",
                        "description": "Private database available versions\n"
                    },
                    "versionLabel": {
                        "type": "string",
                        "description": "Private database version label\n"
                    },
                    "versionNumber": {
                        "type": "number",
                        "description": "Private database version number\n"
                    }
                },
                "type": "object",
                "required": [
                    "cpu",
                    "datacenter",
                    "displayName",
                    "hostname",
                    "hostnameFtp",
                    "infrastructure",
                    "offer",
                    "port",
                    "portFtp",
                    "quotaSize",
                    "quotaUsed",
                    "ram",
                    "server",
                    "serviceName",
                    "state",
                    "type",
                    "version",
                    "versionLabel",
                    "versionNumber",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseAllowlist:getPrivateDatabaseAllowlist": {
            "description": "Use this data source to retrieve information about an hosting privatedatabase whitelist.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst whitelist = pulumi.output(ovh.Hosting.getPrivateDatabaseAllowlist({\n    ip: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nwhitelist = ovh.Hosting.get_private_database_allowlist(ip=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var whitelist = Ovh.Hosting.GetPrivateDatabaseAllowlist.Invoke(new()\n    {\n        Ip = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Hosting.GetPrivateDatabaseAllowlist(ctx, \u0026hosting.GetPrivateDatabaseAllowlistArgs{\n\t\t\tIp:          pulumi.StringRef(\"XXXXXX\"),\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.HostingFunctions;\nimport com.pulumi.ovh.Hosting.inputs.GetPrivateDatabaseAllowlistArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var whitelist = HostingFunctions.getPrivateDatabaseAllowlist(GetPrivateDatabaseAllowlistArgs.builder()\n            .ip(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  whitelist:\n    fn::invoke:\n      Function: ovh:Hosting:getPrivateDatabaseAllowlist\n      Arguments:\n        ip: XXXXXX\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseAllowlist.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The whitelisted IP in your instance\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseAllowlist.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the database\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "The last update date of this whitelist\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom name for your Whitelisted IP\n"
                    },
                    "service": {
                        "type": "boolean",
                        "description": "Authorize this IP to access service port\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sftp": {
                        "type": "boolean",
                        "description": "Authorize this IP to access SFTP port\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Whitelist status\n"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "lastUpdate",
                    "name",
                    "service",
                    "serviceName",
                    "sftp",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseDb:getPrivateDatabaseDb": {
            "description": "Use this data source to retrieve information about an hosting privatedatabase.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mydatabase = pulumi.output(ovh.Hosting.getPrivateDatabaseDb({\n    databaseName: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmydatabase = ovh.Hosting.get_private_database_db(database_name=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mydatabase = Ovh.Hosting.GetPrivateDatabaseDb.Invoke(new()\n    {\n        DatabaseName = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Hosting.GetPrivateDatabaseDb(ctx, \u0026hosting.GetPrivateDatabaseDbArgs{\n\t\t\tDatabaseName: \"XXXXXX\",\n\t\t\tServiceName:  \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.HostingFunctions;\nimport com.pulumi.ovh.Hosting.inputs.GetPrivateDatabaseDbArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mydatabase = HostingFunctions.getPrivateDatabaseDb(GetPrivateDatabaseDbArgs.builder()\n            .databaseName(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mydatabase:\n    fn::invoke:\n      Function: ovh:Hosting:getPrivateDatabaseDb\n      Arguments:\n        databaseName: XXXXXX\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseDb.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Database name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseDb.\n",
                "properties": {
                    "backupTime": {
                        "type": "string",
                        "description": "Time of the next backup (every day)\n"
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the database\n"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "quotaUsed": {
                        "type": "integer",
                        "description": "Space used by the database (in MB)\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/getPrivateDatabaseDbUser:getPrivateDatabaseDbUser"
                        },
                        "description": "Users granted to this database\n"
                    }
                },
                "type": "object",
                "required": [
                    "backupTime",
                    "creationDate",
                    "databaseName",
                    "quotaUsed",
                    "serviceName",
                    "users",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseUser:getPrivateDatabaseUser": {
            "description": "Use this data source to retrieve information about an hosting privatedatabase user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst user = pulumi.output(ovh.Hosting.getPrivateDatabaseUser({\n    serviceName: \"XXXXXX\",\n    userName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser = ovh.Hosting.get_private_database_user(service_name=\"XXXXXX\",\n    user_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Ovh.Hosting.GetPrivateDatabaseUser.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        UserName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Hosting.GetPrivateDatabaseUser(ctx, \u0026hosting.GetPrivateDatabaseUserArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tUserName:    \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.HostingFunctions;\nimport com.pulumi.ovh.Hosting.inputs.GetPrivateDatabaseUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = HostingFunctions.getPrivateDatabaseUser(GetPrivateDatabaseUserArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .userName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      Function: ovh:Hosting:getPrivateDatabaseUser\n      Arguments:\n        serviceName: XXXXXX\n        userName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseUser.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseUser.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the database\n"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/getPrivateDatabaseUserDatabase:getPrivateDatabaseUserDatabase"
                        },
                        "description": "Users granted to this database\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "databases",
                    "serviceName",
                    "userName",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseUserGrant:getPrivateDatabaseUserGrant": {
            "description": "Use this data source to retrieve information about an hosting privatedatabase user grant.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst userGrant = pulumi.output(ovh.Hosting.getPrivateDatabaseUserGrant({\n    databaseName: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n    userName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser_grant = ovh.Hosting.get_private_database_user_grant(database_name=\"XXXXXX\",\n    service_name=\"XXXXXX\",\n    user_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var userGrant = Ovh.Hosting.GetPrivateDatabaseUserGrant.Invoke(new()\n    {\n        DatabaseName = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n        UserName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Hosting.GetPrivateDatabaseUserGrant(ctx, \u0026hosting.GetPrivateDatabaseUserGrantArgs{\n\t\t\tDatabaseName: \"XXXXXX\",\n\t\t\tServiceName:  \"XXXXXX\",\n\t\t\tUserName:     \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.HostingFunctions;\nimport com.pulumi.ovh.Hosting.inputs.GetPrivateDatabaseUserGrantArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var userGrant = HostingFunctions.getPrivateDatabaseUserGrant(GetPrivateDatabaseUserGrantArgs.builder()\n            .databaseName(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .userName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  userGrant:\n    fn::invoke:\n      Function: ovh:Hosting:getPrivateDatabaseUserGrant\n      Arguments:\n        databaseName: XXXXXX\n        serviceName: XXXXXX\n        userName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseUserGrant.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The database name on which grant the user\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The user name\n"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "serviceName",
                    "userName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseUserGrant.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the database\n"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "grant": {
                        "type": "string",
                        "description": "Grant name\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "databaseName",
                    "grant",
                    "serviceName",
                    "userName",
                    "id"
                ]
            }
        },
        "ovh:Ip/getService:getService": {
            "description": "Use this data source to retrieve information about an IP service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myip = pulumi.output(ovh.Ip.getService({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmyip = ovh.Ip.get_service(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myip = Ovh.Ip.GetService.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Ip.GetService(ctx, \u0026ip.GetServiceArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.IpFunctions;\nimport com.pulumi.ovh.Ip.inputs.GetServiceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myip = IpFunctions.getService(GetServiceArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myip:\n    fn::invoke:\n      Function: ovh:Ip:getService\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "canBeTerminated": {
                        "type": "boolean",
                        "description": "can be terminated\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "country\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Custom description on your ip\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "ip block\n"
                    },
                    "organisationId": {
                        "type": "string",
                        "description": "IP block organisation Id\n"
                    },
                    "routedTos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/getServiceRoutedTo:getServiceRoutedTo"
                        },
                        "description": "Routage information\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service where ip is routed to\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible values for ip type (    \"cdn\", \"cloud\", \"dedicated\", \"failover\", \"hosted_ssl\", \"housing\", \"loadBalancing\", \"mail\", \"overthebox\", \"pcc\", \"pci\", \"private\", \"vpn\", \"vps\", \"vrack\", \"xdsl\")\n"
                    }
                },
                "type": "object",
                "required": [
                    "canBeTerminated",
                    "country",
                    "description",
                    "ip",
                    "organisationId",
                    "routedTos",
                    "serviceName",
                    "type",
                    "id"
                ]
            }
        },
        "ovh:IpLoadBalancing/getIpLoadBalancing:getIpLoadBalancing": {
            "description": "Use this data source to retrieve information about an IP Load Balancing product\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"XXXXXX\",\n    state: \"ok\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"XXXXXX\",\n    state=\"ok\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        State = \"ok\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = IpLoadBalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"XXXXXX\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .state(\"ok\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  lb:\n    fn::invoke:\n      Function: ovh:IpLoadBalancing:getIpLoadBalancing\n      Arguments:\n        serviceName: XXXXXX\n        state: ok\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpLoadBalancing.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string",
                        "description": "Your IP load balancing\n"
                    },
                    "ipv4": {
                        "type": "string",
                        "description": "The IPV4 associated to your IP load balancing\n"
                    },
                    "ipv6": {
                        "type": "string",
                        "description": "The IPV6 associated to your IP load balancing\n"
                    },
                    "offer": {
                        "type": "string",
                        "description": "The offer of your IP load balancing\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "sslConfiguration": {
                        "type": "string",
                        "description": "Modern oldest compatible clients : Firefox 27, Chrome 30,\nIE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8.\nIntermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5,\nSafari 1, Windows XP IE8, Android 2.3, Java 7.\nCan take any of the following value: \"intermediate\", \"modern\"\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your IP. Can take any of the following value:\n\"blacklisted\", \"deleted\", \"free\", \"ok\", \"quarantined\", \"suspended\"\n"
                    },
                    "vrackEligibility": {
                        "type": "boolean",
                        "description": "Vrack eligibility. Takes a boolean value.\n"
                    },
                    "vrackName": {
                        "type": "string",
                        "description": "Name of the vRack on which the current Load Balancer is\nattached to, as it is named on vRack product\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Location where your service is. This takes an array of values.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIpLoadBalancing.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string"
                    },
                    "ipv4": {
                        "type": "string"
                    },
                    "ipv6": {
                        "type": "string"
                    },
                    "metricsToken": {
                        "type": "string",
                        "description": "The metrics token associated with your IP load balancing\nThis attribute is sensitive.\n",
                        "secret": true
                    },
                    "offer": {
                        "type": "string"
                    },
                    "orderableZones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/getIpLoadBalancingOrderableZone:getIpLoadBalancingOrderableZone"
                        },
                        "description": "Available additional zone for your Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sslConfiguration": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "vrackEligibility": {
                        "type": "boolean"
                    },
                    "vrackName": {
                        "type": "string"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "displayName",
                    "ipLoadbalancing",
                    "ipv4",
                    "ipv6",
                    "metricsToken",
                    "offer",
                    "orderableZones",
                    "serviceName",
                    "sslConfiguration",
                    "state",
                    "vrackEligibility",
                    "vrackName",
                    "zones",
                    "id"
                ]
            }
        },
        "ovh:IpLoadBalancing/getVrackNetwork:getVrackNetwork": {
            "description": "Use this data source to get the details of Vrack network available for your IPLoadbalancer associated with your OVHcloud account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lbNetwork = pulumi.output(ovh.IpLoadBalancing.getVrackNetwork({\n    serviceName: \"XXXXXX\",\n    vrackNetworkId: Number.parseFloat(\"yyy\"),\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb_network = ovh.IpLoadBalancing.get_vrack_network(service_name=\"XXXXXX\",\n    vrack_network_id=\"yyy\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lbNetwork = Ovh.IpLoadBalancing.GetVrackNetwork.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        VrackNetworkId = \"yyy\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/IpLoadBalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = IpLoadBalancing.GetVrackNetwork(ctx, \u0026iploadbalancing.GetVrackNetworkArgs{\n\t\t\tServiceName:    \"XXXXXX\",\n\t\t\tVrackNetworkId: \"yyy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetVrackNetworkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lbNetwork = IpLoadBalancingFunctions.getVrackNetwork(GetVrackNetworkArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .vrackNetworkId(\"yyy\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  lbNetwork:\n    fn::invoke:\n      Function: ovh:IpLoadBalancing:getVrackNetwork\n      Arguments:\n        serviceName: XXXXXX\n        vrackNetworkId: yyy\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVrackNetwork.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "vrackNetworkId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrackNetwork.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your vrack network\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "natIp": {
                        "type": "string",
                        "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "IP block of the private network in the vRack\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "displayName",
                    "natIp",
                    "serviceName",
                    "subnet",
                    "vlan",
                    "vrackNetworkId",
                    "id"
                ]
            }
        },
        "ovh:Me/getIdentityUser:getIdentityUser": {
            "description": "Use this data source to retrieve information about an identity user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myUser = pulumi.output(ovh.Me.getIdentityUser({\n    user: \"my_user_login\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_user = ovh.Me.get_identity_user(user=\"my_user_login\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myUser = Ovh.Me.GetIdentityUser.Invoke(new()\n    {\n        User = \"my_user_login\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Me.GetIdentityUser(ctx, \u0026me.GetIdentityUserArgs{\n\t\t\tUser: \"my_user_login\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetIdentityUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myUser = MeFunctions.getIdentityUser(GetIdentityUserArgs.builder()\n            .user(\"my_user_login\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myUser:\n    fn::invoke:\n      Function: ovh:Me:getIdentityUser\n      Arguments:\n        user: my_user_login\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityUser.\n",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "User's login.\n"
                    }
                },
                "type": "object",
                "required": [
                    "user"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityUser.\n",
                "properties": {
                    "creation": {
                        "type": "string",
                        "description": "Creation date of this user.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User description.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "User's group.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update of this user.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "User's login suffix.\n"
                    },
                    "passwordLastUpdate": {
                        "type": "string",
                        "description": "When the user changed his password for the last time.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current user's status.\n"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creation",
                    "description",
                    "email",
                    "group",
                    "lastUpdate",
                    "login",
                    "passwordLastUpdate",
                    "status",
                    "user",
                    "id"
                ]
            }
        },
        "ovh:Me/getIdentityUsers:getIdentityUsers": {
            "description": "Use this data source to retrieve list of user logins of the account's identity users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst users = pulumi.output(ovh.Me.getIdentityUsers());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getIdentityUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the user's logins of all the identity users.\n"
                    }
                },
                "type": "object",
                "required": [
                    "users",
                    "id"
                ]
            }
        },
        "ovh:Me/getInstallationTemplate:getInstallationTemplate": {
            "description": "Use this data source to get a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mytemplate = pulumi.output(ovh.Me.getInstallationTemplate({\n    templateName: \"mytemplate\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmytemplate = ovh.Me.get_installation_template(template_name=\"mytemplate\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytemplate = Ovh.Me.GetInstallationTemplate.Invoke(new()\n    {\n        TemplateName = \"mytemplate\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Me.GetInstallationTemplate(ctx, \u0026me.GetInstallationTemplateArgs{\n\t\t\tTemplateName: \"mytemplate\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetInstallationTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mytemplate = MeFunctions.getInstallationTemplate(GetInstallationTemplateArgs.builder()\n            .templateName(\"mytemplate\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mytemplate:\n    fn::invoke:\n      Function: ovh:Me:getInstallationTemplate\n      Arguments:\n        templateName: mytemplate\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getInstallationTemplate.\n",
                "properties": {
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstallationTemplate.\n",
                "properties": {
                    "availableLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "beta": {
                        "type": "boolean"
                    },
                    "bitFormat": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "string"
                    },
                    "customizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Me/getInstallationTemplateCustomization:getInstallationTemplateCustomization"
                        }
                    },
                    "defaultLanguage": {
                        "type": "string"
                    },
                    "deprecated": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "family": {
                        "type": "string"
                    },
                    "filesystems": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hardRaidConfiguration": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastModification": {
                        "type": "string"
                    },
                    "lvmReady": {
                        "type": "boolean"
                    },
                    "partitionSchemes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Me/getInstallationTemplatePartitionScheme:getInstallationTemplatePartitionScheme"
                        }
                    },
                    "supportsDistributionKernel": {
                        "type": "boolean"
                    },
                    "supportsRtm": {
                        "type": "boolean"
                    },
                    "supportsSqlServer": {
                        "type": "boolean"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "availableLanguages",
                    "beta",
                    "bitFormat",
                    "category",
                    "customizations",
                    "defaultLanguage",
                    "deprecated",
                    "description",
                    "distribution",
                    "family",
                    "filesystems",
                    "hardRaidConfiguration",
                    "lastModification",
                    "lvmReady",
                    "partitionSchemes",
                    "supportsDistributionKernel",
                    "supportsRtm",
                    "supportsSqlServer",
                    "templateName",
                    "id"
                ]
            }
        },
        "ovh:Me/getInstallationTemplates:getInstallationTemplates": {
            "description": "Use this data source to get the list of custom installation templates available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst templates = pulumi.output(ovh.Me.getInstallationTemplates());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getInstallationTemplates.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of custom installation templates IDs available for dedicated servers.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Me/getIpxeScript:getIpxeScript": {
            "description": "Use this data source to retrieve information about an IPXE Script.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst script = pulumi.output(ovh.Me.getIpxeScript({\n    name: \"myscript\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nscript = ovh.Me.get_ipxe_script(name=\"myscript\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var script = Ovh.Me.GetIpxeScript.Invoke(new()\n    {\n        Name = \"myscript\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Me.GetIpxeScript(ctx, \u0026me.GetIpxeScriptArgs{\n\t\t\tName: \"myscript\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetIpxeScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var script = MeFunctions.getIpxeScript(GetIpxeScriptArgs.builder()\n            .name(\"myscript\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  script:\n    fn::invoke:\n      Function: ovh:Me:getIpxeScript\n      Arguments:\n        name: myscript\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpxeScript.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the IPXE Script.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpxeScript.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "The content of the script.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "script",
                    "id"
                ]
            }
        },
        "ovh:Me/getIpxeScripts:getIpxeScripts": {
            "description": "Use this data source to retrieve a list of the names of the account's IPXE Scripts.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst scripts = pulumi.output(ovh.Me.getIpxeScripts());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getIpxeScripts.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the names of all the IPXE Scripts.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Me/getMe:getMe": {
            "description": "Use this data source to get information about the current OVHcloud account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myaccount = pulumi.output(ovh.Me.getMe());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getMe.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "area": {
                        "type": "string"
                    },
                    "birthCity": {
                        "type": "string"
                    },
                    "birthDay": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "companyNationalIdentificationNumber": {
                        "type": "string"
                    },
                    "corporationType": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "currencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Me/getMeCurrency:getMeCurrency"
                        }
                    },
                    "customerCode": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "fax": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "italianSdi": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "legalform": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nationalIdentificationNumber": {
                        "type": "string"
                    },
                    "nichandle": {
                        "type": "string"
                    },
                    "organisation": {
                        "type": "string"
                    },
                    "ovhCompany": {
                        "type": "string"
                    },
                    "ovhSubsidiary": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "phoneCountry": {
                        "type": "string"
                    },
                    "sex": {
                        "type": "string"
                    },
                    "spareEmail": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "vat": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "area",
                    "birthCity",
                    "birthDay",
                    "city",
                    "companyNationalIdentificationNumber",
                    "corporationType",
                    "country",
                    "currencies",
                    "customerCode",
                    "email",
                    "fax",
                    "firstname",
                    "italianSdi",
                    "language",
                    "legalform",
                    "name",
                    "nationalIdentificationNumber",
                    "nichandle",
                    "organisation",
                    "ovhCompany",
                    "ovhSubsidiary",
                    "phone",
                    "phoneCountry",
                    "sex",
                    "spareEmail",
                    "state",
                    "vat",
                    "zip",
                    "id"
                ]
            }
        },
        "ovh:Me/getPaymentmeanBankAccount:getPaymentmeanBankAccount": {
            "description": "Use this data source to retrieve information about a bank account\npayment mean associated with an OVHcloud account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst ba = pulumi.output(ovh.Me.getPaymentmeanBankAccount({\n    useDefault: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nba = ovh.Me.get_paymentmean_bank_account(use_default=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ba = Ovh.Me.GetPaymentmeanBankAccount.Invoke(new()\n    {\n        UseDefault = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Me.GetPaymentmeanBankAccount(ctx, \u0026me.GetPaymentmeanBankAccountArgs{\n\t\t\tUseDefault: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetPaymentmeanBankAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ba = MeFunctions.getPaymentmeanBankAccount(GetPaymentmeanBankAccountArgs.builder()\n            .useDefault(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  ba:\n    fn::invoke:\n      Function: ovh:Me:getPaymentmeanBankAccount\n      Arguments:\n        useDefault: true\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPaymentmeanBankAccount.\n",
                "properties": {
                    "descriptionRegexp": {
                        "type": "string",
                        "description": "a regexp used to filter bank accounts \non their `description` attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Filter bank accounts on their `state` attribute.\nCan be \"blockedForIncidents\", \"valid\", \"pendingValidation\"\n"
                    },
                    "useDefault": {
                        "type": "boolean",
                        "description": "Retrieve bank account marked as default payment mean.\n",
                        "willReplaceOnChanges": true
                    },
                    "useOldest": {
                        "type": "boolean",
                        "description": "Retrieve oldest bank account.\nproject.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPaymentmeanBankAccount.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "a boolean which tells if the retrieved bank account\nis marked as the default payment mean\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "the description attribute of the bank account\n"
                    },
                    "descriptionRegexp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "useDefault": {
                        "type": "boolean"
                    },
                    "useOldest": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "description",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:Me/getPaymentmeanCreditCard:getPaymentmeanCreditCard": {
            "description": "Use this data source to retrieve information about a credit card\npayment mean associated with an OVHcloud account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst cc = pulumi.output(ovh.Me.getPaymentmeanCreditCard({\n    useDefault: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncc = ovh.Me.get_paymentmean_credit_card(use_default=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cc = Ovh.Me.GetPaymentmeanCreditCard.Invoke(new()\n    {\n        UseDefault = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Me.GetPaymentmeanCreditCard(ctx, \u0026me.GetPaymentmeanCreditCardArgs{\n\t\t\tUseDefault: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetPaymentmeanCreditCardArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var cc = MeFunctions.getPaymentmeanCreditCard(GetPaymentmeanCreditCardArgs.builder()\n            .useDefault(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  cc:\n    fn::invoke:\n      Function: ovh:Me:getPaymentmeanCreditCard\n      Arguments:\n        useDefault: true\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPaymentmeanCreditCard.\n",
                "properties": {
                    "descriptionRegexp": {
                        "type": "string",
                        "description": "a regexp used to filter credit cards \non their `description` attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Filter credit cards on their `state` attribute.\nCan be \"expired\", \"valid\", \"tooManyFailures\"\n"
                    },
                    "useDefault": {
                        "type": "boolean",
                        "description": "Retrieve credit card marked as default payment mean.\n",
                        "willReplaceOnChanges": true
                    },
                    "useLastToExpire": {
                        "type": "boolean",
                        "description": "Retrieve the credit card that will be the last\nto expire according to its expiration date.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPaymentmeanCreditCard.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "a boolean which tells if the retrieved credit card\nis marked as the default payment mean\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "the description attribute of the credit card\n"
                    },
                    "descriptionRegexp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "the state attribute of the credit card\n"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "useDefault": {
                        "type": "boolean"
                    },
                    "useLastToExpire": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "description",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:Me/getSshKey:getSshKey": {
            "description": "Use this data source to retrieve information about an SSH key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mykey = pulumi.output(ovh.Me.getSshKey({\n    keyName: \"mykey\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmykey = ovh.Me.get_ssh_key(key_name=\"mykey\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mykey = Ovh.Me.GetSshKey.Invoke(new()\n    {\n        KeyName = \"mykey\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Me.GetSshKey(ctx, \u0026me.GetSshKeyArgs{\n\t\t\tKeyName: \"mykey\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetSshKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mykey = MeFunctions.getSshKey(GetSshKeyArgs.builder()\n            .keyName(\"mykey\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mykey:\n    fn::invoke:\n      Function: ovh:Me:getSshKey\n      Arguments:\n        keyName: mykey\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSshKey.\n",
                "properties": {
                    "keyName": {
                        "type": "string",
                        "description": "The name of the SSH key.\n"
                    }
                },
                "type": "object",
                "required": [
                    "keyName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSshKey.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The content of the public key.\nE.g.: \"ssh-ed25519 AAAAC3...\"\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "key",
                    "keyName",
                    "id"
                ]
            }
        },
        "ovh:Me/getSshKeys:getSshKeys": {
            "description": "Use this data source to retrieve list of names of the account's SSH keys.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mykeys = pulumi.output(ovh.Me.getSshKeys());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getSshKeys.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the names of all the SSH keys.\n"
                    }
                },
                "type": "object",
                "required": [
                    "names",
                    "id"
                ]
            }
        },
        "ovh:Order/getCart:getCart": {
            "description": "Use this data source to create a temporary order cart to retrieve information order cart products.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = pulumi.output(ovh.Order.getCart({\n    description: \"my cart\",\n    ovhSubsidiary: \"fr\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(description=\"my cart\",\n    ovh_subsidiary=\"fr\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        Description = \"my cart\",\n        OvhSubsidiary = \"fr\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .description(\"my cart\")\n            .ovhSubsidiary(\"fr\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        description: my cart\n        ovhSubsidiary: fr\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCart.\n",
                "properties": {
                    "assign": {
                        "type": "boolean",
                        "description": "Assign a shopping cart to an loggedin client. Values can be `true` or `false`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of your cart\n",
                        "willReplaceOnChanges": true
                    },
                    "expire": {
                        "type": "string",
                        "description": "Expiration time (format: 2006-01-02T15:04:05+00:00)\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "ovhSubsidiary"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCart.\n",
                "properties": {
                    "assign": {
                        "type": "boolean"
                    },
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "expire": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Items of your cart\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Indicates if the cart has already been validated\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "expire",
                    "items",
                    "ovhSubsidiary",
                    "readOnly",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProduct:getCartProduct": {
            "description": "Use this data source to retrieve information of order cart product products.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cart\",\n});\nconst plans = mycart.then(mycart =\u003e ovh.Order.getCartProduct({\n    cartId: mycart.id,\n    product: \"...\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\",\n    description=\"my cart\")\nplans = ovh.Order.get_cart_product(cart_id=mycart.id,\n    product=\"...\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cart\",\n    });\n\n    var plans = Ovh.Order.GetCartProduct.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        Product = \"...\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Order.GetCartProduct(ctx, \u0026order.GetCartProductArgs{\n\t\t\tCartId:  mycart.Id,\n\t\t\tProduct: \"...\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cart\")\n            .build());\n\n        final var plans = OrderFunctions.getCartProduct(GetCartProductArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .product(\"...\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cart\n  plans:\n    fn::invoke:\n      Function: ovh:Order:getCartProduct\n      Arguments:\n        cartId: ${mycart.id}\n        product: '...'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCartProduct.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProduct.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductResult:getCartProductResult"
                        },
                        "description": "products results\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "product",
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProductOptions:getCartProductOptions": {
            "description": "Use this data source to retrieve information of order cart product options.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cart\",\n});\nconst options = mycart.then(mycart =\u003e ovh.Order.getCartProductOptions({\n    cartId: mycart.id,\n    product: \"cloud\",\n    planCode: \"project\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\",\n    description=\"my cart\")\noptions = ovh.Order.get_cart_product_options(cart_id=mycart.id,\n    product=\"cloud\",\n    plan_code=\"project\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cart\",\n    });\n\n    var options = Ovh.Order.GetCartProductOptions.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        Product = \"cloud\",\n        PlanCode = \"project\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Order.GetCartProductOptions(ctx, \u0026order.GetCartProductOptionsArgs{\n\t\t\tCartId:   mycart.Id,\n\t\t\tProduct:  \"cloud\",\n\t\t\tPlanCode: \"project\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cart\")\n            .build());\n\n        final var options = OrderFunctions.getCartProductOptions(GetCartProductOptionsArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .product(\"cloud\")\n            .planCode(\"project\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cart\n  options:\n    fn::invoke:\n      Function: ovh:Order:getCartProductOptions\n      Arguments:\n        cartId: ${mycart.id}\n        product: cloud\n        planCode: project\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCartProductOptions.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "Catalog name\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProductOptions.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductOptionsResult:getCartProductOptionsResult"
                        },
                        "description": "products results\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "product",
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProductOptionsPlan:getCartProductOptionsPlan": {
            "description": "Use this data source to retrieve information of order cart product options plan.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cart\",\n});\nconst plan = mycart.then(mycart =\u003e ovh.Order.getCartProductOptionsPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"cloud\",\n    planCode: \"project\",\n    optionsPlanCode: \"vrack\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\",\n    description=\"my cart\")\nplan = ovh.Order.get_cart_product_options_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"cloud\",\n    plan_code=\"project\",\n    options_plan_code=\"vrack\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cart\",\n    });\n\n    var plan = Ovh.Order.GetCartProductOptionsPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"cloud\",\n        PlanCode = \"project\",\n        OptionsPlanCode = \"vrack\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Order.GetCartProductOptionsPlan(ctx, \u0026order.GetCartProductOptionsPlanArgs{\n\t\t\tCartId:          mycart.Id,\n\t\t\tPriceCapacity:   \"renew\",\n\t\t\tProduct:         \"cloud\",\n\t\t\tPlanCode:        \"project\",\n\t\t\tOptionsPlanCode: \"vrack\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductOptionsPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cart\")\n            .build());\n\n        final var plan = OrderFunctions.getCartProductOptionsPlan(GetCartProductOptionsPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"cloud\")\n            .planCode(\"project\")\n            .optionsPlanCode(\"vrack\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cart\n  plan:\n    fn::invoke:\n      Function: ovh:Order:getCartProductOptionsPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: cloud\n        planCode: project\n        optionsPlanCode: vrack\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCartProductOptionsPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "Catalog name\n"
                    },
                    "optionsPlanCode": {
                        "type": "string",
                        "description": "options plan code.\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string",
                        "description": "Capacity of the pricing (type of pricing)\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "optionsPlanCode",
                    "planCode",
                    "priceCapacity",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProductOptionsPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "exclusive": {
                        "type": "boolean",
                        "description": "Define if options of this family are exclusive with each other\n"
                    },
                    "family": {
                        "type": "string",
                        "description": "Option family\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "mandatory": {
                        "type": "boolean",
                        "description": "Define if an option of this family is mandatory\n"
                    },
                    "optionsPlanCode": {
                        "type": "string"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductOptionsPlanPrice:getCartProductOptionsPlanPrice"
                        },
                        "description": "Prices of the product offer\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string",
                        "description": "Name of the product\n"
                    },
                    "productType": {
                        "type": "string",
                        "description": "Product type\n"
                    },
                    "selectedPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductOptionsPlanSelectedPrice:getCartProductOptionsPlanSelectedPrice"
                        },
                        "description": "Selected Price according to capacity\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "exclusive",
                    "family",
                    "mandatory",
                    "optionsPlanCode",
                    "planCode",
                    "priceCapacity",
                    "prices",
                    "product",
                    "productName",
                    "productType",
                    "selectedPrices",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProductPlan:getCartProductPlan": {
            "description": "Use this data source to retrieve information of order cart product plan.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cart\",\n});\nconst plan = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"cloud\",\n    planCode: \"project\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\",\n    description=\"my cart\")\nplan = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"cloud\",\n    plan_code=\"project\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cart\",\n    });\n\n    var plan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"cloud\",\n        PlanCode = \"project\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := Order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"cloud\",\n\t\t\tPlanCode:      \"project\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cart\")\n            .build());\n\n        final var plan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"cloud\")\n            .planCode(\"project\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mycart:\n    fn::invoke:\n      Function: ovh:Order:getCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cart\n  plan:\n    fn::invoke:\n      Function: ovh:Order:getCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: cloud\n        planCode: project\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCartProductPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "Catalog name\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string",
                        "description": "Capacity of the pricing (type of pricing)\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "priceCapacity",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProductPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductPlanPrice:getCartProductPlanPrice"
                        },
                        "description": "Prices of the product offer\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string",
                        "description": "Name of the product\n"
                    },
                    "productType": {
                        "type": "string",
                        "description": "Product type\n"
                    },
                    "selectedPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductPlanSelectedPrice:getCartProductPlanSelectedPrice"
                        },
                        "description": "Selected Price according to capacity\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "priceCapacity",
                    "prices",
                    "product",
                    "productName",
                    "productType",
                    "selectedPrices",
                    "id"
                ]
            }
        },
        "ovh:Vps/getVps:getVps": {
            "description": "Use this data source to retrieve information about a vps associated with your OVHcloud Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst server = pulumi.output(ovh.Vps.getVps({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nserver = ovh.Vps.get_vps(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var server = Ovh.Vps.GetVps.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/Vps\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = Vps.GetVps(ctx, \u0026vps.GetVpsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vps.VpsFunctions;\nimport com.pulumi.ovh.Vps.inputs.GetVpsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var server = VpsFunctions.getVps(GetVpsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  server:\n    fn::invoke:\n      Function: ovh:Vps:getVps\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVps.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVps.\n",
                "properties": {
                    "cluster": {
                        "type": "string",
                        "description": "The OVHcloud cluster the vps is in\n"
                    },
                    "datacenter": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The datacenter in which the vps is located\n* `datacenter.longname` - The fullname of the datacenter (ex: \"Strasbourg SBG1\")\n* `datacenter.name` - The short name of the datacenter (ex: \"sbg1)\n"
                    },
                    "displayname": {
                        "type": "string",
                        "description": "The displayed name in the OVHcloud web admin\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IPs addresses attached to the vps\n"
                    },
                    "keymap": {
                        "type": "string",
                        "description": "The keymap for the ip kvm, valid values \"\", \"fr\", \"us\"\n"
                    },
                    "memory": {
                        "type": "integer",
                        "description": "The amount of memory in MB of the vps.\n"
                    },
                    "model": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A dict describing the type of vps.\n* `model.name` - The model name (ex: model1)\n* `model.offer` - The model human description (ex: \"VPS 2016 SSD 1\")\n* `model.version` - The model version (ex: \"2017v2\")\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "netbootmode": {
                        "type": "string",
                        "description": "The source of the boot kernel\n"
                    },
                    "offertype": {
                        "type": "string",
                        "description": "The type of offer (ssd, cloud, classic)\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "slamonitoring": {
                        "type": "boolean",
                        "description": "A boolean to indicate if OVHcloud SLA monitoring is active.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the vps\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of server\n"
                    },
                    "vcore": {
                        "type": "integer",
                        "description": "The number of vcore of the vps\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The OVHcloud zone where the vps is\n"
                    }
                },
                "type": "object",
                "required": [
                    "cluster",
                    "datacenter",
                    "displayname",
                    "ips",
                    "keymap",
                    "memory",
                    "model",
                    "name",
                    "netbootmode",
                    "offertype",
                    "serviceName",
                    "slamonitoring",
                    "state",
                    "type",
                    "vcore",
                    "zone",
                    "id"
                ]
            }
        },
        "ovh:Vps/getVpss:getVpss": {
            "description": "Use this data source to get the list of VPS associated with your OVH Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst servers = pulumi.output(ovh.Vps.getVpss());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getVpss.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of VPS IDs associated with your OVH Account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Vrack/getVracks:getVracks": {
            "description": "Use this data source to get the list of Vrack IDs available for your OVHcloud account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vracks = pulumi.output(ovh.Vrack.getVracks());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getVracks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of vrack service name available for your OVHcloud account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getInstallationTemplates:getInstallationTemplates": {
            "description": "Use this data source to get the list of installation templates available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst templates = pulumi.output(ovh.getInstallationTemplates());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getInstallationTemplates.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of installation templates IDs available for dedicated servers.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getServer:getServer": {
            "description": "Use this data source to retrieve information about a dedicated server associated with your OVHcloud Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst server = pulumi.output(ovh.getServer({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nserver = ovh.get_server(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var server = Ovh.GetServer.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = ovh.GetServer(ctx, \u0026GetServerArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var server = OvhFunctions.getServer(GetServerArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  server:\n    fn::invoke:\n      Function: ovh:getServer\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getServer.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServer.\n",
                "properties": {
                    "bootId": {
                        "type": "integer",
                        "description": "boot id of the server\n"
                    },
                    "commercialRange": {
                        "type": "string",
                        "description": "dedicater server commercial range\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "dedicated datacenter localisation (bhs1,bhs2,...)\n"
                    },
                    "enabledPublicVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled public VNI uuids\n"
                    },
                    "enabledVrackAggregationVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled vrack_aggregation VNI uuids\n"
                    },
                    "enabledVrackVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled vrack VNI uuids\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "dedicated server ip (IPv4)\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "dedicated server ip blocks\n"
                    },
                    "linkSpeed": {
                        "type": "integer",
                        "description": "link speed of the server\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "User defined VirtualNetworkInterface name\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "Operating system\n"
                    },
                    "professionalUse": {
                        "type": "boolean",
                        "description": "Does this server have professional use option\n"
                    },
                    "rack": {
                        "type": "string",
                        "description": "rack id of the server\n"
                    },
                    "rescueMail": {
                        "type": "string",
                        "description": "rescue mail of the server\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "dedicated server reverse\n"
                    },
                    "rootDevice": {
                        "type": "string",
                        "description": "root device of the server\n"
                    },
                    "serverId": {
                        "type": "integer",
                        "description": "your server id\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "error, hacked, hackedBlocked, ok\n"
                    },
                    "supportLevel": {
                        "type": "string",
                        "description": "Dedicated server support level (critical, fastpath, gs, pro)\n"
                    },
                    "vnis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getServerVni:getServerVni"
                        },
                        "description": "the list of Virtualnetworkinterface assiociated with this server\n"
                    }
                },
                "type": "object",
                "required": [
                    "bootId",
                    "commercialRange",
                    "datacenter",
                    "enabledPublicVnis",
                    "enabledVrackAggregationVnis",
                    "enabledVrackVnis",
                    "ip",
                    "ips",
                    "linkSpeed",
                    "monitoring",
                    "name",
                    "os",
                    "professionalUse",
                    "rack",
                    "rescueMail",
                    "reverse",
                    "rootDevice",
                    "serverId",
                    "serviceName",
                    "state",
                    "supportLevel",
                    "vnis",
                    "id"
                ]
            }
        },
        "ovh:index/getServers:getServers": {
            "description": "Use this data source to get the list of dedicated servers associated with your OVHcloud Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst servers = pulumi.output(ovh.getServers());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getServers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of dedicated servers IDs associated with your OVHcloud Account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getVrackNetworks:getVrackNetworks": {
            "description": "Use this data source to get the list of Vrack network ids available for your IPLoadbalancer associated with your OVHcloud account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lbNetworks = pulumi.output(ovh.getVrackNetworks({\n    serviceName: \"XXXXXX\",\n    subnet: \"10.0.0.0/24\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb_networks = ovh.get_vrack_networks(service_name=\"XXXXXX\",\n    subnet=\"10.0.0.0/24\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lbNetworks = Ovh.GetVrackNetworks.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Subnet = \"10.0.0.0/24\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err = ovh.GetVrackNetworks(ctx, \u0026GetVrackNetworksArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tSubnet:      pulumi.StringRef(\"10.0.0.0/24\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetVrackNetworksArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lbNetworks = OvhFunctions.getVrackNetworks(GetVrackNetworksArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .subnet(\"10.0.0.0/24\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  lbNetworks:\n    fn::invoke:\n      Function: ovh:getVrackNetworks\n      Arguments:\n        serviceName: XXXXXX\n        subnet: 10.0.0.0/24\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVrackNetworks.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "Filters networks on the subnet.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "Filters networks on the vlan id.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrackNetworks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of vrack network ids.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        }
    }
}