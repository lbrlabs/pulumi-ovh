{
    "name": "ovh",
    "displayName": "OVH",
    "description": "A Pulumi package for creating and managing OVH cloud resources.",
    "keywords": [
        "pulumi",
        "ovh",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`ovh` Terraform Provider](https://github.com/ovh/terraform-provider-ovh).",
    "repository": "https://github.com/pulumiverse/pulumi-ovh",
    "pluginDownloadURL": "github://api.github.com/pulumiverse",
    "publisher": "Pulumiverse",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "Pulumiverse"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumiverse/pulumi-ovh/sdk/go/ovh"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing OVH cloud resources.",
            "packageName": "@pulumiverse/ovh",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ovh/terraform-provider-ovh)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-ovh` repo](https://github.com/pulumiverse/pulumi-ovh/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-ovh` repo](https://github.com/ovh/terraform-provider-ovh/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "pulumiverse_ovh",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ovh/terraform-provider-ovh)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-ovh` repo](https://github.com/pulumiverse/pulumi-ovh/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-ovh` repo](https://github.com/ovh/terraform-provider-ovh/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_KEY"
                    ]
                }
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_SECRET"
                    ]
                }
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer key.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_CONSUMER_KEY"
                    ]
                },
                "secret": true
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\").\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_ENDPOINT"
                    ]
                }
            }
        },
        "defaults": [
            "endpoint"
        ]
    },
    "types": {
        "ovh:index/CloudProjectContainerRegistryPlan:CloudProjectContainerRegistryPlan": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Plan code from the catalog\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectContainerRegistryPlanFeature:CloudProjectContainerRegistryPlanFeature"
                    },
                    "description": "Features of the plan\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Plan ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectContainerRegistryPlanRegistryLimit:CloudProjectContainerRegistryPlanRegistryLimit"
                    },
                    "description": "Container registry limits\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "code",
                        "createdAt",
                        "features",
                        "id",
                        "name",
                        "registryLimits",
                        "updatedAt"
                    ]
                }
            }
        },
        "ovh:index/CloudProjectContainerRegistryPlanFeature:CloudProjectContainerRegistryPlanFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "vulnerability"
                    ]
                }
            }
        },
        "ovh:index/CloudProjectContainerRegistryPlanRegistryLimit:CloudProjectContainerRegistryPlanRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "imageStorage",
                        "parallelRequest"
                    ]
                }
            }
        },
        "ovh:index/CloudProjectDatabaseEndpoint:CloudProjectDatabaseEndpoint": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Type of component the URI relates to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path of the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "string",
                    "description": "Scheme used to generate the URI.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Defines whether the endpoint uses SSL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL mode used to connect to the service if the SSL is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "description": "URI of the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "domain",
                        "path",
                        "port",
                        "scheme",
                        "ssl",
                        "sslMode",
                        "uri"
                    ]
                }
            }
        },
        "ovh:index/CloudProjectDatabaseNode:CloudProjectDatabaseNode": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "description": "Private network id in which the node should be deployed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Public cloud region in which the node should be deployed.\nEx: \"GRA'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetId": {
                    "type": "string",
                    "description": "Private subnet ID in which the node is.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "region"
            ]
        },
        "ovh:index/CloudProjectKubeNodePoolTemplate:CloudProjectKubeNodePoolTemplate": {
            "properties": {
                "metadata": {
                    "$ref": "#/types/ovh:index/CloudProjectKubeNodePoolTemplateMetadata:CloudProjectKubeNodePoolTemplateMetadata",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spec": {
                    "$ref": "#/types/ovh:index/CloudProjectKubeNodePoolTemplateSpec:CloudProjectKubeNodePoolTemplateSpec",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:index/CloudProjectKubeNodePoolTemplateMetadata:CloudProjectKubeNodePoolTemplateMetadata": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:index/CloudProjectKubeNodePoolTemplateSpec:CloudProjectKubeNodePoolTemplateSpec": {
            "properties": {
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unschedulable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:index/CloudProjectKubePrivateNetworkConfiguration:CloudProjectKubePrivateNetworkConfiguration": {
            "properties": {
                "defaultVrackGateway": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateNetworkRoutingAsDefault": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultVrackGateway",
                "privateNetworkRoutingAsDefault"
            ]
        },
        "ovh:index/CloudProjectNetworkPrivateRegionsAttribute:CloudProjectNetworkPrivateRegionsAttribute": {
            "properties": {
                "openstackid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "openstackid",
                        "region",
                        "status"
                    ]
                }
            }
        },
        "ovh:index/CloudProjectNetworkPrivateRegionsStatus:CloudProjectNetworkPrivateRegionsStatus": {
            "properties": {
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "region",
                        "status"
                    ]
                }
            }
        },
        "ovh:index/CloudProjectNetworkPrivateSubnetIpPool:CloudProjectNetworkPrivateSubnetIpPool": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dhcp",
                        "end",
                        "network",
                        "region",
                        "start"
                    ]
                }
            }
        },
        "ovh:index/CloudProjectOrder:CloudProjectOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectOrderDetail:CloudProjectOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:index/CloudProjectOrderDetail:CloudProjectOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:index/CloudProjectPlan:CloudProjectPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectPlanConfiguration:CloudProjectPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:index/CloudProjectPlanConfiguration:CloudProjectPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/CloudProjectPlanOption:CloudProjectPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectPlanOptionConfiguration:CloudProjectPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:index/CloudProjectPlanOptionConfiguration:CloudProjectPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/CloudProjectUserRole:CloudProjectUserRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "id of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "name of the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of permissions associated with the role\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "permissions"
                    ]
                }
            }
        },
        "ovh:index/DbaasLogsInputConfiguration:DbaasLogsInputConfiguration": {
            "properties": {
                "flowgger": {
                    "$ref": "#/types/ovh:index/DbaasLogsInputConfigurationFlowgger:DbaasLogsInputConfigurationFlowgger",
                    "description": "Flowgger configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logstash": {
                    "$ref": "#/types/ovh:index/DbaasLogsInputConfigurationLogstash:DbaasLogsInputConfigurationLogstash",
                    "description": "Logstash configuration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "ovh:index/DbaasLogsInputConfigurationFlowgger:DbaasLogsInputConfigurationFlowgger": {
            "properties": {
                "logFormat": {
                    "type": "string",
                    "description": "Type of format to decode. One of \"RFC5424\", \"LTSV\", \"GELF\", \"CAPNP\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logFraming": {
                    "type": "string",
                    "description": "Indicates how messages are delimited. One of \"LINE\", \"NUL\", \"SYSLEN\", \"CAPNP\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logFormat",
                "logFraming"
            ]
        },
        "ovh:index/DbaasLogsInputConfigurationLogstash:DbaasLogsInputConfigurationLogstash": {
            "properties": {
                "filterSection": {
                    "type": "string",
                    "description": "The filter section of logstash.conf\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "inputSection": {
                    "type": "string",
                    "description": "The filter section of logstash.conf\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "patternSection": {
                    "type": "string",
                    "description": "The list of customs Grok patterns\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "inputSection"
            ]
        },
        "ovh:index/DedicatedServiceInstallTaskDetails:DedicatedServiceInstallTaskDetails": {
            "properties": {
                "changeLog": {
                    "type": "string",
                    "description": "Template change log details.\n",
                    "deprecationMessage": "field is not used anymore",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostname": {
                    "type": "string",
                    "description": "Set up the server using the provided hostname instead of the default hostname.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "diskGroupId": {
                    "type": "integer",
                    "description": "Disk group id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "installRtm": {
                    "type": "boolean",
                    "description": "set to true to install RTM.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "installSqlServer": {
                    "type": "boolean",
                    "description": "set to true to install sql server (Windows template only).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "language": {
                    "type": "string",
                    "description": "language.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "noRaid": {
                    "type": "boolean",
                    "description": "set to true to disable RAID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "postInstallationScriptLink": {
                    "type": "string",
                    "description": "Indicate the URL where your postinstall customisation script is located.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "postInstallationScriptReturn": {
                    "type": "string",
                    "description": "Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "resetHwRaid": {
                    "type": "boolean",
                    "description": "set to true to make a hardware raid reset.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "softRaidDevices": {
                    "type": "integer",
                    "description": "soft raid devices.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "sshKeyName": {
                    "type": "string",
                    "description": "Name of the ssh key that should be installed. Password login will be disabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "useDistribKernel": {
                    "type": "boolean",
                    "description": "Use the distribution's native kernel instead of the recommended OVH Kernel.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "useSpla": {
                    "type": "boolean",
                    "description": "set to true to use SPLA.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:index/DomainZoneOrder:DomainZoneOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/DomainZoneOrderDetail:DomainZoneOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:index/DomainZoneOrderDetail:DomainZoneOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:index/DomainZonePlan:DomainZonePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/DomainZonePlanConfiguration:DomainZonePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:index/DomainZonePlanConfiguration:DomainZonePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/DomainZonePlanOption:DomainZonePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/DomainZonePlanOptionConfiguration:DomainZonePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:index/DomainZonePlanOptionConfiguration:DomainZonePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/IpLoadBalancingHttpFarmProbe:IpLoadBalancingHttpFarmProbe": {
            "properties": {
                "forceSsl": {
                    "type": "boolean",
                    "description": "Force use of SSL (TLS)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "probe interval, Value between 30 and 3600 seconds, default 30\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "What to mach `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "description": "Negate probe result\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern to match against `match`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "URL for HTTP probe type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match",
                        "method",
                        "pattern",
                        "port",
                        "type",
                        "url"
                    ]
                }
            }
        },
        "ovh:index/IpLoadBalancingHttpRouteAction:IpLoadBalancingHttpRouteAction": {
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "HTTP status code for \"redirect\" and \"reject\" actions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Farm ID for \"farm\" action type or URL template for \"redirect\" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Action to trigger if all the rules of this route matches\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ovh:index/IpLoadBalancingHttpRouteRule:IpLoadBalancingHttpRouteRule": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\" \"/ipLoadbalancing/{serviceName}/route/availableRules\" for a list of available rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"availableRules\"\n* `negate`- Invert the matching operator effect\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Id of your rule\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "field",
                        "match",
                        "negate",
                        "pattern",
                        "ruleId",
                        "subField"
                    ]
                }
            }
        },
        "ovh:index/IpLoadBalancingOrder:IpLoadBalancingOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingOrderDetail:IpLoadBalancingOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:index/IpLoadBalancingOrderDetail:IpLoadBalancingOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:index/IpLoadBalancingOrderableZone:IpLoadBalancingOrderableZone": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The zone three letter code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "planCode"
                    ]
                }
            }
        },
        "ovh:index/IpLoadBalancingPlan:IpLoadBalancingPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingPlanConfiguration:IpLoadBalancingPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:index/IpLoadBalancingPlanConfiguration:IpLoadBalancingPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/IpLoadBalancingPlanOption:IpLoadBalancingPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingPlanOptionConfiguration:IpLoadBalancingPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:index/IpLoadBalancingPlanOptionConfiguration:IpLoadBalancingPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/IpLoadBalancingTcpFarmProbe:IpLoadBalancingTcpFarmProbe": {
            "properties": {
                "forceSsl": {
                    "type": "boolean",
                    "description": "Force use of SSL (TLS)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "probe interval, Value between 30 and 3600 seconds, default 30\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "What to mach `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "description": "Negate probe result\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern to match against `match`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "URL for HTTP probe type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match",
                        "type"
                    ]
                }
            }
        },
        "ovh:index/IpLoadBalancingTcpRouteAction:IpLoadBalancingTcpRouteAction": {
            "properties": {
                "target": {
                    "type": "string",
                    "description": "Farm ID for \"farm\" action type, empty for others.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Action to trigger if all the rules of this route matches\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ovh:index/IpLoadBalancingTcpRouteRule:IpLoadBalancingTcpRouteRule": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\" \"/ipLoadbalancing/{serviceName}/route/availableRules\" for a list of available rules\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"availableRules\"\n* `negate`- Invert the matching operator effect\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "negate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Id of your rule\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "field",
                        "match",
                        "negate",
                        "pattern",
                        "ruleId",
                        "subField"
                    ]
                }
            }
        },
        "ovh:index/IpServiceOrder:IpServiceOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpServiceOrderDetail:IpServiceOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:index/IpServiceOrderDetail:IpServiceOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:index/IpServicePlan:IpServicePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpServicePlanConfiguration:IpServicePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:index/IpServicePlanConfiguration:IpServicePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/IpServicePlanOption:IpServicePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpServicePlanOptionConfiguration:IpServicePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:index/IpServicePlanOptionConfiguration:IpServicePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/IpServiceRoutedTo:IpServiceRoutedTo": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "Service where ip is routed to\n* `service_name`: service name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "serviceName"
                    ]
                }
            }
        },
        "ovh:index/VrackOrder:VrackOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/VrackOrderDetail:VrackOrderDetail"
                    },
                    "description": "Information about a Bill entry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:index/VrackOrderDetail:VrackOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:index/VrackPlan:VrackPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/VrackPlanConfiguration:VrackPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:index/VrackPlanConfiguration:VrackPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/VrackPlanOption:VrackPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/VrackPlanOptionConfiguration:VrackPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:index/VrackPlanOptionConfiguration:VrackPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/getCloudProjectCapabilitiesContainerFilterFeature:getCloudProjectCapabilitiesContainerFilterFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "vulnerability"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getCloudProjectCapabilitiesContainerFilterRegistryLimit:getCloudProjectCapabilitiesContainerFilterRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "imageStorage",
                "parallelRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getCloudProjectCapabilitiesContainerRegistryResult:getCloudProjectCapabilitiesContainerRegistryResult": {
            "properties": {
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getCloudProjectCapabilitiesContainerRegistryResultPlan:getCloudProjectCapabilitiesContainerRegistryResultPlan"
                    },
                    "description": "Available plans in the region\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regionName": {
                    "type": "string",
                    "description": "The region name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "plans",
                "regionName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getCloudProjectCapabilitiesContainerRegistryResultPlan:getCloudProjectCapabilitiesContainerRegistryResultPlan": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Plan code from the catalog\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getCloudProjectCapabilitiesContainerRegistryResultPlanFeature:getCloudProjectCapabilitiesContainerRegistryResultPlanFeature"
                    },
                    "description": "Features of the plan\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Plan ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Plan name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "registryLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getCloudProjectCapabilitiesContainerRegistryResultPlanRegistryLimit:getCloudProjectCapabilitiesContainerRegistryResultPlanRegistryLimit"
                    },
                    "description": "Container registry limits\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Plan last update date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code",
                "createdAt",
                "features",
                "id",
                "name",
                "registryLimits",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getCloudProjectCapabilitiesContainerRegistryResultPlanFeature:getCloudProjectCapabilitiesContainerRegistryResultPlanFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "vulnerability"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getCloudProjectCapabilitiesContainerRegistryResultPlanRegistryLimit:getCloudProjectCapabilitiesContainerRegistryResultPlanRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "imageStorage",
                "parallelRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getCloudProjectContainerRegistriesResult:getCloudProjectContainerRegistriesResult": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Registry creation date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Registry ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID of your registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "description": "Current size of the registry (bytes)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Registry status\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Access url of the registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "Version of your registry\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "name",
                "projectId",
                "region",
                "size",
                "status",
                "updatedAt",
                "url",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getCloudProjectContainerRegistryUsersResult:getCloudProjectContainerRegistryUsersResult": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User email\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "User ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "type": "string",
                    "description": "User name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "email",
                "id",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getCloudProjectDatabaseEndpoint:getCloudProjectDatabaseEndpoint": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Type of component the URI relates to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the cluster.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path of the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "string",
                    "description": "Scheme used to generate the URI.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Defines whether the endpoint uses SSL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL mode used to connect to the service if the SSL is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "type": "string",
                    "description": "URI of the endpoint.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "component",
                "domain",
                "path",
                "port",
                "scheme",
                "ssl",
                "sslMode",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getCloudProjectDatabaseNode:getCloudProjectDatabaseNode": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subnetId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "networkId",
                "region",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getCloudProjectRegionService:getCloudProjectRegionService": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the region associated with the public cloud\nproject.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "the status of the service\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getDedicatedServerVni:getDedicatedServerVni": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "VirtualNetworkInterface activation state\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "description": "VirtualNetworkInterface mode (public,vrack,vrack_aggregation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "User defined VirtualNetworkInterface name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverName": {
                    "type": "string",
                    "description": "Server bound to this VirtualNetworkInterface\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uuid": {
                    "type": "string",
                    "description": "VirtualNetworkInterface unique id\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vrack": {
                    "type": "string",
                    "description": "vRack name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "mode",
                "name",
                "nics",
                "serverName",
                "uuid",
                "vrack"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getIpServiceRoutedTo:getIpServiceRoutedTo": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getMeCurrency:getMeCurrency": {
            "properties": {
                "code": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "symbol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "code",
                "symbol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getMeInstallationTemplateCustomization:getMeInstallationTemplateCustomization": {
            "properties": {
                "changeLog": {
                    "type": "string",
                    "deprecationMessage": "field is not used anymore",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptLink": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postInstallationScriptReturn": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rating": {
                    "type": "integer",
                    "deprecationMessage": "field is not used anymore",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sshKeyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDistributionKernel": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "changeLog",
                "customHostname",
                "postInstallationScriptLink",
                "postInstallationScriptReturn",
                "rating",
                "sshKeyName",
                "useDistributionKernel"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getMeInstallationTemplatePartitionScheme:getMeInstallationTemplatePartitionScheme": {
            "properties": {
                "hardwareRaids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getMeInstallationTemplatePartitionSchemeHardwareRaid:getMeInstallationTemplatePartitionSchemeHardwareRaid"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "partitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getMeInstallationTemplatePartitionSchemePartition:getMeInstallationTemplatePartitionSchemePartition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hardwareRaids",
                "name",
                "partitions",
                "priority"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getMeInstallationTemplatePartitionSchemeHardwareRaid:getMeInstallationTemplatePartitionSchemeHardwareRaid": {
            "properties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "step": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "disks",
                "mode",
                "name",
                "step"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getMeInstallationTemplatePartitionSchemePartition:getMeInstallationTemplatePartitionSchemePartition": {
            "properties": {
                "filesystem": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mountpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "raid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "volumeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filesystem",
                "mountpoint",
                "order",
                "raid",
                "size",
                "type",
                "volumeName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductOptionsPlanPrice:getOrderCartProductOptionsPlanPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getOrderCartProductOptionsPlanPricePrice:getOrderCartProductOptionsPlanPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductOptionsPlanPricePrice:getOrderCartProductOptionsPlanPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductOptionsPlanSelectedPrice:getOrderCartProductOptionsPlanSelectedPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getOrderCartProductOptionsPlanSelectedPricePrice:getOrderCartProductOptionsPlanSelectedPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductOptionsPlanSelectedPricePrice:getOrderCartProductOptionsPlanSelectedPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductOptionsResult:getOrderCartProductOptionsResult": {
            "properties": {
                "exclusive": {
                    "type": "boolean",
                    "description": "Define if options of this family are exclusive with each other\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "family": {
                    "type": "string",
                    "description": "Option family\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mandatory": {
                    "type": "boolean",
                    "description": "Define if an option of this family is mandatory\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "planCode": {
                    "type": "string",
                    "description": "Product offer identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getOrderCartProductOptionsResultPrice:getOrderCartProductOptionsResultPrice"
                    },
                    "description": "Prices of the product offer\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productName": {
                    "type": "string",
                    "description": "Name of the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productType": {
                    "type": "string",
                    "description": "Product type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "exclusive",
                "family",
                "mandatory",
                "planCode",
                "prices",
                "productName",
                "productType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductOptionsResultPrice:getOrderCartProductOptionsResultPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getOrderCartProductOptionsResultPricePrice:getOrderCartProductOptionsResultPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductOptionsResultPricePrice:getOrderCartProductOptionsResultPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductPlanPrice:getOrderCartProductPlanPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getOrderCartProductPlanPricePrice:getOrderCartProductPlanPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductPlanPricePrice:getOrderCartProductPlanPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductPlanSelectedPrice:getOrderCartProductPlanSelectedPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getOrderCartProductPlanSelectedPricePrice:getOrderCartProductPlanSelectedPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductPlanSelectedPricePrice:getOrderCartProductPlanSelectedPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductResult:getOrderCartProductResult": {
            "properties": {
                "planCode": {
                    "type": "string",
                    "description": "Product offer identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getOrderCartProductResultPrice:getOrderCartProductResultPrice"
                    },
                    "description": "Prices of the product offer\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productName": {
                    "type": "string",
                    "description": "Name of the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productType": {
                    "type": "string",
                    "description": "Product type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "planCode",
                "prices",
                "productName",
                "productType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductResultPrice:getOrderCartProductResultPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getOrderCartProductResultPricePrice:getOrderCartProductResultPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getOrderCartProductResultPricePrice:getOrderCartProductResultPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the ovh package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key.\n"
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret.\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer key.\n",
                "secret": true
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\").\n"
            }
        },
        "inputProperties": {
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_KEY"
                    ]
                }
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_SECRET"
                    ]
                }
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer key.\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_CONSUMER_KEY"
                    ]
                },
                "secret": true
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\").\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_ENDPOINT"
                    ]
                }
            }
        }
    },
    "resources": {
        "ovh:index/cloudProject:CloudProject": {
            "description": "Orders a public cloud project.\n\n## Important\n\nThis resource is in beta state. Use with caution.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst mycart = ovh.getOrderCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cloud order cart\",\n});\nconst cloudOrderCartProductPlan = mycart.then(mycart =\u003e ovh.getOrderCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"cloud\",\n    planCode: \"project.2018\",\n}));\nconst cloudCloudProject = new ovh.CloudProject(\"cloudCloudProject\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    description: \"my cloud project\",\n    paymentMean: \"fidelity\",\n    plan: {\n        duration: cloudOrderCartProductPlan.then(cloudOrderCartProductPlan =\u003e cloudOrderCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: cloudOrderCartProductPlan.then(cloudOrderCartProductPlan =\u003e cloudOrderCartProductPlan.planCode),\n        pricingMode: cloudOrderCartProductPlan.then(cloudOrderCartProductPlan =\u003e cloudOrderCartProductPlan.selectedPrices?[0]?.pricingMode),\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\nmycart = ovh.get_order_cart(ovh_subsidiary=\"fr\",\n    description=\"my cloud order cart\")\ncloud_order_cart_product_plan = ovh.get_order_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"cloud\",\n    plan_code=\"project.2018\")\ncloud_cloud_project = ovh.CloudProject(\"cloudCloudProject\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    description=\"my cloud project\",\n    payment_mean=\"fidelity\",\n    plan=ovh.CloudProjectPlanArgs(\n        duration=cloud_order_cart_product_plan.selected_prices[0].duration,\n        plan_code=cloud_order_cart_product_plan.plan_code,\n        pricing_mode=cloud_order_cart_product_plan.selected_prices[0].pricing_mode,\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cloud order cart\",\n    });\n\n    var cloudOrderCartProductPlan = Ovh.GetOrderCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"cloud\",\n        PlanCode = \"project.2018\",\n    });\n\n    var cloudCloudProject = new Ovh.CloudProject(\"cloudCloudProject\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.OvhSubsidiary),\n        Description = \"my cloud project\",\n        PaymentMean = \"fidelity\",\n        Plan = new Ovh.Inputs.CloudProjectPlanArgs\n        {\n            Duration = cloudOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = cloudOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.PlanCode),\n            PricingMode = cloudOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cloud order cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcloudOrderCartProductPlan, err := ovh.GetOrderCartProductPlan(ctx, \u0026GetOrderCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"cloud\",\n\t\t\tPlanCode:      \"project.2018\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewCloudProject(ctx, \"cloudCloudProject\", \u0026ovh.CloudProjectArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tDescription:   pulumi.String(\"my cloud project\"),\n\t\t\tPaymentMean:   pulumi.String(\"fidelity\"),\n\t\t\tPlan: \u0026CloudProjectPlanArgs{\n\t\t\t\tDuration:    pulumi.String(cloudOrderCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(cloudOrderCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(cloudOrderCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductPlanArgs;\nimport com.pulumi.ovh.CloudProject;\nimport com.pulumi.ovh.CloudProjectArgs;\nimport com.pulumi.ovh.inputs.CloudProjectPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cloud order cart\")\n            .build());\n\n        final var cloudOrderCartProductPlan = OvhFunctions.getOrderCartProductPlan(GetOrderCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"cloud\")\n            .planCode(\"project.2018\")\n            .build());\n\n        var cloudCloudProject = new CloudProject(\"cloudCloudProject\", CloudProjectArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.ovhSubsidiary()))\n            .description(\"my cloud project\")\n            .paymentMean(\"fidelity\")\n            .plan(CloudProjectPlanArgs.builder()\n                .duration(cloudOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(cloudOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.planCode()))\n                .pricingMode(cloudOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cloudCloudProject:\n    type: ovh:CloudProject\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      description: my cloud project\n      paymentMean: fidelity\n      plan:\n        duration: ${cloudOrderCartProductPlan.selectedPrices[0].duration}\n        planCode: ${cloudOrderCartProductPlan.planCode}\n        pricingMode: ${cloudOrderCartProductPlan.selectedPrices[0].pricingMode}\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cloud order cart\n  cloudOrderCartProductPlan:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: cloud\n        planCode: project.2018\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "access": {
                    "type": "string",
                    "description": "project access\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectOrder:CloudProjectOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:index/CloudProjectPlan:CloudProjectPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectPlanOption:CloudProjectPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "openstack project id\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "openstack project name\n"
                },
                "status": {
                    "type": "string",
                    "description": "project status\n"
                }
            },
            "required": [
                "access",
                "description",
                "orders",
                "ovhSubsidiary",
                "paymentMean",
                "plan",
                "projectId",
                "projectName",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:index/CloudProjectPlan:CloudProjectPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectPlanOption:CloudProjectPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProject resources.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "project access\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description associated with the user.\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudProjectOrder:CloudProjectOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:index/CloudProjectPlan:CloudProjectPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudProjectPlanOption:CloudProjectPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "openstack project id\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "openstack project name\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "project status\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectContainerRegistry:CloudProjectContainerRegistry": {
            "description": "Creates a container registry associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst regcap = ovh.getCloudProjectCapabilitiesContainerFilter({\n    serviceName: \"XXXXXX\",\n    planName: \"SMALL\",\n    region: \"GRA\",\n});\nconst reg = new ovh.CloudProjectContainerRegistry(\"reg\", {\n    serviceName: regcap.then(regcap =\u003e regcap.serviceName),\n    planId: regcap.then(regcap =\u003e regcap.id),\n    region: regcap.then(regcap =\u003e regcap.region),\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\nregcap = ovh.get_cloud_project_capabilities_container_filter(service_name=\"XXXXXX\",\n    plan_name=\"SMALL\",\n    region=\"GRA\")\nreg = ovh.CloudProjectContainerRegistry(\"reg\",\n    service_name=regcap.service_name,\n    plan_id=regcap.id,\n    region=regcap.region)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var regcap = Ovh.GetCloudProjectCapabilitiesContainerFilter.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        PlanName = \"SMALL\",\n        Region = \"GRA\",\n    });\n\n    var reg = new Ovh.CloudProjectContainerRegistry(\"reg\", new()\n    {\n        ServiceName = regcap.Apply(getCloudProjectCapabilitiesContainerFilterResult =\u003e getCloudProjectCapabilitiesContainerFilterResult.ServiceName),\n        PlanId = regcap.Apply(getCloudProjectCapabilitiesContainerFilterResult =\u003e getCloudProjectCapabilitiesContainerFilterResult.Id),\n        Region = regcap.Apply(getCloudProjectCapabilitiesContainerFilterResult =\u003e getCloudProjectCapabilitiesContainerFilterResult.Region),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tregcap, err := ovh.GetCloudProjectCapabilitiesContainerFilter(ctx, \u0026GetCloudProjectCapabilitiesContainerFilterArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tPlanName:    \"SMALL\",\n\t\t\tRegion:      \"GRA\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewCloudProjectContainerRegistry(ctx, \"reg\", \u0026ovh.CloudProjectContainerRegistryArgs{\n\t\t\tServiceName: pulumi.String(regcap.ServiceName),\n\t\t\tPlanId:      pulumi.String(regcap.Id),\n\t\t\tRegion:      pulumi.String(regcap.Region),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectCapabilitiesContainerFilterArgs;\nimport com.pulumi.ovh.CloudProjectContainerRegistry;\nimport com.pulumi.ovh.CloudProjectContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var regcap = OvhFunctions.getCloudProjectCapabilitiesContainerFilter(GetCloudProjectCapabilitiesContainerFilterArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .planName(\"SMALL\")\n            .region(\"GRA\")\n            .build());\n\n        var reg = new CloudProjectContainerRegistry(\"reg\", CloudProjectContainerRegistryArgs.builder()        \n            .serviceName(regcap.applyValue(getCloudProjectCapabilitiesContainerFilterResult -\u003e getCloudProjectCapabilitiesContainerFilterResult.serviceName()))\n            .planId(regcap.applyValue(getCloudProjectCapabilitiesContainerFilterResult -\u003e getCloudProjectCapabilitiesContainerFilterResult.id()))\n            .region(regcap.applyValue(getCloudProjectCapabilitiesContainerFilterResult -\u003e getCloudProjectCapabilitiesContainerFilterResult.region()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  reg:\n    type: ovh:CloudProjectContainerRegistry\n    properties:\n      serviceName: ${regcap.serviceName}\n      planId: ${regcap.id}\n      region: ${regcap.region}\nvariables:\n  regcap:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectCapabilitiesContainerFilter\n      Arguments:\n        serviceName: XXXXXX\n        planName: SMALL\n        region: GRA\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n"
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "planId": {
                    "type": "string",
                    "description": "Plan ID of the registry\n"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectContainerRegistryPlan:CloudProjectContainerRegistryPlan"
                    },
                    "description": "Plan of the registry\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID of your registry\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Current size of the registry (bytes)\n"
                },
                "status": {
                    "type": "string",
                    "description": "Registry status\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n"
                },
                "url": {
                    "type": "string",
                    "description": "Access url of the registry\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of your registry\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "plans",
                "planId",
                "projectId",
                "region",
                "serviceName",
                "size",
                "status",
                "updatedAt",
                "url",
                "version"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "planId": {
                    "type": "string",
                    "description": "Plan ID of the registry\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "requiredInputs": [
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectContainerRegistry resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Plan creation date\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Registry name\n"
                    },
                    "planId": {
                        "type": "string",
                        "description": "Plan ID of the registry\n"
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudProjectContainerRegistryPlan:CloudProjectContainerRegistryPlan"
                        },
                        "description": "Plan of the registry\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID of your registry\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the registry\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Current size of the registry (bytes)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Registry status\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Registry last update date\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Access url of the registry\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of your registry\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectContainerRegistryUser:CloudProjectContainerRegistryUser": {
            "description": "Creates a user for a container registry associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst registry = ovh.getCloudProjectContainerRegistry({\n    serviceName: \"XXXXXX\",\n    registryId: \"yyyy\",\n});\nconst user = new ovh.CloudProjectContainerRegistryUser(\"user\", {\n    serviceName: ovh_cloud_project_containerregistry.registry.service_name,\n    registryId: ovh_cloud_project_containerregistry.registry.id,\n    email: \"foo@bar.com\",\n    login: \"foobar\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\nregistry = ovh.get_cloud_project_container_registry(service_name=\"XXXXXX\",\n    registry_id=\"yyyy\")\nuser = ovh.CloudProjectContainerRegistryUser(\"user\",\n    service_name=ovh_cloud_project_containerregistry[\"registry\"][\"service_name\"],\n    registry_id=ovh_cloud_project_containerregistry[\"registry\"][\"id\"],\n    email=\"foo@bar.com\",\n    login=\"foobar\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registry = Ovh.GetCloudProjectContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegistryId = \"yyyy\",\n    });\n\n    var user = new Ovh.CloudProjectContainerRegistryUser(\"user\", new()\n    {\n        ServiceName = ovh_cloud_project_containerregistry.Registry.Service_name,\n        RegistryId = ovh_cloud_project_containerregistry.Registry.Id,\n        Email = \"foo@bar.com\",\n        Login = \"foobar\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupCloudProjectContainerRegistry(ctx, \u0026GetCloudProjectContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegistryId:  \"yyyy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewCloudProjectContainerRegistryUser(ctx, \"user\", \u0026ovh.CloudProjectContainerRegistryUserArgs{\n\t\t\tServiceName: pulumi.Any(ovh_cloud_project_containerregistry.Registry.Service_name),\n\t\t\tRegistryId:  pulumi.Any(ovh_cloud_project_containerregistry.Registry.Id),\n\t\t\tEmail:       pulumi.String(\"foo@bar.com\"),\n\t\t\tLogin:       pulumi.String(\"foobar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectContainerRegistryArgs;\nimport com.pulumi.ovh.CloudProjectContainerRegistryUser;\nimport com.pulumi.ovh.CloudProjectContainerRegistryUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registry = OvhFunctions.getCloudProjectContainerRegistry(GetCloudProjectContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .registryId(\"yyyy\")\n            .build());\n\n        var user = new CloudProjectContainerRegistryUser(\"user\", CloudProjectContainerRegistryUserArgs.builder()        \n            .serviceName(ovh_cloud_project_containerregistry.registry().service_name())\n            .registryId(ovh_cloud_project_containerregistry.registry().id())\n            .email(\"foo@bar.com\")\n            .login(\"foobar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: ovh:CloudProjectContainerRegistryUser\n    properties:\n      serviceName: ${ovh_cloud_project_containerregistry.registry.service_name}\n      registryId: ${ovh_cloud_project_containerregistry.registry.id}\n      email: foo@bar.com\n      login: foobar\nvariables:\n  registry:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectContainerRegistry\n      Arguments:\n        serviceName: XXXXXX\n        registryId: yyyy\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User email\n"
                },
                "login": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) User password\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "Registry ID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "user": {
                    "type": "string",
                    "description": "User name\n"
                }
            },
            "required": [
                "email",
                "login",
                "password",
                "registryId",
                "serviceName",
                "user"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "User email\n",
                    "willReplaceOnChanges": true
                },
                "login": {
                    "type": "string",
                    "description": "Registry name\n",
                    "willReplaceOnChanges": true
                },
                "registryId": {
                    "type": "string",
                    "description": "Registry ID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "email",
                "login",
                "registryId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectContainerRegistryUser resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User email\n",
                        "willReplaceOnChanges": true
                    },
                    "login": {
                        "type": "string",
                        "description": "Registry name\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) User password\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "Registry ID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "user": {
                        "type": "string",
                        "description": "User name\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectDatabase:CloudProjectDatabase": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo deploy a business PostgreSQL service with two nodes on public network:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst postgresql = new ovh.CloudProjectDatabase(\"postgresql\", {\n    description: \"my-first-postgresql\",\n    engine: \"postgresql\",\n    flavor: \"db1-15\",\n    nodes: [\n        {\n            region: \"GRA\",\n        },\n        {\n            region: \"GRA\",\n        },\n    ],\n    plan: \"business\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"14\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\npostgresql = ovh.CloudProjectDatabase(\"postgresql\",\n    description=\"my-first-postgresql\",\n    engine=\"postgresql\",\n    flavor=\"db1-15\",\n    nodes=[\n        ovh.CloudProjectDatabaseNodeArgs(\n            region=\"GRA\",\n        ),\n        ovh.CloudProjectDatabaseNodeArgs(\n            region=\"GRA\",\n        ),\n    ],\n    plan=\"business\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"14\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var postgresql = new Ovh.CloudProjectDatabase(\"postgresql\", new()\n    {\n        Description = \"my-first-postgresql\",\n        Engine = \"postgresql\",\n        Flavor = \"db1-15\",\n        Nodes = new[]\n        {\n            new Ovh.Inputs.CloudProjectDatabaseNodeArgs\n            {\n                Region = \"GRA\",\n            },\n            new Ovh.Inputs.CloudProjectDatabaseNodeArgs\n            {\n                Region = \"GRA\",\n            },\n        },\n        Plan = \"business\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"14\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudProjectDatabase(ctx, \"postgresql\", \u0026ovh.CloudProjectDatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-postgresql\"),\n\t\t\tEngine:      pulumi.String(\"postgresql\"),\n\t\t\tFlavor:      pulumi.String(\"db1-15\"),\n\t\t\tNodes: CloudProjectDatabaseNodeArray{\n\t\t\t\t\u0026CloudProjectDatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"GRA\"),\n\t\t\t\t},\n\t\t\t\t\u0026CloudProjectDatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"GRA\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"business\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"14\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase;\nimport com.pulumi.ovh.CloudProjectDatabaseArgs;\nimport com.pulumi.ovh.inputs.CloudProjectDatabaseNodeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var postgresql = new CloudProjectDatabase(\"postgresql\", CloudProjectDatabaseArgs.builder()        \n            .description(\"my-first-postgresql\")\n            .engine(\"postgresql\")\n            .flavor(\"db1-15\")\n            .nodes(            \n                CloudProjectDatabaseNodeArgs.builder()\n                    .region(\"GRA\")\n                    .build(),\n                CloudProjectDatabaseNodeArgs.builder()\n                    .region(\"GRA\")\n                    .build())\n            .plan(\"business\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"14\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  postgresql:\n    type: ovh:CloudProjectDatabase\n    properties:\n      description: my-first-postgresql\n      engine: postgresql\n      flavor: db1-15\n      nodes:\n        - region: GRA\n        - region: GRA\n      plan: business\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: 14\n```\n\n\nTo deploy an enterprise MongoDB service with three nodes on private network:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst mongodb = new ovh.CloudProjectDatabase(\"mongodb\", {\n    serviceName: _var.openstack_infos.project_id,\n    description: \"my-first-mongodb\",\n    engine: \"mongodb\",\n    version: \"5.0\",\n    plan: \"enterprise\",\n    nodes: [\n        {\n            region: \"SBG\",\n            subnetId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            networkId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n        {\n            region: \"SBG\",\n            subnetId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            networkId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n        {\n            region: \"SBG\",\n            subnetId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            networkId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n    ],\n    flavor: \"db1-30\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nmongodb = ovh.CloudProjectDatabase(\"mongodb\",\n    service_name=var[\"openstack_infos\"][\"project_id\"],\n    description=\"my-first-mongodb\",\n    engine=\"mongodb\",\n    version=\"5.0\",\n    plan=\"enterprise\",\n    nodes=[\n        ovh.CloudProjectDatabaseNodeArgs(\n            region=\"SBG\",\n            subnet_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            network_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        ),\n        ovh.CloudProjectDatabaseNodeArgs(\n            region=\"SBG\",\n            subnet_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            network_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        ),\n        ovh.CloudProjectDatabaseNodeArgs(\n            region=\"SBG\",\n            subnet_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            network_id=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        ),\n    ],\n    flavor=\"db1-30\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mongodb = new Ovh.CloudProjectDatabase(\"mongodb\", new()\n    {\n        ServiceName = @var.Openstack_infos.Project_id,\n        Description = \"my-first-mongodb\",\n        Engine = \"mongodb\",\n        Version = \"5.0\",\n        Plan = \"enterprise\",\n        Nodes = new[]\n        {\n            new Ovh.Inputs.CloudProjectDatabaseNodeArgs\n            {\n                Region = \"SBG\",\n                SubnetId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                NetworkId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            },\n            new Ovh.Inputs.CloudProjectDatabaseNodeArgs\n            {\n                Region = \"SBG\",\n                SubnetId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                NetworkId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            },\n            new Ovh.Inputs.CloudProjectDatabaseNodeArgs\n            {\n                Region = \"SBG\",\n                SubnetId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                NetworkId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            },\n        },\n        Flavor = \"db1-30\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudProjectDatabase(ctx, \"mongodb\", \u0026ovh.CloudProjectDatabaseArgs{\n\t\t\tServiceName: pulumi.Any(_var.Openstack_infos.Project_id),\n\t\t\tDescription: pulumi.String(\"my-first-mongodb\"),\n\t\t\tEngine:      pulumi.String(\"mongodb\"),\n\t\t\tVersion:     pulumi.String(\"5.0\"),\n\t\t\tPlan:        pulumi.String(\"enterprise\"),\n\t\t\tNodes: CloudProjectDatabaseNodeArray{\n\t\t\t\t\u0026CloudProjectDatabaseNodeArgs{\n\t\t\t\t\tRegion:    pulumi.String(\"SBG\"),\n\t\t\t\t\tSubnetId:  pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t\tNetworkId: pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t},\n\t\t\t\t\u0026CloudProjectDatabaseNodeArgs{\n\t\t\t\t\tRegion:    pulumi.String(\"SBG\"),\n\t\t\t\t\tSubnetId:  pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t\tNetworkId: pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t},\n\t\t\t\t\u0026CloudProjectDatabaseNodeArgs{\n\t\t\t\t\tRegion:    pulumi.String(\"SBG\"),\n\t\t\t\t\tSubnetId:  pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t\tNetworkId: pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFlavor: pulumi.String(\"db1-30\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase;\nimport com.pulumi.ovh.CloudProjectDatabaseArgs;\nimport com.pulumi.ovh.inputs.CloudProjectDatabaseNodeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mongodb = new CloudProjectDatabase(\"mongodb\", CloudProjectDatabaseArgs.builder()        \n            .serviceName(var_.openstack_infos().project_id())\n            .description(\"my-first-mongodb\")\n            .engine(\"mongodb\")\n            .version(\"5.0\")\n            .plan(\"enterprise\")\n            .nodes(            \n                CloudProjectDatabaseNodeArgs.builder()\n                    .region(\"SBG\")\n                    .subnetId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .networkId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .build(),\n                CloudProjectDatabaseNodeArgs.builder()\n                    .region(\"SBG\")\n                    .subnetId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .networkId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .build(),\n                CloudProjectDatabaseNodeArgs.builder()\n                    .region(\"SBG\")\n                    .subnetId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .networkId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .build())\n            .flavor(\"db1-30\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mongodb:\n    type: ovh:CloudProjectDatabase\n    properties:\n      serviceName: ${var.openstack_infos.project_id}\n      description: my-first-mongodb\n      engine: mongodb\n      version: 5.0\n      plan: enterprise\n      nodes:\n        - region: SBG\n          subnetId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n          networkId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n        - region: SBG\n          subnetId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n          networkId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n        - region: SBG\n          subnetId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n          networkId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n      flavor: db1-30\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed database clusters can be imported using the `service_name`, `engine`, `id` of the cluster, separated by \"/\" E.g.,\n\n```sh\n $ pulumi import ovh:index/cloudProjectDatabase:CloudProjectDatabase my_database_cluster \u003cservice_name\u003e/\u003cengine\u003e/\u003cid\u003e\n```\n\n ",
            "properties": {
                "backupTime": {
                    "type": "string",
                    "description": "Time on which backups start every day.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the cluster.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Small description of the database service.\n"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectDatabaseEndpoint:CloudProjectDatabaseEndpoint"
                    },
                    "description": "List of all endpoints objects of the service.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The database engine you want to deploy. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "a valid OVH public cloud database flavor name in which the nodes will be started.\nEx: \"db1-7\". Changing this value upgrade the nodes with the new flavor.\nYou can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                },
                "maintenanceTime": {
                    "type": "string",
                    "description": "Time on which maintenances can start every day.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Type of network of the cluster.\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectDatabaseNode:CloudProjectDatabaseNode"
                    },
                    "description": "List of nodes object.\nMulti region cluster are not yet available, all node should be identical.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "List of nodes object.\nEnum: \"esential\", \"business\", \"enterprise\".\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the engine in which the service should be deployed\n"
                }
            },
            "required": [
                "backupTime",
                "createdAt",
                "endpoints",
                "engine",
                "flavor",
                "maintenanceTime",
                "networkType",
                "nodes",
                "plan",
                "serviceName",
                "status",
                "version"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Small description of the database service.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The database engine you want to deploy. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "a valid OVH public cloud database flavor name in which the nodes will be started.\nEx: \"db1-7\". Changing this value upgrade the nodes with the new flavor.\nYou can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectDatabaseNode:CloudProjectDatabaseNode"
                    },
                    "description": "List of nodes object.\nMulti region cluster are not yet available, all node should be identical.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "List of nodes object.\nEnum: \"esential\", \"business\", \"enterprise\".\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the engine in which the service should be deployed\n"
                }
            },
            "requiredInputs": [
                "engine",
                "flavor",
                "nodes",
                "plan",
                "serviceName",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectDatabase resources.\n",
                "properties": {
                    "backupTime": {
                        "type": "string",
                        "description": "Time on which backups start every day.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the cluster.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Small description of the database service.\n"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudProjectDatabaseEndpoint:CloudProjectDatabaseEndpoint"
                        },
                        "description": "List of all endpoints objects of the service.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The database engine you want to deploy. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "a valid OVH public cloud database flavor name in which the nodes will be started.\nEx: \"db1-7\". Changing this value upgrade the nodes with the new flavor.\nYou can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                    },
                    "maintenanceTime": {
                        "type": "string",
                        "description": "Time on which maintenances can start every day.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Type of network of the cluster.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudProjectDatabaseNode:CloudProjectDatabaseNode"
                        },
                        "description": "List of nodes object.\nMulti region cluster are not yet available, all node should be identical.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "List of nodes object.\nEnum: \"esential\", \"business\", \"enterprise\".\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the engine in which the service should be deployed\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectDatabaseIpRestriction:CloudProjectDatabaseIpRestriction": {
            "description": "Apply IP restrictions to an OVHcloud Managed Database cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst db = ovh.getCloudProjectDatabase({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZZ\",\n});\nconst iprestriction = new ovh.CloudProjectDatabaseIpRestriction(\"iprestriction\", {\n    serviceName: ovh_cloud_project_database.db.service_name,\n    engine: ovh_cloud_project_database.db.engine,\n    clusterId: ovh_cloud_project_database.db.cluster_id,\n    ip: \"178.97.6.0/24\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\ndb = ovh.get_cloud_project_database(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZZ\")\niprestriction = ovh.CloudProjectDatabaseIpRestriction(\"iprestriction\",\n    service_name=ovh_cloud_project_database[\"db\"][\"service_name\"],\n    engine=ovh_cloud_project_database[\"db\"][\"engine\"],\n    cluster_id=ovh_cloud_project_database[\"db\"][\"cluster_id\"],\n    ip=\"178.97.6.0/24\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var db = Ovh.GetCloudProjectDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZZ\",\n    });\n\n    var iprestriction = new Ovh.CloudProjectDatabaseIpRestriction(\"iprestriction\", new()\n    {\n        ServiceName = ovh_cloud_project_database.Db.Service_name,\n        Engine = ovh_cloud_project_database.Db.Engine,\n        ClusterId = ovh_cloud_project_database.Db.Cluster_id,\n        Ip = \"178.97.6.0/24\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupCloudProjectDatabase(ctx, \u0026GetCloudProjectDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewCloudProjectDatabaseIpRestriction(ctx, \"iprestriction\", \u0026ovh.CloudProjectDatabaseIpRestrictionArgs{\n\t\t\tServiceName: pulumi.Any(ovh_cloud_project_database.Db.Service_name),\n\t\t\tEngine:      pulumi.Any(ovh_cloud_project_database.Db.Engine),\n\t\t\tClusterId:   pulumi.Any(ovh_cloud_project_database.Db.Cluster_id),\n\t\t\tIp:          pulumi.String(\"178.97.6.0/24\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabaseIpRestriction;\nimport com.pulumi.ovh.CloudProjectDatabaseIpRestrictionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var db = OvhFunctions.getCloudProjectDatabase(GetCloudProjectDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZZ\")\n            .build());\n\n        var iprestriction = new CloudProjectDatabaseIpRestriction(\"iprestriction\", CloudProjectDatabaseIpRestrictionArgs.builder()        \n            .serviceName(ovh_cloud_project_database.db().service_name())\n            .engine(ovh_cloud_project_database.db().engine())\n            .clusterId(ovh_cloud_project_database.db().cluster_id())\n            .ip(\"178.97.6.0/24\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  iprestriction:\n    type: ovh:CloudProjectDatabaseIpRestriction\n    properties:\n      serviceName: ${ovh_cloud_project_database.db.service_name}\n      engine: ${ovh_cloud_project_database.db.engine}\n      clusterId: ${ovh_cloud_project_database.db.cluster_id}\n      ip: 178.97.6.0/24\nvariables:\n  db:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectDatabase\n      Arguments:\n        serviceName: XXXX\n        engine: YYYY\n        clusterId: ZZZZ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed database cluster IP restrictions can be imported using the `service_name`, `engine`, `cluster_id` and the `ip`, separated by \"/\" E.g.,\n\n```sh\n $ pulumi import ovh:index/cloudProjectDatabaseIpRestriction:CloudProjectDatabaseIpRestriction my_ip_restriction \u003cservice_name\u003e/\u003cengine\u003e/\u003ccluster_id\u003e/178.97.6.0/24\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the IP restriction.\n"
                }
            },
            "required": [
                "clusterId",
                "engine",
                "ip",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "ip",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectDatabaseIpRestriction resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the IP restriction.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "description": "Authorized IP.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the IP restriction.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectDatabasePostgresSqlUser:CloudProjectDatabasePostgresSqlUser": {
            "description": "Creates an user for a postgresql cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst postgresql = ovh.getCloudProjectDatabase({\n    serviceName: \"XXXX\",\n    engine: \"postgresql\",\n    clusterId: \"ZZZZ\",\n});\nconst user = new ovh.CloudProjectDatabasePostgresSqlUser(\"user\", {\n    serviceName: ovh_cloud_project_database.postgresql.service_name,\n    clusterId: ovh_cloud_project_database.postgresql.id,\n    roles: [\"replication\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\npostgresql = ovh.get_cloud_project_database(service_name=\"XXXX\",\n    engine=\"postgresql\",\n    cluster_id=\"ZZZZ\")\nuser = ovh.CloudProjectDatabasePostgresSqlUser(\"user\",\n    service_name=ovh_cloud_project_database[\"postgresql\"][\"service_name\"],\n    cluster_id=ovh_cloud_project_database[\"postgresql\"][\"id\"],\n    roles=[\"replication\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var postgresql = Ovh.GetCloudProjectDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"postgresql\",\n        ClusterId = \"ZZZZ\",\n    });\n\n    var user = new Ovh.CloudProjectDatabasePostgresSqlUser(\"user\", new()\n    {\n        ServiceName = ovh_cloud_project_database.Postgresql.Service_name,\n        ClusterId = ovh_cloud_project_database.Postgresql.Id,\n        Roles = new[]\n        {\n            \"replication\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupCloudProjectDatabase(ctx, \u0026GetCloudProjectDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"postgresql\",\n\t\t\tClusterId:   \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewCloudProjectDatabasePostgresSqlUser(ctx, \"user\", \u0026ovh.CloudProjectDatabasePostgresSqlUserArgs{\n\t\t\tServiceName: pulumi.Any(ovh_cloud_project_database.Postgresql.Service_name),\n\t\t\tClusterId:   pulumi.Any(ovh_cloud_project_database.Postgresql.Id),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"replication\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabasePostgresSqlUser;\nimport com.pulumi.ovh.CloudProjectDatabasePostgresSqlUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var postgresql = OvhFunctions.getCloudProjectDatabase(GetCloudProjectDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"postgresql\")\n            .clusterId(\"ZZZZ\")\n            .build());\n\n        var user = new CloudProjectDatabasePostgresSqlUser(\"user\", CloudProjectDatabasePostgresSqlUserArgs.builder()        \n            .serviceName(ovh_cloud_project_database.postgresql().service_name())\n            .clusterId(ovh_cloud_project_database.postgresql().id())\n            .roles(\"replication\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: ovh:CloudProjectDatabasePostgresSqlUser\n    properties:\n      serviceName: ${ovh_cloud_project_database.postgresql.service_name}\n      clusterId: ${ovh_cloud_project_database.postgresql.id}\n      roles:\n        - replication\nvariables:\n  postgresql:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectDatabase\n      Arguments:\n        serviceName: XXXX\n        engine: postgresql\n        clusterId: ZZZZ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed postgresql clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g.,\n\n```sh\n $ pulumi import ovh:index/cloudProjectDatabasePostgresSqlUser:CloudProjectDatabasePostgresSqlUser my_user \u003cservice_name\u003e/\u003ccluster_id\u003e/\u003cid\u003e\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to. Possible values:\n* `[\"replication\"]`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n",
                    "willReplaceOnChanges": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to. Possible values:\n* `[\"replication\"]`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectDatabasePostgresSqlUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to. Possible values:\n* `[\"replication\"]`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser": {
            "description": "Creates an user for a database cluster associated with a public cloud project.\n\nWith this resource you can create a user for the following database engine:\n\n  * `cassandra`\n  * `kafka`\n  * `kafkaConnect`\n  * `mysql`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst db = ovh.getCloudProjectDatabase({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZZ\",\n});\nconst user = new ovh.CloudProjectDatabaseUser(\"user\", {\n    serviceName: ovh_cloud_project_database.db.service_name,\n    engine: ovh_cloud_project_database.db.engine,\n    clusterId: ovh_cloud_project_database.db.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\ndb = ovh.get_cloud_project_database(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZZ\")\nuser = ovh.CloudProjectDatabaseUser(\"user\",\n    service_name=ovh_cloud_project_database[\"db\"][\"service_name\"],\n    engine=ovh_cloud_project_database[\"db\"][\"engine\"],\n    cluster_id=ovh_cloud_project_database[\"db\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var db = Ovh.GetCloudProjectDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZZ\",\n    });\n\n    var user = new Ovh.CloudProjectDatabaseUser(\"user\", new()\n    {\n        ServiceName = ovh_cloud_project_database.Db.Service_name,\n        Engine = ovh_cloud_project_database.Db.Engine,\n        ClusterId = ovh_cloud_project_database.Db.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupCloudProjectDatabase(ctx, \u0026GetCloudProjectDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewCloudProjectDatabaseUser(ctx, \"user\", \u0026ovh.CloudProjectDatabaseUserArgs{\n\t\t\tServiceName: pulumi.Any(ovh_cloud_project_database.Db.Service_name),\n\t\t\tEngine:      pulumi.Any(ovh_cloud_project_database.Db.Engine),\n\t\t\tClusterId:   pulumi.Any(ovh_cloud_project_database.Db.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabaseUser;\nimport com.pulumi.ovh.CloudProjectDatabaseUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var db = OvhFunctions.getCloudProjectDatabase(GetCloudProjectDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZZ\")\n            .build());\n\n        var user = new CloudProjectDatabaseUser(\"user\", CloudProjectDatabaseUserArgs.builder()        \n            .serviceName(ovh_cloud_project_database.db().service_name())\n            .engine(ovh_cloud_project_database.db().engine())\n            .clusterId(ovh_cloud_project_database.db().id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: ovh:CloudProjectDatabaseUser\n    properties:\n      serviceName: ${ovh_cloud_project_database.db.service_name}\n      engine: ${ovh_cloud_project_database.db.engine}\n      clusterId: ${ovh_cloud_project_database.db.id}\nvariables:\n  db:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectDatabase\n      Arguments:\n        serviceName: XXXX\n        engine: YYYY\n        clusterId: ZZZZ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed database clusters users can be imported using the `service_name`, `engine`, `cluster_id` and `id` of the user, separated by \"/\" E.g.,\n\n```sh\n $ pulumi import ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser my_user \u003cservice_name\u003e/\u003cengine\u003e/\u003ccluster_id\u003e/\u003cid\u003e\n```\n\n ",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. To get a full list of available engine visit :\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\\\nAvailable engines for this resource (other have specific resource):\n* `cassandra`\n* `kafka`\n* `kafkaConnect`\n* `mysql`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "engine",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. To get a full list of available engine visit :\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\\\nAvailable engines for this resource (other have specific resource):\n* `cassandra`\n* `kafka`\n* `kafkaConnect`\n* `mysql`\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectDatabaseUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add. To get a full list of available engine visit :\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\\\nAvailable engines for this resource (other have specific resource):\n* `cassandra`\n* `kafka`\n* `kafkaConnect`\n* `mysql`\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectFailoverIpAttach:CloudProjectFailoverIpAttach": {
            "description": "Attaches a failover IP address to a compute instance\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myfailoverip = new ovh.CloudProjectFailoverIpAttach(\"myfailoverip\", {\n    ip: \"XXXXXX\",\n    routedTo: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nmyfailoverip = ovh.CloudProjectFailoverIpAttach(\"myfailoverip\",\n    ip=\"XXXXXX\",\n    routed_to=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myfailoverip = new Ovh.CloudProjectFailoverIpAttach(\"myfailoverip\", new()\n    {\n        Ip = \"XXXXXX\",\n        RoutedTo = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudProjectFailoverIpAttach(ctx, \"myfailoverip\", \u0026ovh.CloudProjectFailoverIpAttachArgs{\n\t\t\tIp:          pulumi.String(\"XXXXXX\"),\n\t\t\tRoutedTo:    pulumi.String(\"XXXXXX\"),\n\t\t\tServiceName: pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectFailoverIpAttach;\nimport com.pulumi.ovh.CloudProjectFailoverIpAttachArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myfailoverip = new CloudProjectFailoverIpAttach(\"myfailoverip\", CloudProjectFailoverIpAttachArgs.builder()        \n            .ip(\"XXXXXX\")\n            .routedTo(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myfailoverip:\n    type: ovh:CloudProjectFailoverIpAttach\n    properties:\n      ip: XXXXXX\n      routedTo: XXXXXX\n      serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "block": {
                    "type": "string",
                    "description": "The IP block\n"
                },
                "continentCode": {
                    "type": "string",
                    "description": "Ip continent\n"
                },
                "geoLoc": {
                    "type": "string",
                    "description": "Ip location\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The failover ip address to attach\n"
                },
                "progress": {
                    "type": "integer",
                    "description": "Current operation progress in percent\n"
                },
                "routedTo": {
                    "type": "string",
                    "description": "The GUID of an instance to which the failover IP address is be attached\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Ip status, can be `ok` or `operationPending`\n"
                },
                "subType": {
                    "type": "string",
                    "description": "IP sub type\n"
                }
            },
            "required": [
                "block",
                "continentCode",
                "geoLoc",
                "ip",
                "progress",
                "routedTo",
                "serviceName",
                "status",
                "subType"
            ],
            "inputProperties": {
                "block": {
                    "type": "string",
                    "description": "The IP block\n"
                },
                "continentCode": {
                    "type": "string",
                    "description": "Ip continent\n"
                },
                "geoLoc": {
                    "type": "string",
                    "description": "Ip location\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The failover ip address to attach\n"
                },
                "routedTo": {
                    "type": "string",
                    "description": "The GUID of an instance to which the failover IP address is be attached\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectFailoverIpAttach resources.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "The IP block\n"
                    },
                    "continentCode": {
                        "type": "string",
                        "description": "Ip continent\n"
                    },
                    "geoLoc": {
                        "type": "string",
                        "description": "Ip location\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The failover ip address to attach\n"
                    },
                    "progress": {
                        "type": "integer",
                        "description": "Current operation progress in percent\n"
                    },
                    "routedTo": {
                        "type": "string",
                        "description": "The GUID of an instance to which the failover IP address is be attached\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Ip status, can be `ok` or `operationPending`\n"
                    },
                    "subType": {
                        "type": "string",
                        "description": "IP sub type\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectKube:CloudProjectKube": {
            "description": "Creates a OVH Managed Kubernetes Service cluster in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst mykube = new ovh.CloudProjectKube(\"mykube\", {\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    region: \"GRA7\",\n    privateNetworkId: xxxxxxxx_xxxx_xxxx_xxxxx_xxxxxxxxxxxx,\n    privateNetworkConfiguration: {\n        defaultVrackGateway: \"10.4.0.1\",\n        privateNetworkRoutingAsDefault: true,\n    },\n}, {\n    dependsOn: [ovh_cloud_project_network_private.network1],\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nmykube = ovh.CloudProjectKube(\"mykube\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    region=\"GRA7\",\n    private_network_id=xxxxxxxx_xxxx_xxxx_xxxxx_xxxxxxxxxxxx,\n    private_network_configuration=ovh.CloudProjectKubePrivateNetworkConfigurationArgs(\n        default_vrack_gateway=\"10.4.0.1\",\n        private_network_routing_as_default=True,\n    ),\n    opts=pulumi.ResourceOptions(depends_on=[ovh_cloud_project_network_private[\"network1\"]]))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mykube = new Ovh.CloudProjectKube(\"mykube\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Region = \"GRA7\",\n        PrivateNetworkId = xxxxxxxx_xxxx_xxxx_xxxxx_xxxxxxxxxxxx,\n        PrivateNetworkConfiguration = new Ovh.Inputs.CloudProjectKubePrivateNetworkConfigurationArgs\n        {\n            DefaultVrackGateway = \"10.4.0.1\",\n            PrivateNetworkRoutingAsDefault = true,\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn = new[]\n        {\n            ovh_cloud_project_network_private.Network1,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudProjectKube(ctx, \"mykube\", \u0026ovh.CloudProjectKubeArgs{\n\t\t\tServiceName:      pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tRegion:           pulumi.String(\"GRA7\"),\n\t\t\tPrivateNetworkId: pulumi.Any(xxxxxxxx_xxxx_xxxx_xxxxx_xxxxxxxxxxxx),\n\t\t\tPrivateNetworkConfiguration: \u0026CloudProjectKubePrivateNetworkConfigurationArgs{\n\t\t\t\tDefaultVrackGateway:            pulumi.String(\"10.4.0.1\"),\n\t\t\t\tPrivateNetworkRoutingAsDefault: pulumi.Bool(true),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tovh_cloud_project_network_private.Network1,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectKube;\nimport com.pulumi.ovh.CloudProjectKubeArgs;\nimport com.pulumi.ovh.inputs.CloudProjectKubePrivateNetworkConfigurationArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mykube = new CloudProjectKube(\"mykube\", CloudProjectKubeArgs.builder()        \n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .region(\"GRA7\")\n            .privateNetworkId(xxxxxxxx_xxxx_xxxx_xxxxx_xxxxxxxxxxxx)\n            .privateNetworkConfiguration(CloudProjectKubePrivateNetworkConfigurationArgs.builder()\n                .defaultVrackGateway(\"10.4.0.1\")\n                .privateNetworkRoutingAsDefault(true)\n                .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(ovh_cloud_project_network_private.network1())\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mykube:\n    type: ovh:CloudProjectKube\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      region: GRA7\n      privateNetworkId: ${[\"xxxxxxxx-xxxx-xxxx-xxxxx-xxxxxxxxxxxx\"]} #ovh_cloud_project_network_private.network1.regions_attributes[index(ovh_cloud_project_network_private.network1.regions_attributes.*.region, \"GRA7\")].openstackid\n      privateNetworkConfiguration:\n        defaultVrackGateway: 10.4.0.1\n        privateNetworkRoutingAsDefault: true\n    options:\n      dependson:\n        - ${ovh_cloud_project_network_private.network1}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed Kubernetes Service clusters can be imported using the `serviceName` and the `id` of the cluster, separated by \"/\" E.g.,\n\n```sh\n $ pulumi import ovh:index/cloudProjectKube:CloudProjectKube my_kube_cluster a6678gggjh76hggjh7f59/a123bc45-a1b2-34c5-678d-678ghg7676ebc\n```\n\n ",
            "properties": {
                "controlPlaneIsUpToDate": {
                    "type": "boolean",
                    "description": "True if control-plane is up to date.\n"
                },
                "isUpToDate": {
                    "type": "boolean",
                    "description": "True if all nodes and control-plane are up to date.\n"
                },
                "kubeconfig": {
                    "type": "string",
                    "description": "The kubeconfig file. Use this file to connect to your kubernetes cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the kubernetes cluster.\n"
                },
                "nextUpgradeVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Kubernetes versions available for upgrade.\n"
                },
                "nodesUrl": {
                    "type": "string",
                    "description": "Cluster nodes URL.\n"
                },
                "privateNetworkConfiguration": {
                    "$ref": "#/types/ovh:index/CloudProjectKubePrivateNetworkConfiguration:CloudProjectKubePrivateNetworkConfiguration",
                    "description": "The private network configuration\n* default_vrack_gateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.\n* private_network_routing_as_default - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.\n"
                },
                "privateNetworkId": {
                    "type": "string",
                    "description": "OpenStack private network ID to use.\nChanging this value delete the resource(including ETCD user data). Defaults - not use private network.\n"
                },
                "region": {
                    "type": "string",
                    "description": "a valid OVH public cloud region ID in which the kubernetes\ncluster will be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\nChanging this value recreates the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Cluster status. Should be normally set to 'READY'.\n"
                },
                "updatePolicy": {
                    "type": "string",
                    "description": "Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE]'.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Management URL of your cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "kubernetes version to use.\nChanging this value updates the resource. Defaults to latest available.\n"
                }
            },
            "required": [
                "controlPlaneIsUpToDate",
                "isUpToDate",
                "kubeconfig",
                "name",
                "nextUpgradeVersions",
                "nodesUrl",
                "region",
                "serviceName",
                "status",
                "updatePolicy",
                "url",
                "version"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the kubernetes cluster.\n"
                },
                "privateNetworkConfiguration": {
                    "$ref": "#/types/ovh:index/CloudProjectKubePrivateNetworkConfiguration:CloudProjectKubePrivateNetworkConfiguration",
                    "description": "The private network configuration\n* default_vrack_gateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.\n* private_network_routing_as_default - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.\n"
                },
                "privateNetworkId": {
                    "type": "string",
                    "description": "OpenStack private network ID to use.\nChanging this value delete the resource(including ETCD user data). Defaults - not use private network.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "a valid OVH public cloud region ID in which the kubernetes\ncluster will be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\nChanging this value recreates the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "updatePolicy": {
                    "type": "string",
                    "description": "Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE]'.\n"
                },
                "version": {
                    "type": "string",
                    "description": "kubernetes version to use.\nChanging this value updates the resource. Defaults to latest available.\n"
                }
            },
            "requiredInputs": [
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectKube resources.\n",
                "properties": {
                    "controlPlaneIsUpToDate": {
                        "type": "boolean",
                        "description": "True if control-plane is up to date.\n"
                    },
                    "isUpToDate": {
                        "type": "boolean",
                        "description": "True if all nodes and control-plane are up to date.\n"
                    },
                    "kubeconfig": {
                        "type": "string",
                        "description": "The kubeconfig file. Use this file to connect to your kubernetes cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the kubernetes cluster.\n"
                    },
                    "nextUpgradeVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Kubernetes versions available for upgrade.\n"
                    },
                    "nodesUrl": {
                        "type": "string",
                        "description": "Cluster nodes URL.\n"
                    },
                    "privateNetworkConfiguration": {
                        "$ref": "#/types/ovh:index/CloudProjectKubePrivateNetworkConfiguration:CloudProjectKubePrivateNetworkConfiguration",
                        "description": "The private network configuration\n* default_vrack_gateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.\n* private_network_routing_as_default - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.\n"
                    },
                    "privateNetworkId": {
                        "type": "string",
                        "description": "OpenStack private network ID to use.\nChanging this value delete the resource(including ETCD user data). Defaults - not use private network.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "a valid OVH public cloud region ID in which the kubernetes\ncluster will be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\nChanging this value recreates the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Cluster status. Should be normally set to 'READY'.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE]'.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Management URL of your cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "kubernetes version to use.\nChanging this value updates the resource. Defaults to latest available.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectKubeIpRestrictions:CloudProjectKubeIpRestrictions": {
            "description": "Apply IP restrictions to an OVHcloud Managed Kubernetes cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vrackOnly = new ovh.CloudProjectKubeIpRestrictions(\"vrack_only\", {\n    ips: [\"10.42.0.0/16\"],\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nvrack_only = ovh.CloudProjectKubeIpRestrictions(\"vrackOnly\",\n    ips=[\"10.42.0.0/16\"],\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vrackOnly = new Ovh.CloudProjectKubeIpRestrictions(\"vrackOnly\", new()\n    {\n        Ips = new[]\n        {\n            \"10.42.0.0/16\",\n        },\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudProjectKubeIpRestrictions(ctx, \"vrackOnly\", \u0026ovh.CloudProjectKubeIpRestrictionsArgs{\n\t\t\tIps: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.42.0.0/16\"),\n\t\t\t},\n\t\t\tKubeId:      pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectKubeIpRestrictions;\nimport com.pulumi.ovh.CloudProjectKubeIpRestrictionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vrackOnly = new CloudProjectKubeIpRestrictions(\"vrackOnly\", CloudProjectKubeIpRestrictionsArgs.builder()        \n            .ips(\"10.42.0.0/16\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackOnly:\n    type: ovh:CloudProjectKubeIpRestrictions\n    properties:\n      ips:\n        - 10.42.0.0/16\n      kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVHcloud Managed Kubernetes Service cluster IP restrictions can be imported using the `id` of the IP restrictions (which is the same ID as the kubernetes which it depends on),\n\n```sh\n $ pulumi import ovh:index/cloudProjectKubeIpRestrictions:CloudProjectKubeIpRestrictions iprestrictions xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n```\n\n ",
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of CIDR authorized to interact with the managed Kubernetes cluster.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed Kubernetes cluster.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "ips",
                "kubeId",
                "serviceName"
            ],
            "inputProperties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of CIDR authorized to interact with the managed Kubernetes cluster.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed Kubernetes cluster.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ips",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectKubeIpRestrictions resources.\n",
                "properties": {
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of CIDR authorized to interact with the managed Kubernetes cluster.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed Kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectKubeNodePool:CloudProjectKubeNodePool": {
            "description": "Creates a nodepool in a OVH Managed Kubernetes Service cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst pool = new ovh.CloudProjectKubeNodePool(\"pool\", {\n    desiredNodes: 3,\n    flavorName: \"b2-7\",\n    kubeId: \"xxxxxxxx-2bf9-xxxx-xxxx-xxxxxxxxxxxx\",\n    maxNodes: 3,\n    minNodes: 3,\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    template: {\n        metadata: {\n            annotations: {\n                k1: \"v1\",\n                k2: \"v2\",\n            },\n            finalizers: [\n                \"F1\",\n                \"F2\",\n            ],\n            labels: {\n                k3: \"v3\",\n                k4: \"v4\",\n            },\n        },\n        spec: {\n            taints: [{\n                effect: \"PreferNoSchedule\",\n                key: \"k\",\n                value: \"v\",\n            }],\n            unschedulable: false,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\npool = ovh.CloudProjectKubeNodePool(\"pool\",\n    desired_nodes=3,\n    flavor_name=\"b2-7\",\n    kube_id=\"xxxxxxxx-2bf9-xxxx-xxxx-xxxxxxxxxxxx\",\n    max_nodes=3,\n    min_nodes=3,\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    template=ovh.CloudProjectKubeNodePoolTemplateArgs(\n        metadata=ovh.CloudProjectKubeNodePoolTemplateMetadataArgs(\n            annotations={\n                \"k1\": \"v1\",\n                \"k2\": \"v2\",\n            },\n            finalizers=[\n                \"F1\",\n                \"F2\",\n            ],\n            labels={\n                \"k3\": \"v3\",\n                \"k4\": \"v4\",\n            },\n        ),\n        spec=ovh.CloudProjectKubeNodePoolTemplateSpecArgs(\n            taints=[{\n                \"effect\": \"PreferNoSchedule\",\n                \"key\": \"k\",\n                \"value\": \"v\",\n            }],\n            unschedulable=False,\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pool = new Ovh.CloudProjectKubeNodePool(\"pool\", new()\n    {\n        DesiredNodes = 3,\n        FlavorName = \"b2-7\",\n        KubeId = \"xxxxxxxx-2bf9-xxxx-xxxx-xxxxxxxxxxxx\",\n        MaxNodes = 3,\n        MinNodes = 3,\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Template = new Ovh.Inputs.CloudProjectKubeNodePoolTemplateArgs\n        {\n            Metadata = new Ovh.Inputs.CloudProjectKubeNodePoolTemplateMetadataArgs\n            {\n                Annotations = \n                {\n                    { \"k1\", \"v1\" },\n                    { \"k2\", \"v2\" },\n                },\n                Finalizers = new[]\n                {\n                    \"F1\",\n                    \"F2\",\n                },\n                Labels = \n                {\n                    { \"k3\", \"v3\" },\n                    { \"k4\", \"v4\" },\n                },\n            },\n            Spec = new Ovh.Inputs.CloudProjectKubeNodePoolTemplateSpecArgs\n            {\n                Taints = new[]\n                {\n                    \n                    {\n                        { \"effect\", \"PreferNoSchedule\" },\n                        { \"key\", \"k\" },\n                        { \"value\", \"v\" },\n                    },\n                },\n                Unschedulable = false,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudProjectKubeNodePool(ctx, \"pool\", \u0026ovh.CloudProjectKubeNodePoolArgs{\n\t\t\tDesiredNodes: pulumi.Int(3),\n\t\t\tFlavorName:   pulumi.String(\"b2-7\"),\n\t\t\tKubeId:       pulumi.String(\"xxxxxxxx-2bf9-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tMaxNodes:     pulumi.Int(3),\n\t\t\tMinNodes:     pulumi.Int(3),\n\t\t\tServiceName:  pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tTemplate: \u0026CloudProjectKubeNodePoolTemplateArgs{\n\t\t\t\tMetadata: \u0026CloudProjectKubeNodePoolTemplateMetadataArgs{\n\t\t\t\t\tAnnotations: pulumi.StringMap{\n\t\t\t\t\t\t\"k1\": pulumi.String(\"v1\"),\n\t\t\t\t\t\t\"k2\": pulumi.String(\"v2\"),\n\t\t\t\t\t},\n\t\t\t\t\tFinalizers: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"F1\"),\n\t\t\t\t\t\tpulumi.String(\"F2\"),\n\t\t\t\t\t},\n\t\t\t\t\tLabels: pulumi.StringMap{\n\t\t\t\t\t\t\"k3\": pulumi.String(\"v3\"),\n\t\t\t\t\t\t\"k4\": pulumi.String(\"v4\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tSpec: \u0026CloudProjectKubeNodePoolTemplateSpecArgs{\n\t\t\t\t\tTaints: pulumi.AnyMapArray{\n\t\t\t\t\t\tpulumi.AnyMap{\n\t\t\t\t\t\t\t\"effect\": pulumi.Any(\"PreferNoSchedule\"),\n\t\t\t\t\t\t\t\"key\":    pulumi.Any(\"k\"),\n\t\t\t\t\t\t\t\"value\":  pulumi.Any(\"v\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tUnschedulable: pulumi.Bool(false),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectKubeNodePool;\nimport com.pulumi.ovh.CloudProjectKubeNodePoolArgs;\nimport com.pulumi.ovh.inputs.CloudProjectKubeNodePoolTemplateArgs;\nimport com.pulumi.ovh.inputs.CloudProjectKubeNodePoolTemplateMetadataArgs;\nimport com.pulumi.ovh.inputs.CloudProjectKubeNodePoolTemplateSpecArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var pool = new CloudProjectKubeNodePool(\"pool\", CloudProjectKubeNodePoolArgs.builder()        \n            .desiredNodes(3)\n            .flavorName(\"b2-7\")\n            .kubeId(\"xxxxxxxx-2bf9-xxxx-xxxx-xxxxxxxxxxxx\")\n            .maxNodes(3)\n            .minNodes(3)\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .template(CloudProjectKubeNodePoolTemplateArgs.builder()\n                .metadata(CloudProjectKubeNodePoolTemplateMetadataArgs.builder()\n                    .annotations(Map.ofEntries(\n                        Map.entry(\"k1\", \"v1\"),\n                        Map.entry(\"k2\", \"v2\")\n                    ))\n                    .finalizers(                    \n                        \"F1\",\n                        \"F2\")\n                    .labels(Map.ofEntries(\n                        Map.entry(\"k3\", \"v3\"),\n                        Map.entry(\"k4\", \"v4\")\n                    ))\n                    .build())\n                .spec(CloudProjectKubeNodePoolTemplateSpecArgs.builder()\n                    .taints(Map.ofEntries(\n                        Map.entry(\"effect\", \"PreferNoSchedule\"),\n                        Map.entry(\"key\", \"k\"),\n                        Map.entry(\"value\", \"v\")\n                    ))\n                    .unschedulable(false)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  pool:\n    type: ovh:CloudProjectKubeNodePool\n    properties:\n      desiredNodes: 3\n      flavorName: b2-7\n      kubeId: xxxxxxxx-2bf9-xxxx-xxxx-xxxxxxxxxxxx\n      maxNodes: 3\n      minNodes: 3\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      template:\n        metadata:\n          annotations:\n            k1: v1\n            k2: v2\n          finalizers:\n            - F1\n            - F2\n          labels:\n            k3: v3\n            k4: v4\n        spec:\n          taints:\n            - effect: PreferNoSchedule\n              key: k\n              value: v\n          unschedulable: false\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "antiAffinity": {
                    "type": "boolean",
                    "description": "should the pool use the anti-affinity feature. Default to `false`.\n"
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling for the pool. Default to `false`.\n"
                },
                "availableNodes": {
                    "type": "integer",
                    "description": "Number of nodes which are actually ready in the pool\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation date\n"
                },
                "currentNodes": {
                    "type": "integer",
                    "description": "Number of nodes present in the pool\n"
                },
                "desiredNodes": {
                    "type": "integer",
                    "description": "number of nodes to start.\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "a valid OVH public cloud flavor ID in which the nodes will be started.\nEx: \"b2-7\". Changing this value recreates the resource.\nYou can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed kubernetes cluster.\n"
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "maximum number of nodes allowed in the pool.\nSetting `desired_nodes` over this value will raise an error.\n"
                },
                "minNodes": {
                    "type": "integer",
                    "description": "minimum number of nodes allowed in the pool.\nSetting `desired_nodes` under this value will raise an error.\n"
                },
                "monthlyBilled": {
                    "type": "boolean",
                    "description": "should the nodes be billed on a monthly basis. Default to `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the nodepool.\nChanging this value recreates the resource.\nWarning: \"_\" char is not allowed!\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project id\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "sizeStatus": {
                    "type": "string",
                    "description": "Status describing the state between number of nodes wanted and available ones\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status\n"
                },
                "template": {
                    "$ref": "#/types/ovh:index/CloudProjectKubeNodePoolTemplate:CloudProjectKubeNodePoolTemplate",
                    "description": "Node pool template\n"
                },
                "upToDateNodes": {
                    "type": "integer",
                    "description": "Number of nodes with latest version installed in the pool\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date\n"
                }
            },
            "required": [
                "availableNodes",
                "createdAt",
                "currentNodes",
                "desiredNodes",
                "flavor",
                "flavorName",
                "kubeId",
                "maxNodes",
                "minNodes",
                "name",
                "projectId",
                "serviceName",
                "sizeStatus",
                "status",
                "upToDateNodes",
                "updatedAt"
            ],
            "inputProperties": {
                "antiAffinity": {
                    "type": "boolean",
                    "description": "should the pool use the anti-affinity feature. Default to `false`.\n",
                    "willReplaceOnChanges": true
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling for the pool. Default to `false`.\n"
                },
                "desiredNodes": {
                    "type": "integer",
                    "description": "number of nodes to start.\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "a valid OVH public cloud flavor ID in which the nodes will be started.\nEx: \"b2-7\". Changing this value recreates the resource.\nYou can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/\n",
                    "willReplaceOnChanges": true
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed kubernetes cluster.\n",
                    "willReplaceOnChanges": true
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "maximum number of nodes allowed in the pool.\nSetting `desired_nodes` over this value will raise an error.\n"
                },
                "minNodes": {
                    "type": "integer",
                    "description": "minimum number of nodes allowed in the pool.\nSetting `desired_nodes` under this value will raise an error.\n"
                },
                "monthlyBilled": {
                    "type": "boolean",
                    "description": "should the nodes be billed on a monthly basis. Default to `false`.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the nodepool.\nChanging this value recreates the resource.\nWarning: \"_\" char is not allowed!\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "template": {
                    "$ref": "#/types/ovh:index/CloudProjectKubeNodePoolTemplate:CloudProjectKubeNodePoolTemplate",
                    "description": "Node pool template\n"
                }
            },
            "requiredInputs": [
                "flavorName",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectKubeNodePool resources.\n",
                "properties": {
                    "antiAffinity": {
                        "type": "boolean",
                        "description": "should the pool use the anti-affinity feature. Default to `false`.\n",
                        "willReplaceOnChanges": true
                    },
                    "autoscale": {
                        "type": "boolean",
                        "description": "Enable auto-scaling for the pool. Default to `false`.\n"
                    },
                    "availableNodes": {
                        "type": "integer",
                        "description": "Number of nodes which are actually ready in the pool\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date\n"
                    },
                    "currentNodes": {
                        "type": "integer",
                        "description": "Number of nodes present in the pool\n"
                    },
                    "desiredNodes": {
                        "type": "integer",
                        "description": "number of nodes to start.\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "Flavor name\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "a valid OVH public cloud flavor ID in which the nodes will be started.\nEx: \"b2-7\". Changing this value recreates the resource.\nYou can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/\n",
                        "willReplaceOnChanges": true
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxNodes": {
                        "type": "integer",
                        "description": "maximum number of nodes allowed in the pool.\nSetting `desired_nodes` over this value will raise an error.\n"
                    },
                    "minNodes": {
                        "type": "integer",
                        "description": "minimum number of nodes allowed in the pool.\nSetting `desired_nodes` under this value will raise an error.\n"
                    },
                    "monthlyBilled": {
                        "type": "boolean",
                        "description": "should the nodes be billed on a monthly basis. Default to `false`.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the nodepool.\nChanging this value recreates the resource.\nWarning: \"_\" char is not allowed!\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project id\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "sizeStatus": {
                        "type": "string",
                        "description": "Status describing the state between number of nodes wanted and available ones\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status\n"
                    },
                    "template": {
                        "$ref": "#/types/ovh:index/CloudProjectKubeNodePoolTemplate:CloudProjectKubeNodePoolTemplate",
                        "description": "Node pool template\n"
                    },
                    "upToDateNodes": {
                        "type": "integer",
                        "description": "Number of nodes with latest version installed in the pool\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectKubeOidc:CloudProjectKubeOidc": {
            "description": "Creates an OIDC configuration in an OVHcloud Managed Kubernetes cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst my_oidc = new ovh.CloudProjectKubeOidc(\"my-oidc\", {\n    serviceName: _var.projectid,\n    kubeId: ovh_cloud_project_kube.mykube.id,\n    clientId: \"xxx\",\n    issuerUrl: \"https://ovh.com\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nmy_oidc = ovh.CloudProjectKubeOidc(\"my-oidc\",\n    service_name=var[\"projectid\"],\n    kube_id=ovh_cloud_project_kube[\"mykube\"][\"id\"],\n    client_id=\"xxx\",\n    issuer_url=\"https://ovh.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var my_oidc = new Ovh.CloudProjectKubeOidc(\"my-oidc\", new()\n    {\n        ServiceName = @var.Projectid,\n        KubeId = ovh_cloud_project_kube.Mykube.Id,\n        ClientId = \"xxx\",\n        IssuerUrl = \"https://ovh.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudProjectKubeOidc(ctx, \"my-oidc\", \u0026ovh.CloudProjectKubeOidcArgs{\n\t\t\tServiceName: pulumi.Any(_var.Projectid),\n\t\t\tKubeId:      pulumi.Any(ovh_cloud_project_kube.Mykube.Id),\n\t\t\tClientId:    pulumi.String(\"xxx\"),\n\t\t\tIssuerUrl:   pulumi.String(\"https://ovh.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectKubeOidc;\nimport com.pulumi.ovh.CloudProjectKubeOidcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var my_oidc = new CloudProjectKubeOidc(\"my-oidc\", CloudProjectKubeOidcArgs.builder()        \n            .serviceName(var_.projectid())\n            .kubeId(ovh_cloud_project_kube.mykube().id())\n            .clientId(\"xxx\")\n            .issuerUrl(\"https://ovh.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  my-oidc:\n    type: ovh:CloudProjectKubeOidc\n    properties:\n      serviceName: ${var.projectid}\n      kubeId: ${ovh_cloud_project_kube.mykube.id}\n      clientId: xxx\n      issuerUrl: https://ovh.com\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The OIDC client ID.\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "The OIDC issuer url.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The ID of the managed kubernetes cluster.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "clientId",
                "issuerUrl",
                "kubeId",
                "serviceName"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string",
                    "description": "The OIDC client ID.\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "The OIDC issuer url.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The ID of the managed kubernetes cluster.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clientId",
                "issuerUrl",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectKubeOidc resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "The OIDC client ID.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "The OIDC issuer url.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The ID of the managed kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectNetworkPrivate:CloudProjectNetworkPrivate": {
            "description": "Creates a private network in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst net = new ovh.CloudProjectNetworkPrivate(\"net\", {\n    regions: [\n        \"GRA1\",\n        \"BHS1\",\n    ],\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nnet = ovh.CloudProjectNetworkPrivate(\"net\",\n    regions=[\n        \"GRA1\",\n        \"BHS1\",\n    ],\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var net = new Ovh.CloudProjectNetworkPrivate(\"net\", new()\n    {\n        Regions = new[]\n        {\n            \"GRA1\",\n            \"BHS1\",\n        },\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudProjectNetworkPrivate(ctx, \"net\", \u0026ovh.CloudProjectNetworkPrivateArgs{\n\t\t\tRegions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"GRA1\"),\n\t\t\t\tpulumi.String(\"BHS1\"),\n\t\t\t},\n\t\t\tServiceName: pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectNetworkPrivate;\nimport com.pulumi.ovh.CloudProjectNetworkPrivateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var net = new CloudProjectNetworkPrivate(\"net\", CloudProjectNetworkPrivateArgs.builder()        \n            .regions(            \n                \"GRA1\",\n                \"BHS1\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  net:\n    type: ovh:CloudProjectNetworkPrivate\n    properties:\n      regions:\n        - GRA1\n        - BHS1\n      serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "an array of valid OVH public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                },
                "regionsAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectNetworkPrivateRegionsAttribute:CloudProjectNetworkPrivateRegionsAttribute"
                    },
                    "description": "A map representing information about the region.\n* `regions_attributes/region` - The id of the region.\n* `regions_attributes/status` - The status of the network in the region.\n* `regions_attributes/openstackid` - The private network id in the region.\n"
                },
                "regionsStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectNetworkPrivateRegionsStatus:CloudProjectNetworkPrivateRegionsStatus"
                    },
                    "description": "(Deprecated) A map representing the status of the network per region.\n* `regions_status/region` - (Deprecated) The id of the region.\n* `regions_status/status` - (Deprecated) The status of the network in the region.\n",
                    "deprecationMessage": "use the regions_attributes field instead"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                },
                "type": {
                    "type": "string",
                    "description": "the type of the network. Either 'private' or 'public'.\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n"
                }
            },
            "required": [
                "name",
                "regions",
                "regionsAttributes",
                "regionsStatuses",
                "serviceName",
                "status",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "an array of valid OVH public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectNetworkPrivate resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the network.\n"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "an array of valid OVH public cloud region ID in which the network\nwill be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n",
                        "willReplaceOnChanges": true
                    },
                    "regionsAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudProjectNetworkPrivateRegionsAttribute:CloudProjectNetworkPrivateRegionsAttribute"
                        },
                        "description": "A map representing information about the region.\n* `regions_attributes/region` - The id of the region.\n* `regions_attributes/status` - The status of the network in the region.\n* `regions_attributes/openstackid` - The private network id in the region.\n"
                    },
                    "regionsStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudProjectNetworkPrivateRegionsStatus:CloudProjectNetworkPrivateRegionsStatus"
                        },
                        "description": "(Deprecated) A map representing the status of the network per region.\n* `regions_status/region` - (Deprecated) The id of the region.\n* `regions_status/status` - (Deprecated) The status of the network in the region.\n",
                        "deprecationMessage": "use the regions_attributes field instead"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "the type of the network. Either 'private' or 'public'.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "a vlan id to associate with the network.\nChanging this value recreates the resource. Defaults to 0.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectNetworkPrivateSubnet:CloudProjectNetworkPrivateSubnet": {
            "description": "Creates a subnet in a private network of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst subnet = new ovh.CloudProjectNetworkPrivateSubnet(\"subnet\", {\n    dhcp: true,\n    end: \"192.168.168.200\",\n    network: \"192.168.168.0/24\",\n    networkId: \"0234543\",\n    noGateway: false,\n    region: \"GRA1\",\n    serviceName: \"xxxxx\",\n    start: \"192.168.168.100\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nsubnet = ovh.CloudProjectNetworkPrivateSubnet(\"subnet\",\n    dhcp=True,\n    end=\"192.168.168.200\",\n    network=\"192.168.168.0/24\",\n    network_id=\"0234543\",\n    no_gateway=False,\n    region=\"GRA1\",\n    service_name=\"xxxxx\",\n    start=\"192.168.168.100\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var subnet = new Ovh.CloudProjectNetworkPrivateSubnet(\"subnet\", new()\n    {\n        Dhcp = true,\n        End = \"192.168.168.200\",\n        Network = \"192.168.168.0/24\",\n        NetworkId = \"0234543\",\n        NoGateway = false,\n        Region = \"GRA1\",\n        ServiceName = \"xxxxx\",\n        Start = \"192.168.168.100\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudProjectNetworkPrivateSubnet(ctx, \"subnet\", \u0026ovh.CloudProjectNetworkPrivateSubnetArgs{\n\t\t\tDhcp:        pulumi.Bool(true),\n\t\t\tEnd:         pulumi.String(\"192.168.168.200\"),\n\t\t\tNetwork:     pulumi.String(\"192.168.168.0/24\"),\n\t\t\tNetworkId:   pulumi.String(\"0234543\"),\n\t\t\tNoGateway:   pulumi.Bool(false),\n\t\t\tRegion:      pulumi.String(\"GRA1\"),\n\t\t\tServiceName: pulumi.String(\"xxxxx\"),\n\t\t\tStart:       pulumi.String(\"192.168.168.100\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectNetworkPrivateSubnet;\nimport com.pulumi.ovh.CloudProjectNetworkPrivateSubnetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var subnet = new CloudProjectNetworkPrivateSubnet(\"subnet\", CloudProjectNetworkPrivateSubnetArgs.builder()        \n            .dhcp(true)\n            .end(\"192.168.168.200\")\n            .network(\"192.168.168.0/24\")\n            .networkId(\"0234543\")\n            .noGateway(false)\n            .region(\"GRA1\")\n            .serviceName(\"xxxxx\")\n            .start(\"192.168.168.100\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  subnet:\n    type: ovh:CloudProjectNetworkPrivateSubnet\n    properties:\n      dhcp: true\n      end: 192.168.168.200\n      network: 192.168.168.0/24\n      networkId: 0234543\n      noGateway: false\n      region: GRA1\n      serviceName: xxxxx\n      start: 192.168.168.100\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "Ip Block representing the subnet cidr.\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n"
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "The IP of the gateway\n"
                },
                "ipPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectNetworkPrivateSubnetIpPool:CloudProjectNetworkPrivateSubnetIpPool"
                    },
                    "description": "List of ip pools allocated in the subnet.\n* `ip_pools/network` - Global network with cidr.\n* `ip_pools/region` - Region where this subnet is created.\n* `ip_pools/dhcp` - DHCP enabled.\n* `ip_pools/end` - Last ip for this region.\n* `ip_pools/start` - First ip for this region.\n"
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network.\nChanging this forces a new resource to be created.\n"
                },
                "noGateway": {
                    "type": "boolean",
                    "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n"
                }
            },
            "required": [
                "cidr",
                "end",
                "gatewayIp",
                "ipPools",
                "network",
                "networkId",
                "region",
                "serviceName",
                "start"
            ],
            "inputProperties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n",
                    "willReplaceOnChanges": true
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region.\nChanging this value recreates the subnet.\n",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network.\nChanging this forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "noGateway": {
                    "type": "boolean",
                    "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region.\nChanging this value recreates the subnet.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "end",
                "network",
                "networkId",
                "region",
                "serviceName",
                "start"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectNetworkPrivateSubnet resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "Ip Block representing the subnet cidr.\n"
                    },
                    "dhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP.\nChanging this forces a new resource to be created. Defaults to false.\n_\n",
                        "willReplaceOnChanges": true
                    },
                    "end": {
                        "type": "string",
                        "description": "Last ip for this region.\nChanging this value recreates the subnet.\n",
                        "willReplaceOnChanges": true
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "The IP of the gateway\n"
                    },
                    "ipPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudProjectNetworkPrivateSubnetIpPool:CloudProjectNetworkPrivateSubnetIpPool"
                        },
                        "description": "List of ip pools allocated in the subnet.\n* `ip_pools/network` - Global network with cidr.\n* `ip_pools/region` - Region where this subnet is created.\n* `ip_pools/dhcp` - DHCP enabled.\n* `ip_pools/end` - Last ip for this region.\n* `ip_pools/start` - First ip for this region.\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "Global network in CIDR format.\nChanging this value recreates the subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The id of the network.\nChanging this forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "noGateway": {
                        "type": "boolean",
                        "description": "Set to true if you don't want to set a default gateway IP.\nChanging this value recreates the resource. Defaults to false.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which the network subnet will be created.\nEx.: \"GRA1\". Changing this value recreates the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "start": {
                        "type": "string",
                        "description": "First ip for this region.\nChanging this value recreates the subnet.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/cloudProjectUser:CloudProjectUser": {
            "description": "Creates a user in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst user1 = new ovh.CloudProjectUser(\"user1\", {\n    serviceName: \"XXX\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nuser1 = ovh.CloudProjectUser(\"user1\", service_name=\"XXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user1 = new Ovh.CloudProjectUser(\"user1\", new()\n    {\n        ServiceName = \"XXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewCloudProjectUser(ctx, \"user1\", \u0026ovh.CloudProjectUserArgs{\n\t\t\tServiceName: pulumi.String(\"XXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectUser;\nimport com.pulumi.ovh.CloudProjectUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user1 = new CloudProjectUser(\"user1\", CloudProjectUserArgs.builder()        \n            .serviceName(\"XXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user1:\n    type: ovh:CloudProjectUser\n    properties:\n      serviceName: XXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "the date the user was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) the password generated for the user. The password can\nbe used with the Openstack API. This attribute is sensitive and will only be\nretrieve once during creation.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "The name of a role. See `role_names`.\n"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role names. Values can be: \n- administrator,\n- ai_training_operator\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/CloudProjectUserRole:CloudProjectUserRole"
                    },
                    "description": "A list of roles associated with the user.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the user. should be normally set to 'ok'.\n"
                },
                "username": {
                    "type": "string",
                    "description": "the username generated for the user. This username can be used with\nthe Openstack API.\n"
                }
            },
            "required": [
                "creationDate",
                "openstackRc",
                "password",
                "roles",
                "serviceName",
                "status",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n",
                    "willReplaceOnChanges": true
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "The name of a role. See `role_names`.\n",
                    "willReplaceOnChanges": true
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role names. Values can be: \n- administrator,\n- ai_training_operator\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProjectUser resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "the date the user was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description associated with the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "openstackRc": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "a convenient map representing an openstack_rc file.\nNote: no password nor sensitive token is set in this map.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) the password generated for the user. The password can\nbe used with the Openstack API. This attribute is sensitive and will only be\nretrieve once during creation.\n"
                    },
                    "roleName": {
                        "type": "string",
                        "description": "The name of a role. See `role_names`.\n",
                        "willReplaceOnChanges": true
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of role names. Values can be: \n- administrator,\n- ai_training_operator\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n",
                        "willReplaceOnChanges": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/CloudProjectUserRole:CloudProjectUserRole"
                        },
                        "description": "A list of roles associated with the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the user. should be normally set to 'ok'.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "the username generated for the user. This username can be used with\nthe Openstack API.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/dbaasLogsInput:DbaasLogsInput": {
            "description": "Creates a dbaas logs input.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst logstash = ovh.getDbaasLogsInputEngine({\n    name: \"logstash\",\n    version: \"7.x\",\n});\nconst stream = new ovh.DbaasLogsOutputGraylogStream(\"stream\", {\n    serviceName: \"....\",\n    title: \"my stream\",\n    description: \"my graylog stream\",\n});\nconst input = new ovh.DbaasLogsInput(\"input\", {\n    serviceName: stream.serviceName,\n    description: stream.description,\n    title: stream.title,\n    engineId: logstash.then(logstash =\u003e logstash.id),\n    streamId: stream.id,\n    allowedNetworks: [\"10.0.0.0/16\"],\n    exposedPort: \"6154\",\n    nbInstance: 2,\n    configuration: {\n        logstash: {\n            inputSection: `beats {\n  port =\u003e 6514\n  ssl =\u003e true\n  ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n  ssl_key =\u003e \"/etc/ssl/private/server.key\"\n}\n`,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\nlogstash = ovh.get_dbaas_logs_input_engine(name=\"logstash\",\n    version=\"7.x\")\nstream = ovh.DbaasLogsOutputGraylogStream(\"stream\",\n    service_name=\"....\",\n    title=\"my stream\",\n    description=\"my graylog stream\")\ninput = ovh.DbaasLogsInput(\"input\",\n    service_name=stream.service_name,\n    description=stream.description,\n    title=stream.title,\n    engine_id=logstash.id,\n    stream_id=stream.id,\n    allowed_networks=[\"10.0.0.0/16\"],\n    exposed_port=\"6154\",\n    nb_instance=2,\n    configuration=ovh.DbaasLogsInputConfigurationArgs(\n        logstash=ovh.DbaasLogsInputConfigurationLogstashArgs(\n            input_section=\"\"\"beats {\n  port =\u003e 6514\n  ssl =\u003e true\n  ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n  ssl_key =\u003e \"/etc/ssl/private/server.key\"\n}\n\"\"\",\n        ),\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var logstash = Ovh.GetDbaasLogsInputEngine.Invoke(new()\n    {\n        Name = \"logstash\",\n        Version = \"7.x\",\n    });\n\n    var stream = new Ovh.DbaasLogsOutputGraylogStream(\"stream\", new()\n    {\n        ServiceName = \"....\",\n        Title = \"my stream\",\n        Description = \"my graylog stream\",\n    });\n\n    var input = new Ovh.DbaasLogsInput(\"input\", new()\n    {\n        ServiceName = stream.ServiceName,\n        Description = stream.Description,\n        Title = stream.Title,\n        EngineId = logstash.Apply(getDbaasLogsInputEngineResult =\u003e getDbaasLogsInputEngineResult.Id),\n        StreamId = stream.Id,\n        AllowedNetworks = new[]\n        {\n            \"10.0.0.0/16\",\n        },\n        ExposedPort = \"6154\",\n        NbInstance = 2,\n        Configuration = new Ovh.Inputs.DbaasLogsInputConfigurationArgs\n        {\n            Logstash = new Ovh.Inputs.DbaasLogsInputConfigurationLogstashArgs\n            {\n                InputSection = @\"beats {\n  port =\u003e 6514\n  ssl =\u003e true\n  ssl_certificate =\u003e \"\"/etc/ssl/private/server.crt\"\"\n  ssl_key =\u003e \"\"/etc/ssl/private/server.key\"\"\n}\n\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlogstash, err := ovh.GetDbaasLogsInputEngine(ctx, \u0026GetDbaasLogsInputEngineArgs{\n\t\t\tName:    pulumi.StringRef(\"logstash\"),\n\t\t\tVersion: pulumi.StringRef(\"7.x\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tstream, err := ovh.NewDbaasLogsOutputGraylogStream(ctx, \"stream\", \u0026ovh.DbaasLogsOutputGraylogStreamArgs{\n\t\t\tServiceName: pulumi.String(\"....\"),\n\t\t\tTitle:       pulumi.String(\"my stream\"),\n\t\t\tDescription: pulumi.String(\"my graylog stream\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewDbaasLogsInput(ctx, \"input\", \u0026ovh.DbaasLogsInputArgs{\n\t\t\tServiceName: stream.ServiceName,\n\t\t\tDescription: stream.Description,\n\t\t\tTitle:       stream.Title,\n\t\t\tEngineId:    pulumi.String(logstash.Id),\n\t\t\tStreamId:    stream.ID(),\n\t\t\tAllowedNetworks: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.0.0.0/16\"),\n\t\t\t},\n\t\t\tExposedPort: pulumi.String(\"6154\"),\n\t\t\tNbInstance:  pulumi.Int(2),\n\t\t\tConfiguration: \u0026DbaasLogsInputConfigurationArgs{\n\t\t\t\tLogstash: \u0026DbaasLogsInputConfigurationLogstashArgs{\n\t\t\t\t\tInputSection: pulumi.String(fmt.Sprintf(`beats {\n  port =\u003e 6514\n  ssl =\u003e true\n  ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n  ssl_key =\u003e \"/etc/ssl/private/server.key\"\n}\n`)),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetDbaasLogsInputEngineArgs;\nimport com.pulumi.ovh.DbaasLogsOutputGraylogStream;\nimport com.pulumi.ovh.DbaasLogsOutputGraylogStreamArgs;\nimport com.pulumi.ovh.DbaasLogsInput;\nimport com.pulumi.ovh.DbaasLogsInputArgs;\nimport com.pulumi.ovh.inputs.DbaasLogsInputConfigurationArgs;\nimport com.pulumi.ovh.inputs.DbaasLogsInputConfigurationLogstashArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var logstash = OvhFunctions.getDbaasLogsInputEngine(GetDbaasLogsInputEngineArgs.builder()\n            .name(\"logstash\")\n            .version(\"7.x\")\n            .build());\n\n        var stream = new DbaasLogsOutputGraylogStream(\"stream\", DbaasLogsOutputGraylogStreamArgs.builder()        \n            .serviceName(\"....\")\n            .title(\"my stream\")\n            .description(\"my graylog stream\")\n            .build());\n\n        var input = new DbaasLogsInput(\"input\", DbaasLogsInputArgs.builder()        \n            .serviceName(stream.serviceName())\n            .description(stream.description())\n            .title(stream.title())\n            .engineId(logstash.applyValue(getDbaasLogsInputEngineResult -\u003e getDbaasLogsInputEngineResult.id()))\n            .streamId(stream.id())\n            .allowedNetworks(\"10.0.0.0/16\")\n            .exposedPort(\"6154\")\n            .nbInstance(2)\n            .configuration(DbaasLogsInputConfigurationArgs.builder()\n                .logstash(DbaasLogsInputConfigurationLogstashArgs.builder()\n                    .inputSection(\"\"\"\nbeats {\n  port =\u003e 6514\n  ssl =\u003e true\n  ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n  ssl_key =\u003e \"/etc/ssl/private/server.key\"\n}\n                    \"\"\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  stream:\n    type: ovh:DbaasLogsOutputGraylogStream\n    properties:\n      serviceName: '....'\n      title: my stream\n      description: my graylog stream\n  input:\n    type: ovh:DbaasLogsInput\n    properties:\n      serviceName: ${stream.serviceName}\n      description: ${stream.description}\n      title: ${stream.title}\n      engineId: ${logstash.id}\n      streamId: ${stream.id}\n      allowedNetworks:\n        - 10.0.0.0/16\n      exposedPort: 6154\n      nbInstance: 2\n      configuration:\n        logstash:\n          inputSection: |\n            beats {\n              port =\u003e 6514\n              ssl =\u003e true\n              ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n              ssl_key =\u003e \"/etc/ssl/private/server.key\"\n            }\nvariables:\n  logstash:\n    Fn::Invoke:\n      Function: ovh:getDbaasLogsInputEngine\n      Arguments:\n        name: logstash\n        version: 7.x\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "configuration": {
                    "$ref": "#/types/ovh:index/DbaasLogsInputConfiguration:DbaasLogsInputConfiguration",
                    "description": "Input configuration\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Input creation\n"
                },
                "description": {
                    "type": "string",
                    "description": "Input description\n"
                },
                "engineId": {
                    "type": "string",
                    "description": "Input engine ID\n"
                },
                "exposedPort": {
                    "type": "string",
                    "description": "Port\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname\n"
                },
                "inputId": {
                    "type": "string",
                    "description": "Input ID\n"
                },
                "isRestartRequired": {
                    "type": "boolean",
                    "description": "Indicate if input need to be restarted\n"
                },
                "nbInstance": {
                    "type": "integer",
                    "description": "Number of instance running\n"
                },
                "publicAddress": {
                    "type": "string",
                    "description": "Input IP address\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "service name\n"
                },
                "sslCertificate": {
                    "type": "string",
                    "description": "Input SSL certificate\n"
                },
                "status": {
                    "type": "string",
                    "description": "init: configuration required, pending: ready to start, running: available\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Associated Graylog stream\n"
                },
                "title": {
                    "type": "string",
                    "description": "Input title\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Input last update\n"
                }
            },
            "required": [
                "allowedNetworks",
                "configuration",
                "createdAt",
                "description",
                "engineId",
                "exposedPort",
                "hostname",
                "inputId",
                "isRestartRequired",
                "nbInstance",
                "publicAddress",
                "serviceName",
                "sslCertificate",
                "status",
                "streamId",
                "title",
                "updatedAt"
            ],
            "inputProperties": {
                "allowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "configuration": {
                    "$ref": "#/types/ovh:index/DbaasLogsInputConfiguration:DbaasLogsInputConfiguration",
                    "description": "Input configuration\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Input description\n"
                },
                "engineId": {
                    "type": "string",
                    "description": "Input engine ID\n"
                },
                "exposedPort": {
                    "type": "string",
                    "description": "Port\n"
                },
                "nbInstance": {
                    "type": "integer",
                    "description": "Number of instance running\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "service name\n",
                    "willReplaceOnChanges": true
                },
                "streamId": {
                    "type": "string",
                    "description": "Associated Graylog stream\n"
                },
                "title": {
                    "type": "string",
                    "description": "Input title\n"
                }
            },
            "requiredInputs": [
                "configuration",
                "description",
                "engineId",
                "serviceName",
                "streamId",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DbaasLogsInput resources.\n",
                "properties": {
                    "allowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP blocks\n"
                    },
                    "configuration": {
                        "$ref": "#/types/ovh:index/DbaasLogsInputConfiguration:DbaasLogsInputConfiguration",
                        "description": "Input configuration\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Input creation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Input description\n"
                    },
                    "engineId": {
                        "type": "string",
                        "description": "Input engine ID\n"
                    },
                    "exposedPort": {
                        "type": "string",
                        "description": "Port\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Hostname\n"
                    },
                    "inputId": {
                        "type": "string",
                        "description": "Input ID\n"
                    },
                    "isRestartRequired": {
                        "type": "boolean",
                        "description": "Indicate if input need to be restarted\n"
                    },
                    "nbInstance": {
                        "type": "integer",
                        "description": "Number of instance running\n"
                    },
                    "publicAddress": {
                        "type": "string",
                        "description": "Input IP address\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "service name\n",
                        "willReplaceOnChanges": true
                    },
                    "sslCertificate": {
                        "type": "string",
                        "description": "Input SSL certificate\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "init: configuration required, pending: ready to start, running: available\n"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Associated Graylog stream\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Input title\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Input last update\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/dbaasLogsOutputGraylogStream:DbaasLogsOutputGraylogStream": {
            "properties": {
                "canAlert": {
                    "type": "boolean",
                    "description": "Indicates if the current user can create alert on the stream\n"
                },
                "coldStorageCompression": {
                    "type": "string",
                    "description": "Cold storage compression method\n"
                },
                "coldStorageContent": {
                    "type": "string",
                    "description": "ColdStorage content\n"
                },
                "coldStorageEnabled": {
                    "type": "boolean",
                    "description": "Is Cold storage enabled?\n"
                },
                "coldStorageNotifyEnabled": {
                    "type": "boolean",
                    "description": "Notify on new Cold storage archive\n"
                },
                "coldStorageRetention": {
                    "type": "integer",
                    "description": "Cold storage retention in year\n"
                },
                "coldStorageTarget": {
                    "type": "string",
                    "description": "ColdStorage destination\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Stream creation\n"
                },
                "description": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "indexingEnabled": {
                    "type": "boolean",
                    "description": "Enable ES indexing\n"
                },
                "indexingMaxSize": {
                    "type": "integer",
                    "description": "Maximum indexing size (in GB)\n"
                },
                "indexingNotifyEnabled": {
                    "type": "boolean",
                    "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to edit entry\n"
                },
                "isShareable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to share entry\n"
                },
                "nbAlertCondition": {
                    "type": "integer",
                    "description": "Number of alert condition\n"
                },
                "nbArchive": {
                    "type": "integer",
                    "description": "Number of coldstored archives\n"
                },
                "parentStreamId": {
                    "type": "string",
                    "description": "Parent stream ID\n"
                },
                "pauseIndexingOnMaxSize": {
                    "type": "boolean",
                    "description": "If set, pause indexing when maximum size is reach\n"
                },
                "retentionId": {
                    "type": "string",
                    "description": "Retention ID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Stream ID\n"
                },
                "title": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Stream last update\n"
                },
                "webSocketEnabled": {
                    "type": "boolean",
                    "description": "Enable Websocket\n"
                }
            },
            "required": [
                "canAlert",
                "coldStorageCompression",
                "coldStorageContent",
                "coldStorageEnabled",
                "coldStorageNotifyEnabled",
                "coldStorageRetention",
                "coldStorageTarget",
                "createdAt",
                "description",
                "indexingEnabled",
                "indexingMaxSize",
                "indexingNotifyEnabled",
                "isEditable",
                "isShareable",
                "nbAlertCondition",
                "nbArchive",
                "pauseIndexingOnMaxSize",
                "retentionId",
                "serviceName",
                "streamId",
                "title",
                "updatedAt",
                "webSocketEnabled"
            ],
            "inputProperties": {
                "coldStorageCompression": {
                    "type": "string",
                    "description": "Cold storage compression method\n"
                },
                "coldStorageContent": {
                    "type": "string",
                    "description": "ColdStorage content\n"
                },
                "coldStorageEnabled": {
                    "type": "boolean",
                    "description": "Is Cold storage enabled?\n"
                },
                "coldStorageNotifyEnabled": {
                    "type": "boolean",
                    "description": "Notify on new Cold storage archive\n"
                },
                "coldStorageRetention": {
                    "type": "integer",
                    "description": "Cold storage retention in year\n"
                },
                "coldStorageTarget": {
                    "type": "string",
                    "description": "ColdStorage destination\n"
                },
                "description": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "indexingEnabled": {
                    "type": "boolean",
                    "description": "Enable ES indexing\n"
                },
                "indexingMaxSize": {
                    "type": "integer",
                    "description": "Maximum indexing size (in GB)\n"
                },
                "indexingNotifyEnabled": {
                    "type": "boolean",
                    "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                },
                "parentStreamId": {
                    "type": "string",
                    "description": "Parent stream ID\n",
                    "willReplaceOnChanges": true
                },
                "pauseIndexingOnMaxSize": {
                    "type": "boolean",
                    "description": "If set, pause indexing when maximum size is reach\n"
                },
                "retentionId": {
                    "type": "string",
                    "description": "Retention ID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "title": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "webSocketEnabled": {
                    "type": "boolean",
                    "description": "Enable Websocket\n"
                }
            },
            "requiredInputs": [
                "description",
                "serviceName",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DbaasLogsOutputGraylogStream resources.\n",
                "properties": {
                    "canAlert": {
                        "type": "boolean",
                        "description": "Indicates if the current user can create alert on the stream\n"
                    },
                    "coldStorageCompression": {
                        "type": "string",
                        "description": "Cold storage compression method\n"
                    },
                    "coldStorageContent": {
                        "type": "string",
                        "description": "ColdStorage content\n"
                    },
                    "coldStorageEnabled": {
                        "type": "boolean",
                        "description": "Is Cold storage enabled?\n"
                    },
                    "coldStorageNotifyEnabled": {
                        "type": "boolean",
                        "description": "Notify on new Cold storage archive\n"
                    },
                    "coldStorageRetention": {
                        "type": "integer",
                        "description": "Cold storage retention in year\n"
                    },
                    "coldStorageTarget": {
                        "type": "string",
                        "description": "ColdStorage destination\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Stream creation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "indexingEnabled": {
                        "type": "boolean",
                        "description": "Enable ES indexing\n"
                    },
                    "indexingMaxSize": {
                        "type": "integer",
                        "description": "Maximum indexing size (in GB)\n"
                    },
                    "indexingNotifyEnabled": {
                        "type": "boolean",
                        "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "isShareable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to share entry\n"
                    },
                    "nbAlertCondition": {
                        "type": "integer",
                        "description": "Number of alert condition\n"
                    },
                    "nbArchive": {
                        "type": "integer",
                        "description": "Number of coldstored archives\n"
                    },
                    "parentStreamId": {
                        "type": "string",
                        "description": "Parent stream ID\n",
                        "willReplaceOnChanges": true
                    },
                    "pauseIndexingOnMaxSize": {
                        "type": "boolean",
                        "description": "If set, pause indexing when maximum size is reach\n"
                    },
                    "retentionId": {
                        "type": "string",
                        "description": "Retention ID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Stream ID\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Stream last update\n"
                    },
                    "webSocketEnabled": {
                        "type": "boolean",
                        "description": "Enable Websocket\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/dedicatedCephAcl:DedicatedCephAcl": {
            "description": "Add a new access ACL for the given network/mask.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst my-ceph = ovh.getDedicatedCeph({\n    serviceName: \"94d423da-0e55-45f2-9812-836460a19939\",\n});\nconst my_acl = new ovh.DedicatedCephAcl(\"my-acl\", {\n    serviceName: my_ceph.then(my_ceph =\u003e my_ceph.id),\n    network: \"1.2.3.4\",\n    netmask: \"255.255.255.255\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\nmy_ceph = ovh.get_dedicated_ceph(service_name=\"94d423da-0e55-45f2-9812-836460a19939\")\nmy_acl = ovh.DedicatedCephAcl(\"my-acl\",\n    service_name=my_ceph.id,\n    network=\"1.2.3.4\",\n    netmask=\"255.255.255.255\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var my_ceph = Ovh.GetDedicatedCeph.Invoke(new()\n    {\n        ServiceName = \"94d423da-0e55-45f2-9812-836460a19939\",\n    });\n\n    var my_acl = new Ovh.DedicatedCephAcl(\"my-acl\", new()\n    {\n        ServiceName = my_ceph.Apply(getDedicatedCephResult =\u003e getDedicatedCephResult).Apply(my_ceph =\u003e my_ceph.Apply(getDedicatedCephResult =\u003e getDedicatedCephResult.Id)),\n        Network = \"1.2.3.4\",\n        Netmask = \"255.255.255.255\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmy_ceph, err := ovh.GetDedicatedCeph(ctx, \u0026GetDedicatedCephArgs{\n\t\t\tServiceName: \"94d423da-0e55-45f2-9812-836460a19939\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewDedicatedCephAcl(ctx, \"my-acl\", \u0026ovh.DedicatedCephAclArgs{\n\t\t\tServiceName: pulumi.String(my_ceph.Id),\n\t\t\tNetwork:     pulumi.String(\"1.2.3.4\"),\n\t\t\tNetmask:     pulumi.String(\"255.255.255.255\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetDedicatedCephArgs;\nimport com.pulumi.ovh.DedicatedCephAcl;\nimport com.pulumi.ovh.DedicatedCephAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var my-ceph = OvhFunctions.getDedicatedCeph(GetDedicatedCephArgs.builder()\n            .serviceName(\"94d423da-0e55-45f2-9812-836460a19939\")\n            .build());\n\n        var my_acl = new DedicatedCephAcl(\"my-acl\", DedicatedCephAclArgs.builder()        \n            .serviceName(my_ceph.id())\n            .network(\"1.2.3.4\")\n            .netmask(\"255.255.255.255\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  my-acl:\n    type: ovh:DedicatedCephAcl\n    properties:\n      serviceName: ${[\"my-ceph\"].id}\n      network: 1.2.3.4\n      netmask: 255.255.255.255\nvariables:\n  my-ceph:\n    Fn::Invoke:\n      Function: ovh:getDedicatedCeph\n      Arguments:\n        serviceName: 94d423da-0e55-45f2-9812-836460a19939\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "family": {
                    "type": "string",
                    "description": "IP family. `IPv4` or `IPv6`\n"
                },
                "netmask": {
                    "type": "string",
                    "description": "The network mask to apply\n"
                },
                "network": {
                    "type": "string",
                    "description": "The network IP to authorize\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated CEPH\n"
                }
            },
            "required": [
                "family",
                "netmask",
                "network",
                "serviceName"
            ],
            "inputProperties": {
                "netmask": {
                    "type": "string",
                    "description": "The network mask to apply\n",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "description": "The network IP to authorize\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated CEPH\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "netmask",
                "network",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedCephAcl resources.\n",
                "properties": {
                    "family": {
                        "type": "string",
                        "description": "IP family. `IPv4` or `IPv6`\n"
                    },
                    "netmask": {
                        "type": "string",
                        "description": "The network mask to apply\n",
                        "willReplaceOnChanges": true
                    },
                    "network": {
                        "type": "string",
                        "description": "The network IP to authorize\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated CEPH\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/dedicatedServerRebootTask:DedicatedServerRebootTask": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Details of this task. (should be `Reboot asked`)\n"
                },
                "doneDate": {
                    "type": "string",
                    "description": "Completion date in RFC3339 format.\n"
                },
                "function": {
                    "type": "string",
                    "description": "Function name (should be `hardReboot`).\n"
                },
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values traccked to trigger reboot, used also to form implicit dependencies\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update in RFC3339 format.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Task creation date in RFC3339 format.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Task status (should be `done`)\n"
                }
            },
            "required": [
                "comment",
                "doneDate",
                "function",
                "keepers",
                "lastUpdate",
                "serviceName",
                "startDate",
                "status"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values traccked to trigger reboot, used also to form implicit dependencies\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "keepers",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServerRebootTask resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Details of this task. (should be `Reboot asked`)\n"
                    },
                    "doneDate": {
                        "type": "string",
                        "description": "Completion date in RFC3339 format.\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "Function name (should be `hardReboot`).\n"
                    },
                    "keepers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of values traccked to trigger reboot, used also to form implicit dependencies\n",
                        "willReplaceOnChanges": true
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update in RFC3339 format.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Task creation date in RFC3339 format.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Task status (should be `done`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/dedicatedServerUpdate:DedicatedServerUpdate": {
            "properties": {
                "bootId": {
                    "type": "integer",
                    "description": "boot id of the server\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "state": {
                    "type": "string",
                    "description": "error, hacked, hackedBlocked, ok\n"
                }
            },
            "required": [
                "bootId",
                "monitoring",
                "serviceName",
                "state"
            ],
            "inputProperties": {
                "bootId": {
                    "type": "integer",
                    "description": "boot id of the server\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "state": {
                    "type": "string",
                    "description": "error, hacked, hackedBlocked, ok\n"
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServerUpdate resources.\n",
                "properties": {
                    "bootId": {
                        "type": "integer",
                        "description": "boot id of the server\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "error, hacked, hackedBlocked, ok\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/dedicatedServiceInstallTask:DedicatedServiceInstallTask": {
            "properties": {
                "bootidOnDestroy": {
                    "type": "integer",
                    "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                },
                "comment": {
                    "type": "string",
                    "description": "Details of this task. (should be `Install asked`)\n"
                },
                "details": {
                    "$ref": "#/types/ovh:index/DedicatedServiceInstallTaskDetails:DedicatedServiceInstallTaskDetails",
                    "description": "see `details` block below.\n"
                },
                "doneDate": {
                    "type": "string",
                    "description": "Completion date in RFC3339 format.\n"
                },
                "function": {
                    "type": "string",
                    "description": "Function name (should be `hardInstall`).\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update in RFC3339 format.\n"
                },
                "partitionSchemeName": {
                    "type": "string",
                    "description": "Partition scheme name.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Task creation date in RFC3339 format.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Task status (should be `done`)\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name.\n"
                }
            },
            "required": [
                "comment",
                "doneDate",
                "function",
                "lastUpdate",
                "serviceName",
                "startDate",
                "status",
                "templateName"
            ],
            "inputProperties": {
                "bootidOnDestroy": {
                    "type": "integer",
                    "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                },
                "details": {
                    "$ref": "#/types/ovh:index/DedicatedServiceInstallTaskDetails:DedicatedServiceInstallTaskDetails",
                    "description": "see `details` block below.\n",
                    "willReplaceOnChanges": true
                },
                "partitionSchemeName": {
                    "type": "string",
                    "description": "Partition scheme name.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n",
                    "willReplaceOnChanges": true
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServiceInstallTask resources.\n",
                "properties": {
                    "bootidOnDestroy": {
                        "type": "integer",
                        "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Details of this task. (should be `Install asked`)\n"
                    },
                    "details": {
                        "$ref": "#/types/ovh:index/DedicatedServiceInstallTaskDetails:DedicatedServiceInstallTaskDetails",
                        "description": "see `details` block below.\n",
                        "willReplaceOnChanges": true
                    },
                    "doneDate": {
                        "type": "string",
                        "description": "Completion date in RFC3339 format.\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "Function name (should be `hardInstall`).\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update in RFC3339 format.\n"
                    },
                    "partitionSchemeName": {
                        "type": "string",
                        "description": "Partition scheme name.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Task creation date in RFC3339 format.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Task status (should be `done`)\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/domainZone:DomainZone": {
            "description": "Creates a domain zone.\n\n## Important\n\nThis resource is in beta state. Use with caution.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst mycart = ovh.getOrderCart({\n    ovhSubsidiary: \"fr\",\n});\nconst zoneOrderCartProductPlan = mycart.then(mycart =\u003e ovh.getOrderCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"dns\",\n    planCode: \"zone\",\n}));\nconst zoneDomainZone = new ovh.DomainZone(\"zoneDomainZone\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"fidelity\",\n    plan: {\n        duration: zoneOrderCartProductPlan.then(zoneOrderCartProductPlan =\u003e zoneOrderCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: zoneOrderCartProductPlan.then(zoneOrderCartProductPlan =\u003e zoneOrderCartProductPlan.planCode),\n        pricingMode: zoneOrderCartProductPlan.then(zoneOrderCartProductPlan =\u003e zoneOrderCartProductPlan.selectedPrices?[0]?.pricingMode),\n        configurations: [\n            {\n                label: \"zone\",\n                value: \"myzone.mydomain.com\",\n            },\n            {\n                label: \"template\",\n                value: \"minimized\",\n            },\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\nmycart = ovh.get_order_cart(ovh_subsidiary=\"fr\")\nzone_order_cart_product_plan = ovh.get_order_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"dns\",\n    plan_code=\"zone\")\nzone_domain_zone = ovh.DomainZone(\"zoneDomainZone\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"fidelity\",\n    plan=ovh.DomainZonePlanArgs(\n        duration=zone_order_cart_product_plan.selected_prices[0].duration,\n        plan_code=zone_order_cart_product_plan.plan_code,\n        pricing_mode=zone_order_cart_product_plan.selected_prices[0].pricing_mode,\n        configurations=[\n            ovh.DomainZonePlanConfigurationArgs(\n                label=\"zone\",\n                value=\"myzone.mydomain.com\",\n            ),\n            ovh.DomainZonePlanConfigurationArgs(\n                label=\"template\",\n                value=\"minimized\",\n            ),\n        ],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n    });\n\n    var zoneOrderCartProductPlan = Ovh.GetOrderCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"dns\",\n        PlanCode = \"zone\",\n    });\n\n    var zoneDomainZone = new Ovh.DomainZone(\"zoneDomainZone\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.OvhSubsidiary),\n        PaymentMean = \"fidelity\",\n        Plan = new Ovh.Inputs.DomainZonePlanArgs\n        {\n            Duration = zoneOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = zoneOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.PlanCode),\n            PricingMode = zoneOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Inputs.DomainZonePlanConfigurationArgs\n                {\n                    Label = \"zone\",\n                    Value = \"myzone.mydomain.com\",\n                },\n                new Ovh.Inputs.DomainZonePlanConfigurationArgs\n                {\n                    Label = \"template\",\n                    Value = \"minimized\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tzoneOrderCartProductPlan, err := ovh.GetOrderCartProductPlan(ctx, \u0026GetOrderCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"dns\",\n\t\t\tPlanCode:      \"zone\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewDomainZone(ctx, \"zoneDomainZone\", \u0026ovh.DomainZoneArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"fidelity\"),\n\t\t\tPlan: \u0026DomainZonePlanArgs{\n\t\t\t\tDuration:    pulumi.String(zoneOrderCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(zoneOrderCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(zoneOrderCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: DomainZonePlanConfigurationArray{\n\t\t\t\t\t\u0026DomainZonePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"zone\"),\n\t\t\t\t\t\tValue: pulumi.String(\"myzone.mydomain.com\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026DomainZonePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"template\"),\n\t\t\t\t\t\tValue: pulumi.String(\"minimized\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductPlanArgs;\nimport com.pulumi.ovh.DomainZone;\nimport com.pulumi.ovh.DomainZoneArgs;\nimport com.pulumi.ovh.inputs.DomainZonePlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .build());\n\n        final var zoneOrderCartProductPlan = OvhFunctions.getOrderCartProductPlan(GetOrderCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"dns\")\n            .planCode(\"zone\")\n            .build());\n\n        var zoneDomainZone = new DomainZone(\"zoneDomainZone\", DomainZoneArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.ovhSubsidiary()))\n            .paymentMean(\"fidelity\")\n            .plan(DomainZonePlanArgs.builder()\n                .duration(zoneOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(zoneOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.planCode()))\n                .pricingMode(zoneOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(                \n                    DomainZonePlanConfigurationArgs.builder()\n                        .label(\"zone\")\n                        .value(\"myzone.mydomain.com\")\n                        .build(),\n                    DomainZonePlanConfigurationArgs.builder()\n                        .label(\"template\")\n                        .value(\"minimized\")\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  zoneDomainZone:\n    type: ovh:DomainZone\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: fidelity\n      plan:\n        duration: ${zoneOrderCartProductPlan.selectedPrices[0].duration}\n        planCode: ${zoneOrderCartProductPlan.planCode}\n        pricingMode: ${zoneOrderCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: zone\n            value: myzone.mydomain.com\n          - label: template\n            value: minimized\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        ovhSubsidiary: fr\n  zoneOrderCartProductPlan:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: dns\n        planCode: zone\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "dnssecSupported": {
                    "type": "boolean",
                    "description": "Is DNSSEC supported by this zone\n"
                },
                "hasDnsAnycast": {
                    "type": "boolean",
                    "description": "hasDnsAnycast flag of the DNS zone\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update date of the DNS zone\n"
                },
                "name": {
                    "type": "string",
                    "description": "Zone name\n"
                },
                "nameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name servers that host the DNS zone\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/DomainZoneOrder:DomainZoneOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:index/DomainZonePlan:DomainZonePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/DomainZonePlanOption:DomainZonePlanOption"
                    },
                    "description": "Product Plan to order\n"
                }
            },
            "required": [
                "dnssecSupported",
                "hasDnsAnycast",
                "lastUpdate",
                "name",
                "nameServers",
                "orders",
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "inputProperties": {
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:index/DomainZonePlan:DomainZonePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/DomainZonePlanOption:DomainZonePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainZone resources.\n",
                "properties": {
                    "dnssecSupported": {
                        "type": "boolean",
                        "description": "Is DNSSEC supported by this zone\n"
                    },
                    "hasDnsAnycast": {
                        "type": "boolean",
                        "description": "hasDnsAnycast flag of the DNS zone\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update date of the DNS zone\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Zone name\n"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name servers that host the DNS zone\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/DomainZoneOrder:DomainZoneOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:index/DomainZonePlan:DomainZonePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/DomainZonePlanOption:DomainZonePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/domainZoneRecord:DomainZoneRecord": {
            "description": "Provides a OVH domain zone record.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\n// Add a record to a sub-domain\nconst test = new ovh.DomainZoneRecord(\"test\", {\n    fieldtype: \"A\",\n    subdomain: \"test\",\n    target: \"0.0.0.0\",\n    ttl: 3600,\n    zone: \"testdemo.ovh\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\n# Add a record to a sub-domain\ntest = ovh.DomainZoneRecord(\"test\",\n    fieldtype=\"A\",\n    subdomain=\"test\",\n    target=\"0.0.0.0\",\n    ttl=3600,\n    zone=\"testdemo.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Add a record to a sub-domain\n    var test = new Ovh.DomainZoneRecord(\"test\", new()\n    {\n        Fieldtype = \"A\",\n        Subdomain = \"test\",\n        Target = \"0.0.0.0\",\n        Ttl = 3600,\n        Zone = \"testdemo.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewDomainZoneRecord(ctx, \"test\", \u0026ovh.DomainZoneRecordArgs{\n\t\t\tFieldtype: pulumi.String(\"A\"),\n\t\t\tSubdomain: pulumi.String(\"test\"),\n\t\t\tTarget:    pulumi.String(\"0.0.0.0\"),\n\t\t\tTtl:       pulumi.Int(3600),\n\t\t\tZone:      pulumi.String(\"testdemo.ovh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.DomainZoneRecord;\nimport com.pulumi.ovh.DomainZoneRecordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new DomainZoneRecord(\"test\", DomainZoneRecordArgs.builder()        \n            .fieldtype(\"A\")\n            .subdomain(\"test\")\n            .target(\"0.0.0.0\")\n            .ttl(\"3600\")\n            .zone(\"testdemo.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Add a record to a sub-domain\n  test:\n    type: ovh:DomainZoneRecord\n    properties:\n      fieldtype: A\n      subdomain: test\n      target: 0.0.0.0\n      ttl: 3600\n      zone: testdemo.ovh\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOVH record can be imported using the `id` and the `zone`, eg\n\n```sh\n $ pulumi import ovh:index/domainZoneRecord:DomainZoneRecord test 1234OVH_ID.zone.tld\n```\n\n ",
            "properties": {
                "fieldtype": {
                    "type": "string",
                    "description": "The type of the record\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the record\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the record\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL of the record\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the record to\n"
                }
            },
            "required": [
                "fieldtype",
                "target",
                "zone"
            ],
            "inputProperties": {
                "fieldtype": {
                    "type": "string",
                    "description": "The type of the record\n",
                    "willReplaceOnChanges": true
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the record\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the record\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL of the record\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the record to\n"
                }
            },
            "requiredInputs": [
                "fieldtype",
                "target",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainZoneRecord resources.\n",
                "properties": {
                    "fieldtype": {
                        "type": "string",
                        "description": "The type of the record\n",
                        "willReplaceOnChanges": true
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The name of the record\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "The value of the record\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The TTL of the record\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The domain to add the record to\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/domainZoneRedirection:DomainZoneRedirection": {
            "description": "Provides a OVH domain zone redirection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\n// Add a redirection to a sub-domain\nconst test = new ovh.DomainZoneRedirection(\"test\", {\n    subdomain: \"test\",\n    target: \"http://www.ovh\",\n    type: \"visiblePermanent\",\n    zone: \"testdemo.ovh\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\n# Add a redirection to a sub-domain\ntest = ovh.DomainZoneRedirection(\"test\",\n    subdomain=\"test\",\n    target=\"http://www.ovh\",\n    type=\"visiblePermanent\",\n    zone=\"testdemo.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Add a redirection to a sub-domain\n    var test = new Ovh.DomainZoneRedirection(\"test\", new()\n    {\n        Subdomain = \"test\",\n        Target = \"http://www.ovh\",\n        Type = \"visiblePermanent\",\n        Zone = \"testdemo.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewDomainZoneRedirection(ctx, \"test\", \u0026ovh.DomainZoneRedirectionArgs{\n\t\t\tSubdomain: pulumi.String(\"test\"),\n\t\t\tTarget:    pulumi.String(\"http://www.ovh\"),\n\t\t\tType:      pulumi.String(\"visiblePermanent\"),\n\t\t\tZone:      pulumi.String(\"testdemo.ovh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.DomainZoneRedirection;\nimport com.pulumi.ovh.DomainZoneRedirectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new DomainZoneRedirection(\"test\", DomainZoneRedirectionArgs.builder()        \n            .subdomain(\"test\")\n            .target(\"http://www.ovh\")\n            .type(\"visiblePermanent\")\n            .zone(\"testdemo.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Add a redirection to a sub-domain\n  test:\n    type: ovh:DomainZoneRedirection\n    properties:\n      subdomain: test\n      target: http://www.ovh\n      type: visiblePermanent\n      zone: testdemo.ovh\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of this redirection\n"
                },
                "keywords": {
                    "type": "string",
                    "description": "Keywords to describe this redirection\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the redirection\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the redirection\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of this redirection\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the redirection, with values:\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the redirection to\n"
                }
            },
            "required": [
                "target",
                "type",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of this redirection\n"
                },
                "keywords": {
                    "type": "string",
                    "description": "Keywords to describe this redirection\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the redirection\n",
                    "willReplaceOnChanges": true
                },
                "target": {
                    "type": "string",
                    "description": "The value of the redirection\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of this redirection\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the redirection, with values:\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the redirection to\n"
                }
            },
            "requiredInputs": [
                "target",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DomainZoneRedirection resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of this redirection\n"
                    },
                    "keywords": {
                        "type": "string",
                        "description": "Keywords to describe this redirection\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The name of the redirection\n",
                        "willReplaceOnChanges": true
                    },
                    "target": {
                        "type": "string",
                        "description": "The value of the redirection\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of this redirection\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the redirection, with values:\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The domain to add the redirection to\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancing:IpLoadBalancing": {
            "description": "Orders an IP load balancing.\n\n## Important\n\nThis resource orders an OVH product for a long period of time and may generate heavy costs !\nUse with caution.\n\n__NOTE__ 1: the \"default-payment-mean\" will scan your registered bank accounts, credit card and paypal payment means to find your default payment mean.\n\n__NOTE__ 2: this resource is in beta state. Use with caution.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst mycart = ovh.getOrderCart({\n    ovhSubsidiary: \"fr\",\n    description: \"mycart\",\n});\nconst iplb = mycart.then(mycart =\u003e ovh.getOrderCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"ipLoadbalancing\",\n    planCode: \"iplb-lb1\",\n}));\nconst bhs = Promise.all([iplb, iplb, iplb, iplb]).then(([iplb, iplb1, iplb2, iplb3]) =\u003e ovh.getOrderCartProductOptionsPlan({\n    cartId: iplb.cartId,\n    priceCapacity: iplb1.priceCapacity,\n    product: iplb2.product,\n    planCode: iplb3.planCode,\n    optionsPlanCode: \"iplb-zone-lb1-rbx\",\n}));\nconst iplb_lb1 = new ovh.IpLoadBalancing(\"iplb-lb1\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    displayName: \"my ip loadbalancing\",\n    paymentMean: \"ovh-account\",\n    plan: {\n        duration: iplb.then(iplb =\u003e iplb.selectedPrices?[0]?.duration),\n        planCode: iplb.then(iplb =\u003e iplb.planCode),\n        pricingMode: iplb.then(iplb =\u003e iplb.selectedPrices?[0]?.pricingMode),\n    },\n    planOptions: [{\n        duration: bhs.then(bhs =\u003e bhs.selectedPrices?[0]?.duration),\n        planCode: bhs.then(bhs =\u003e bhs.planCode),\n        pricingMode: bhs.then(bhs =\u003e bhs.selectedPrices?[0]?.pricingMode),\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\nmycart = ovh.get_order_cart(ovh_subsidiary=\"fr\",\n    description=\"mycart\")\niplb = ovh.get_order_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"ipLoadbalancing\",\n    plan_code=\"iplb-lb1\")\nbhs = ovh.get_order_cart_product_options_plan(cart_id=iplb.cart_id,\n    price_capacity=iplb.price_capacity,\n    product=iplb.product,\n    plan_code=iplb.plan_code,\n    options_plan_code=\"iplb-zone-lb1-rbx\")\niplb_lb1 = ovh.IpLoadBalancing(\"iplb-lb1\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    display_name=\"my ip loadbalancing\",\n    payment_mean=\"ovh-account\",\n    plan=ovh.IpLoadBalancingPlanArgs(\n        duration=iplb.selected_prices[0].duration,\n        plan_code=iplb.plan_code,\n        pricing_mode=iplb.selected_prices[0].pricing_mode,\n    ),\n    plan_options=[ovh.IpLoadBalancingPlanOptionArgs(\n        duration=bhs.selected_prices[0].duration,\n        plan_code=bhs.plan_code,\n        pricing_mode=bhs.selected_prices[0].pricing_mode,\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"mycart\",\n    });\n\n    var iplb = Ovh.GetOrderCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"ipLoadbalancing\",\n        PlanCode = \"iplb-lb1\",\n    });\n\n    var bhs = Ovh.GetOrderCartProductOptionsPlan.Invoke(new()\n    {\n        CartId = iplb.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.CartId),\n        PriceCapacity = iplb.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.PriceCapacity),\n        Product = iplb.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.Product),\n        PlanCode = iplb.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.PlanCode),\n        OptionsPlanCode = \"iplb-zone-lb1-rbx\",\n    });\n\n    var iplb_lb1 = new Ovh.IpLoadBalancing(\"iplb-lb1\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.OvhSubsidiary),\n        DisplayName = \"my ip loadbalancing\",\n        PaymentMean = \"ovh-account\",\n        Plan = new Ovh.Inputs.IpLoadBalancingPlanArgs\n        {\n            Duration = iplb.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = iplb.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.PlanCode),\n            PricingMode = iplb.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n        PlanOptions = new[]\n        {\n            new Ovh.Inputs.IpLoadBalancingPlanOptionArgs\n            {\n                Duration = bhs.Apply(getOrderCartProductOptionsPlanResult =\u003e getOrderCartProductOptionsPlanResult.SelectedPrices[0]?.Duration),\n                PlanCode = bhs.Apply(getOrderCartProductOptionsPlanResult =\u003e getOrderCartProductOptionsPlanResult.PlanCode),\n                PricingMode = bhs.Apply(getOrderCartProductOptionsPlanResult =\u003e getOrderCartProductOptionsPlanResult.SelectedPrices[0]?.PricingMode),\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"mycart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tiplb, err := ovh.GetOrderCartProductPlan(ctx, \u0026GetOrderCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"ipLoadbalancing\",\n\t\t\tPlanCode:      \"iplb-lb1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbhs, err := ovh.GetOrderCartProductOptionsPlan(ctx, \u0026GetOrderCartProductOptionsPlanArgs{\n\t\t\tCartId:          iplb.CartId,\n\t\t\tPriceCapacity:   iplb.PriceCapacity,\n\t\t\tProduct:         iplb.Product,\n\t\t\tPlanCode:        iplb.PlanCode,\n\t\t\tOptionsPlanCode: \"iplb-zone-lb1-rbx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIpLoadBalancing(ctx, \"iplb-lb1\", \u0026ovh.IpLoadBalancingArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tDisplayName:   pulumi.String(\"my ip loadbalancing\"),\n\t\t\tPaymentMean:   pulumi.String(\"ovh-account\"),\n\t\t\tPlan: \u0026IpLoadBalancingPlanArgs{\n\t\t\t\tDuration:    pulumi.String(iplb.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(iplb.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(iplb.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t\tPlanOptions: IpLoadBalancingPlanOptionArray{\n\t\t\t\t\u0026IpLoadBalancingPlanOptionArgs{\n\t\t\t\t\tDuration:    pulumi.String(bhs.SelectedPrices[0].Duration),\n\t\t\t\t\tPlanCode:    pulumi.String(bhs.PlanCode),\n\t\t\t\t\tPricingMode: pulumi.String(bhs.SelectedPrices[0].PricingMode),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductPlanArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductOptionsPlanArgs;\nimport com.pulumi.ovh.IpLoadBalancing;\nimport com.pulumi.ovh.IpLoadBalancingArgs;\nimport com.pulumi.ovh.inputs.IpLoadBalancingPlanArgs;\nimport com.pulumi.ovh.inputs.IpLoadBalancingPlanOptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"mycart\")\n            .build());\n\n        final var iplb = OvhFunctions.getOrderCartProductPlan(GetOrderCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"ipLoadbalancing\")\n            .planCode(\"iplb-lb1\")\n            .build());\n\n        final var bhs = OvhFunctions.getOrderCartProductOptionsPlan(GetOrderCartProductOptionsPlanArgs.builder()\n            .cartId(iplb.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.cartId()))\n            .priceCapacity(iplb.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.priceCapacity()))\n            .product(iplb.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.product()))\n            .planCode(iplb.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.planCode()))\n            .optionsPlanCode(\"iplb-zone-lb1-rbx\")\n            .build());\n\n        var iplb_lb1 = new IpLoadBalancing(\"iplb-lb1\", IpLoadBalancingArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.ovhSubsidiary()))\n            .displayName(\"my ip loadbalancing\")\n            .paymentMean(\"ovh-account\")\n            .plan(IpLoadBalancingPlanArgs.builder()\n                .duration(iplb.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(iplb.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.planCode()))\n                .pricingMode(iplb.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .planOptions(IpLoadBalancingPlanOptionArgs.builder()\n                .duration(bhs.applyValue(getOrderCartProductOptionsPlanResult -\u003e getOrderCartProductOptionsPlanResult.selectedPrices()[0].duration()))\n                .planCode(bhs.applyValue(getOrderCartProductOptionsPlanResult -\u003e getOrderCartProductOptionsPlanResult.planCode()))\n                .pricingMode(bhs.applyValue(getOrderCartProductOptionsPlanResult -\u003e getOrderCartProductOptionsPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  iplb-lb1:\n    type: ovh:IpLoadBalancing\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      displayName: my ip loadbalancing\n      paymentMean: ovh-account\n      plan:\n        duration: ${iplb.selectedPrices[0].duration}\n        planCode: ${iplb.planCode}\n        pricingMode: ${iplb.selectedPrices[0].pricingMode}\n      planOptions:\n        - duration: ${bhs.selectedPrices[0].duration}\n          planCode: ${bhs.planCode}\n          pricingMode: ${bhs.selectedPrices[0].pricingMode}\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: mycart\n  iplb:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: ipLoadbalancing\n        planCode: iplb-lb1\n  bhs:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductOptionsPlan\n      Arguments:\n        cartId: ${iplb.cartId}\n        priceCapacity: ${iplb.priceCapacity}\n        product: ${iplb.product}\n        planCode: ${iplb.planCode}\n        optionsPlanCode: iplb-zone-lb1-rbx\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                },
                "ipLoadbalancing": {
                    "type": "string",
                    "description": "Your IP load balancing\n"
                },
                "ipv4": {
                    "type": "string",
                    "description": "The IPV4 associated to your IP load balancing\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "The IPV6 associated to your IP load balancing. DEPRECATED.\n"
                },
                "metricsToken": {
                    "type": "string",
                    "description": "The metrics token associated with your IP load balancing\n"
                },
                "offer": {
                    "type": "string",
                    "description": "The offer of your IP load balancing\n"
                },
                "orderableZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingOrderableZone:IpLoadBalancingOrderableZone"
                    },
                    "description": "Available additional zone for your Load Balancer\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingOrder:IpLoadBalancingOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:index/IpLoadBalancingPlan:IpLoadBalancingPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingPlanOption:IpLoadBalancingPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "sslConfiguration": {
                    "type": "string",
                    "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of \"intermediate\", \"modern\".\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of your IP\n"
                },
                "vrackEligibility": {
                    "type": "boolean",
                    "description": "Vrack eligibility\n"
                },
                "vrackName": {
                    "type": "string",
                    "description": "Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Location where your service is\n"
                }
            },
            "required": [
                "displayName",
                "ipLoadbalancing",
                "ipv4",
                "ipv6",
                "metricsToken",
                "offer",
                "orders",
                "orderableZones",
                "ovhSubsidiary",
                "paymentMean",
                "plan",
                "serviceName",
                "sslConfiguration",
                "state",
                "vrackEligibility",
                "vrackName",
                "zones"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:index/IpLoadBalancingPlan:IpLoadBalancingPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingPlanOption:IpLoadBalancingPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "sslConfiguration": {
                    "type": "string",
                    "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of \"intermediate\", \"modern\".\n"
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancing resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string",
                        "description": "Your IP load balancing\n"
                    },
                    "ipv4": {
                        "type": "string",
                        "description": "The IPV4 associated to your IP load balancing\n"
                    },
                    "ipv6": {
                        "type": "string",
                        "description": "The IPV6 associated to your IP load balancing. DEPRECATED.\n"
                    },
                    "metricsToken": {
                        "type": "string",
                        "description": "The metrics token associated with your IP load balancing\n"
                    },
                    "offer": {
                        "type": "string",
                        "description": "The offer of your IP load balancing\n"
                    },
                    "orderableZones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/IpLoadBalancingOrderableZone:IpLoadBalancingOrderableZone"
                        },
                        "description": "Available additional zone for your Load Balancer\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/IpLoadBalancingOrder:IpLoadBalancingOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingPlan:IpLoadBalancingPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/IpLoadBalancingPlanOption:IpLoadBalancingPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "sslConfiguration": {
                        "type": "string",
                        "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of \"intermediate\", \"modern\".\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your IP\n"
                    },
                    "vrackEligibility": {
                        "type": "boolean",
                        "description": "Vrack eligibility\n"
                    },
                    "vrackName": {
                        "type": "string",
                        "description": "Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Location where your service is\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingHttpFarm:IpLoadBalancingHttpFarm": {
            "description": "Creates a http backend server group (farm) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.Iploadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farmname = new ovh.IpLoadBalancingHttpFarm(\"farmname\", {\n    displayName: \"ingress-8080-gra\",\n    serviceName: lb.id,\n    zone: \"GRA\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:index/IpLoadBalancingHttpFarmProbe:IpLoadBalancingHttpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                }
            },
            "required": [
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:index/IpLoadBalancingHttpFarmProbe:IpLoadBalancingHttpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingHttpFarm resources.\n",
                "properties": {
                    "balance": {
                        "type": "string",
                        "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Readable label for loadbalancer farm\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port for backends to recieve traffic on.\n"
                    },
                    "probe": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingHttpFarmProbe:IpLoadBalancingHttpFarmProbe",
                        "description": "define a backend healthcheck probe\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "stickiness": {
                        "type": "string",
                        "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingHttpFarmServer:IpLoadBalancingHttpFarmServer": {
            "description": "Creates a backend server entry linked to http loadbalancing group (farm)\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVH network)\n"
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "cookie": {
                    "type": "string",
                    "description": "Value of the stickiness cookie used for this backend.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "required": [
                "address",
                "cookie",
                "farmId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVH network)\n",
                    "willReplaceOnChanges": true
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingHttpFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the backend server (IP from either internal or OVH network)\n",
                        "willReplaceOnChanges": true
                    },
                    "backup": {
                        "type": "boolean",
                        "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "cookie": {
                        "type": "string",
                        "description": "Value of the stickiness cookie used for this backend.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Label for the server\n"
                    },
                    "farmId": {
                        "type": "integer",
                        "description": "ID of the farm this server is attached to\n",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port that backend will respond on\n"
                    },
                    "probe": {
                        "type": "boolean",
                        "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                    },
                    "proxyProtocolVersion": {
                        "type": "string",
                        "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "is the connection ciphered with SSL (TLS)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "backend status - `active` or `inactive`\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "used in loadbalancing algorithm\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingHttpFrontend:IpLoadBalancingHttpFrontend": {
            "description": "Creates a backend http server group (frontend) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.Iploadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farm80 = new ovh.IpLoadBalancingHttpFarm(\"farm80\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\nconst testfrontend = new ovh.IpLoadBalancingHttpFrontend(\"testfrontend\", {\n    defaultFarmId: farm80.id.apply(id =\u003e Number.parseFloat(id)),\n    displayName: \"ingress-8080-gra\",\n    port: \"80,443\",\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value),\nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "redirectLocation": {
                    "type": "string",
                    "description": "Redirection HTTP'\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "required": [
                "defaultFarmId",
                "defaultSslId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value),\nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "redirectLocation": {
                    "type": "string",
                    "description": "Redirection HTTP'\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingHttpFrontend resources.\n",
                "properties": {
                    "allowedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                    },
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                    },
                    "defaultFarmId": {
                        "type": "integer",
                        "description": "Default TCP Farm of your frontend\n"
                    },
                    "defaultSslId": {
                        "type": "integer",
                        "description": "Default ssl served to your customer\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable your frontend. Default: 'false'\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your frontend, this field is for you\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Port(s) attached to your frontend. Supports single port (numerical value),\nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                    },
                    "redirectLocation": {
                        "type": "string",
                        "description": "Redirection HTTP'\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "SSL deciphering. Default: 'false'\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingHttpRoute:IpLoadBalancingHttpRoute": {
            "description": "Manage http route for a loadbalancer service\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nRoute which redirect all url to https.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst httpsredirect = new ovh.IpLoadBalancingHttpRoute(\"httpsredirect\", {\n    action: {\n        status: 302,\n        target: \"https://${host}${path}${arguments}\",\n        type: \"redirect\",\n    },\n    displayName: \"Redirect to HTTPS\",\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nhttpsredirect = ovh.IpLoadBalancingHttpRoute(\"httpsredirect\",\n    action=ovh.IpLoadBalancingHttpRouteActionArgs(\n        status=302,\n        target=f\"https://{host}{path}{arguments}\",\n        type=\"redirect\",\n    ),\n    display_name=\"Redirect to HTTPS\",\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var httpsredirect = new Ovh.IpLoadBalancingHttpRoute(\"httpsredirect\", new()\n    {\n        Action = new Ovh.Inputs.IpLoadBalancingHttpRouteActionArgs\n        {\n            Status = 302,\n            Target = $\"https://{host}{path}{arguments}\",\n            Type = \"redirect\",\n        },\n        DisplayName = \"Redirect to HTTPS\",\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewIpLoadBalancingHttpRoute(ctx, \"httpsredirect\", \u0026ovh.IpLoadBalancingHttpRouteArgs{\n\t\t\tAction: \u0026IpLoadBalancingHttpRouteActionArgs{\n\t\t\t\tStatus: pulumi.Int(302),\n\t\t\t\tTarget: pulumi.String(fmt.Sprintf(\"https://%v%v%v\", host, path, arguments)),\n\t\t\t\tType:   pulumi.String(\"redirect\"),\n\t\t\t},\n\t\t\tDisplayName: pulumi.String(\"Redirect to HTTPS\"),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancingHttpRoute;\nimport com.pulumi.ovh.IpLoadBalancingHttpRouteArgs;\nimport com.pulumi.ovh.inputs.IpLoadBalancingHttpRouteActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var httpsredirect = new IpLoadBalancingHttpRoute(\"httpsredirect\", IpLoadBalancingHttpRouteArgs.builder()        \n            .action(IpLoadBalancingHttpRouteActionArgs.builder()\n                .status(302)\n                .target(String.format(\"https://%s%s%s\", host,path,arguments))\n                .type(\"redirect\")\n                .build())\n            .displayName(\"Redirect to HTTPS\")\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  httpsredirect:\n    type: ovh:IpLoadBalancingHttpRoute\n    properties:\n      action:\n        status: 302\n        target: https://${host}${path}${arguments}\n        type: redirect\n      displayName: Redirect to HTTPS\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "action": {
                    "$ref": "#/types/ovh:index/IpLoadBalancingHttpRouteAction:IpLoadBalancingHttpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingHttpRouteRule:IpLoadBalancingHttpRouteRule"
                    },
                    "description": "List of rules to match to trigger action\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "HTTP status code for \"redirect\" and \"reject\" actions\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "required": [
                "action",
                "frontendId",
                "rules",
                "serviceName",
                "status",
                "weight"
            ],
            "inputProperties": {
                "action": {
                    "$ref": "#/types/ovh:index/IpLoadBalancingHttpRouteAction:IpLoadBalancingHttpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "requiredInputs": [
                "action",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingHttpRoute resources.\n",
                "properties": {
                    "action": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingHttpRouteAction:IpLoadBalancingHttpRouteAction",
                        "description": "Action triggered when all rules match\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your route, this field is for you\n"
                    },
                    "frontendId": {
                        "type": "integer",
                        "description": "Route traffic for this frontend\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/IpLoadBalancingHttpRouteRule:IpLoadBalancingHttpRouteRule"
                        },
                        "description": "List of rules to match to trigger action\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "HTTP status code for \"redirect\" and \"reject\" actions\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingHttpRouteRule:IpLoadBalancingHttpRouteRule": {
            "description": "Manage rules for HTTP route.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nRoute which redirect all url to https for example.com (Vhost).\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst httpsredirect = new ovh.IpLoadBalancingHttpRoute(\"httpsredirect\", {\n    action: {\n        status: 302,\n        target: \"https://${host}${path}${arguments}\",\n        type: \"redirect\",\n    },\n    displayName: \"Redirect to HTTPS\",\n    frontendId: 11111,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\nconst examplerule = new ovh.IpLoadBalancingHttpRouteRule(\"examplerule\", {\n    displayName: \"Match example.com host\",\n    field: \"host\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n    routeId: httpsredirect.id,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nhttpsredirect = ovh.IpLoadBalancingHttpRoute(\"httpsredirect\",\n    action=ovh.IpLoadBalancingHttpRouteActionArgs(\n        status=302,\n        target=f\"https://{host}{path}{arguments}\",\n        type=\"redirect\",\n    ),\n    display_name=\"Redirect to HTTPS\",\n    frontend_id=11111,\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\nexamplerule = ovh.IpLoadBalancingHttpRouteRule(\"examplerule\",\n    display_name=\"Match example.com host\",\n    field=\"host\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\",\n    route_id=httpsredirect.id,\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var httpsredirect = new Ovh.IpLoadBalancingHttpRoute(\"httpsredirect\", new()\n    {\n        Action = new Ovh.Inputs.IpLoadBalancingHttpRouteActionArgs\n        {\n            Status = 302,\n            Target = $\"https://{host}{path}{arguments}\",\n            Type = \"redirect\",\n        },\n        DisplayName = \"Redirect to HTTPS\",\n        FrontendId = 11111,\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n    });\n\n    var examplerule = new Ovh.IpLoadBalancingHttpRouteRule(\"examplerule\", new()\n    {\n        DisplayName = \"Match example.com host\",\n        Field = \"host\",\n        Match = \"is\",\n        Negate = false,\n        Pattern = \"example.com\",\n        RouteId = httpsredirect.Id,\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\thttpsredirect, err := ovh.NewIpLoadBalancingHttpRoute(ctx, \"httpsredirect\", \u0026ovh.IpLoadBalancingHttpRouteArgs{\n\t\t\tAction: \u0026IpLoadBalancingHttpRouteActionArgs{\n\t\t\t\tStatus: pulumi.Int(302),\n\t\t\t\tTarget: pulumi.String(fmt.Sprintf(\"https://%v%v%v\", host, path, arguments)),\n\t\t\t\tType:   pulumi.String(\"redirect\"),\n\t\t\t},\n\t\t\tDisplayName: pulumi.String(\"Redirect to HTTPS\"),\n\t\t\tFrontendId:  pulumi.Int(11111),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIpLoadBalancingHttpRouteRule(ctx, \"examplerule\", \u0026ovh.IpLoadBalancingHttpRouteRuleArgs{\n\t\t\tDisplayName: pulumi.String(\"Match example.com host\"),\n\t\t\tField:       pulumi.String(\"host\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t\tRouteId:     httpsredirect.ID(),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancingHttpRoute;\nimport com.pulumi.ovh.IpLoadBalancingHttpRouteArgs;\nimport com.pulumi.ovh.inputs.IpLoadBalancingHttpRouteActionArgs;\nimport com.pulumi.ovh.IpLoadBalancingHttpRouteRule;\nimport com.pulumi.ovh.IpLoadBalancingHttpRouteRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var httpsredirect = new IpLoadBalancingHttpRoute(\"httpsredirect\", IpLoadBalancingHttpRouteArgs.builder()        \n            .action(IpLoadBalancingHttpRouteActionArgs.builder()\n                .status(302)\n                .target(String.format(\"https://%s%s%s\", host,path,arguments))\n                .type(\"redirect\")\n                .build())\n            .displayName(\"Redirect to HTTPS\")\n            .frontendId(11111)\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .build());\n\n        var examplerule = new IpLoadBalancingHttpRouteRule(\"examplerule\", IpLoadBalancingHttpRouteRuleArgs.builder()        \n            .displayName(\"Match example.com host\")\n            .field(\"host\")\n            .match(\"is\")\n            .negate(false)\n            .pattern(\"example.com\")\n            .routeId(httpsredirect.id())\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  httpsredirect:\n    type: ovh:IpLoadBalancingHttpRoute\n    properties:\n      action:\n        status: 302\n        target: https://${host}${path}${arguments}\n        type: redirect\n      displayName: Redirect to HTTPS\n      frontendId: 11111\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n  examplerule:\n    type: ovh:IpLoadBalancingHttpRouteRule\n    properties:\n      displayName: Match example.com host\n      field: host\n      match: is\n      negate: false\n      pattern: example.com\n      routeId: ${httpsredirect.id}\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n```\n\nRule which match a specific header (same effect as the host match above).\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst examplerule = new ovh.IpLoadBalancingHttpRouteRule(\"examplerule\", {\n    displayName: \"Match example.com Host header\",\n    field: \"headers\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n    routeId: ovh_iploadbalancing_http_route_httpsredirect.id,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    subField: \"Host\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nexamplerule = ovh.IpLoadBalancingHttpRouteRule(\"examplerule\",\n    display_name=\"Match example.com Host header\",\n    field=\"headers\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\",\n    route_id=ovh_iploadbalancing_http_route[\"httpsredirect\"][\"id\"],\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    sub_field=\"Host\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var examplerule = new Ovh.IpLoadBalancingHttpRouteRule(\"examplerule\", new()\n    {\n        DisplayName = \"Match example.com Host header\",\n        Field = \"headers\",\n        Match = \"is\",\n        Negate = false,\n        Pattern = \"example.com\",\n        RouteId = ovh_iploadbalancing_http_route.Httpsredirect.Id,\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        SubField = \"Host\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewIpLoadBalancingHttpRouteRule(ctx, \"examplerule\", \u0026ovh.IpLoadBalancingHttpRouteRuleArgs{\n\t\t\tDisplayName: pulumi.String(\"Match example.com Host header\"),\n\t\t\tField:       pulumi.String(\"headers\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t\tRouteId:     pulumi.Any(ovh_iploadbalancing_http_route.Httpsredirect.Id),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tSubField:    pulumi.String(\"Host\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancingHttpRouteRule;\nimport com.pulumi.ovh.IpLoadBalancingHttpRouteRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var examplerule = new IpLoadBalancingHttpRouteRule(\"examplerule\", IpLoadBalancingHttpRouteRuleArgs.builder()        \n            .displayName(\"Match example.com Host header\")\n            .field(\"headers\")\n            .match(\"is\")\n            .negate(false)\n            .pattern(\"example.com\")\n            .routeId(ovh_iploadbalancing_http_route.httpsredirect().id())\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .subField(\"Host\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  examplerule:\n    type: ovh:IpLoadBalancingHttpRouteRule\n    properties:\n      displayName: Match example.com Host header\n      field: headers\n      match: is\n      negate: false\n      pattern: example.com\n      routeId: ${ovh_iploadbalancing_http_route.httpsredirect.id}\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      subField: Host\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "required": [
                "field",
                "match",
                "negate",
                "routeId",
                "serviceName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "requiredInputs": [
                "field",
                "match",
                "routeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingHttpRouteRule resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your rule, this field is for you\n"
                    },
                    "field": {
                        "type": "string",
                        "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                    },
                    "match": {
                        "type": "string",
                        "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                    },
                    "negate": {
                        "type": "boolean",
                        "description": "Invert the matching operator effect\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                    },
                    "routeId": {
                        "type": "string",
                        "description": "The route to apply this rule\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "subField": {
                        "type": "string",
                        "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingRefresh:IpLoadBalancingRefresh": {
            "description": "Applies changes from other ovh_iploadbalancing_* resourcesto the production configuration of loadbalancers.\n",
            "properties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values traccked to trigger refresh, used also to form implicit dependencies\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                }
            },
            "required": [
                "keepers",
                "serviceName"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values traccked to trigger refresh, used also to form implicit dependencies\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "keepers",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingRefresh resources.\n",
                "properties": {
                    "keepers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of values traccked to trigger refresh, used also to form implicit dependencies\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingTcpFarm:IpLoadBalancingTcpFarm": {
            "description": "Creates a backend server group (farm) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.Iploadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farmname = new ovh.IpLoadBalancingTcpFarm(\"farmname\", {\n    displayName: \"ingress-8080-gra\",\n    serviceName: lb.id,\n    zone: \"GRA\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:index/IpLoadBalancingTcpFarmProbe:IpLoadBalancingTcpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                }
            },
            "required": [
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to recieve traffic on.\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:index/IpLoadBalancingTcpFarmProbe:IpLoadBalancingTcpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingTcpFarm resources.\n",
                "properties": {
                    "balance": {
                        "type": "string",
                        "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Readable label for loadbalancer farm\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port for backends to recieve traffic on.\n"
                    },
                    "probe": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingTcpFarmProbe:IpLoadBalancingTcpFarmProbe",
                        "description": "define a backend healthcheck probe\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "stickiness": {
                        "type": "string",
                        "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingTcpFarmServer:IpLoadBalancingTcpFarmServer": {
            "description": "Creates a backend server entry linked to loadbalancing group (farm)\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVH network)\n"
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "required": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVH network)\n",
                    "willReplaceOnChanges": true
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingTcpFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the backend server (IP from either internal or OVH network)\n",
                        "willReplaceOnChanges": true
                    },
                    "backup": {
                        "type": "boolean",
                        "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Label for the server\n"
                    },
                    "farmId": {
                        "type": "integer",
                        "description": "ID of the farm this server is attached to\n",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port that backend will respond on\n"
                    },
                    "probe": {
                        "type": "boolean",
                        "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                    },
                    "proxyProtocolVersion": {
                        "type": "string",
                        "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to recieving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "is the connection ciphered with SSL (TLS)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "backend status - `active` or `inactive`\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "used in loadbalancing algorithm\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingTcpFrontend:IpLoadBalancingTcpFrontend": {
            "description": "Creates a backend server group (frontend) to be used by loadbalancing frontend(s)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = pulumi.output(ovh.Iploadbalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n}));\nconst farm80 = new ovh.IpLoadBalancingTcpFarm(\"farm80\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\nconst testfrontend = new ovh.IpLoadBalancingTcpFrontend(\"testfrontend\", {\n    defaultFarmId: farm80.id.apply(id =\u003e Number.parseFloat(id)),\n    displayName: \"ingress-8080-gra\",\n    port: \"80,443\",\n    serviceName: lb.serviceName!,\n    zone: \"all\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "required": [
                "defaultFarmId",
                "defaultSslId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingTcpFrontend resources.\n",
                "properties": {
                    "allowedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                    },
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                    },
                    "defaultFarmId": {
                        "type": "integer",
                        "description": "Default TCP Farm of your frontend\n"
                    },
                    "defaultSslId": {
                        "type": "integer",
                        "description": "Default ssl served to your customer\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable your frontend. Default: 'false'\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your frontend, this field is for you\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Port(s) attached to your frontend. Supports single port (numerical value), \nrange (2 dash-delimited increasing ports) and comma-separated list of 'single port'\nand/or 'range'. Each port must be in the [1;49151] range\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "SSL deciphering. Default: 'false'\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingTcpRoute:IpLoadBalancingTcpRoute": {
            "description": "Manage tcp route for a loadbalancer service\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst tcpreject = new ovh.IpLoadBalancingTcpRoute(\"tcpreject\", {\n    action: {\n        type: \"reject\",\n    },\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\ntcpreject = ovh.IpLoadBalancingTcpRoute(\"tcpreject\",\n    action=ovh.IpLoadBalancingTcpRouteActionArgs(\n        type=\"reject\",\n    ),\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var tcpreject = new Ovh.IpLoadBalancingTcpRoute(\"tcpreject\", new()\n    {\n        Action = new Ovh.Inputs.IpLoadBalancingTcpRouteActionArgs\n        {\n            Type = \"reject\",\n        },\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewIpLoadBalancingTcpRoute(ctx, \"tcpreject\", \u0026ovh.IpLoadBalancingTcpRouteArgs{\n\t\t\tAction: \u0026IpLoadBalancingTcpRouteActionArgs{\n\t\t\t\tType: pulumi.String(\"reject\"),\n\t\t\t},\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancingTcpRoute;\nimport com.pulumi.ovh.IpLoadBalancingTcpRouteArgs;\nimport com.pulumi.ovh.inputs.IpLoadBalancingTcpRouteActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var tcpreject = new IpLoadBalancingTcpRoute(\"tcpreject\", IpLoadBalancingTcpRouteArgs.builder()        \n            .action(IpLoadBalancingTcpRouteActionArgs.builder()\n                .type(\"reject\")\n                .build())\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  tcpreject:\n    type: ovh:IpLoadBalancingTcpRoute\n    properties:\n      action:\n        type: reject\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "action": {
                    "$ref": "#/types/ovh:index/IpLoadBalancingTcpRouteAction:IpLoadBalancingTcpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingTcpRouteRule:IpLoadBalancingTcpRouteRule"
                    },
                    "description": "List of rules to match to trigger action\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "required": [
                "action",
                "frontendId",
                "rules",
                "serviceName",
                "status",
                "weight"
            ],
            "inputProperties": {
                "action": {
                    "$ref": "#/types/ovh:index/IpLoadBalancingTcpRouteAction:IpLoadBalancingTcpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "requiredInputs": [
                "action",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingTcpRoute resources.\n",
                "properties": {
                    "action": {
                        "$ref": "#/types/ovh:index/IpLoadBalancingTcpRouteAction:IpLoadBalancingTcpRouteAction",
                        "description": "Action triggered when all rules match\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your route, this field is for you\n"
                    },
                    "frontendId": {
                        "type": "integer",
                        "description": "Route traffic for this frontend\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/IpLoadBalancingTcpRouteRule:IpLoadBalancingTcpRouteRule"
                        },
                        "description": "List of rules to match to trigger action\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingTcpRouteRule:IpLoadBalancingTcpRouteRule": {
            "description": "Manage rules for TCP route.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst reject = new ovh.IpLoadBalancingTcpRoute(\"reject\", {\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n    frontendId: 11111,\n    action: {\n        type: \"reject\",\n    },\n});\nconst examplerule = new ovh.IpLoadBalancingTcpRouteRule(\"examplerule\", {\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    routeId: reject.id,\n    displayName: \"Match example.com host\",\n    field: \"sni\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nreject = ovh.IpLoadBalancingTcpRoute(\"reject\",\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1,\n    frontend_id=11111,\n    action=ovh.IpLoadBalancingTcpRouteActionArgs(\n        type=\"reject\",\n    ))\nexamplerule = ovh.IpLoadBalancingTcpRouteRule(\"examplerule\",\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    route_id=reject.id,\n    display_name=\"Match example.com host\",\n    field=\"sni\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var reject = new Ovh.IpLoadBalancingTcpRoute(\"reject\", new()\n    {\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n        FrontendId = 11111,\n        Action = new Ovh.Inputs.IpLoadBalancingTcpRouteActionArgs\n        {\n            Type = \"reject\",\n        },\n    });\n\n    var examplerule = new Ovh.IpLoadBalancingTcpRouteRule(\"examplerule\", new()\n    {\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        RouteId = reject.Id,\n        DisplayName = \"Match example.com host\",\n        Field = \"sni\",\n        Match = \"is\",\n        Negate = false,\n        Pattern = \"example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treject, err := ovh.NewIpLoadBalancingTcpRoute(ctx, \"reject\", \u0026ovh.IpLoadBalancingTcpRouteArgs{\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t\tFrontendId:  pulumi.Int(11111),\n\t\t\tAction: \u0026IpLoadBalancingTcpRouteActionArgs{\n\t\t\t\tType: pulumi.String(\"reject\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIpLoadBalancingTcpRouteRule(ctx, \"examplerule\", \u0026ovh.IpLoadBalancingTcpRouteRuleArgs{\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tRouteId:     reject.ID(),\n\t\t\tDisplayName: pulumi.String(\"Match example.com host\"),\n\t\t\tField:       pulumi.String(\"sni\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancingTcpRoute;\nimport com.pulumi.ovh.IpLoadBalancingTcpRouteArgs;\nimport com.pulumi.ovh.inputs.IpLoadBalancingTcpRouteActionArgs;\nimport com.pulumi.ovh.IpLoadBalancingTcpRouteRule;\nimport com.pulumi.ovh.IpLoadBalancingTcpRouteRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var reject = new IpLoadBalancingTcpRoute(\"reject\", IpLoadBalancingTcpRouteArgs.builder()        \n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .frontendId(11111)\n            .action(IpLoadBalancingTcpRouteActionArgs.builder()\n                .type(\"reject\")\n                .build())\n            .build());\n\n        var examplerule = new IpLoadBalancingTcpRouteRule(\"examplerule\", IpLoadBalancingTcpRouteRuleArgs.builder()        \n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .routeId(reject.id())\n            .displayName(\"Match example.com host\")\n            .field(\"sni\")\n            .match(\"is\")\n            .negate(false)\n            .pattern(\"example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  reject:\n    type: ovh:IpLoadBalancingTcpRoute\n    properties:\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n      frontendId: 11111\n      action:\n        type: reject\n  examplerule:\n    type: ovh:IpLoadBalancingTcpRouteRule\n    properties:\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      routeId: ${reject.id}\n      displayName: Match example.com host\n      field: sni\n      match: is\n      negate: false\n      pattern: example.com\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "required": [
                "field",
                "match",
                "negate",
                "routeId",
                "serviceName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "requiredInputs": [
                "field",
                "match",
                "routeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingTcpRouteRule resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your rule, this field is for you\n"
                    },
                    "field": {
                        "type": "string",
                        "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                    },
                    "match": {
                        "type": "string",
                        "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                    },
                    "negate": {
                        "type": "boolean",
                        "description": "Invert the matching operator effect\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                    },
                    "routeId": {
                        "type": "string",
                        "description": "The route to apply this rule\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "subField": {
                        "type": "string",
                        "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipLoadBalancingVrackNetwork:IpLoadBalancingVrackNetwork": {
            "description": "Manage a vrack network for your IP Loadbalancing service.\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your vrack network\n"
                },
                "farmIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "This attribute is there for documentation purpose only and isnt passed to the OVH API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                },
                "natIp": {
                    "type": "string",
                    "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "IP block of the private network in the vRack\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "(Required) Internal Load Balancer identifier of the vRack private network\n"
                }
            },
            "required": [
                "natIp",
                "serviceName",
                "subnet",
                "vlan",
                "vrackNetworkId"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your vrack network\n"
                },
                "farmIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "This attribute is there for documentation purpose only and isnt passed to the OVH API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                },
                "natIp": {
                    "type": "string",
                    "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "IP block of the private network in the vRack\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                }
            },
            "requiredInputs": [
                "natIp",
                "serviceName",
                "subnet"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadBalancingVrackNetwork resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your vrack network\n"
                    },
                    "farmIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "This attribute is there for documentation purpose only and isnt passed to the OVH API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                    },
                    "natIp": {
                        "type": "string",
                        "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "IP block of the private network in the vRack\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "(Required) Internal Load Balancer identifier of the vRack private network\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipReverse:IpReverse": {
            "description": "Provides a OVH IP reverse.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\n// Set the reverse of an IP\nconst test = new ovh.IpReverse(\"test\", {\n    ip: \"192.0.2.0/24\",\n    ipReverse: \"192.0.2.1\",\n    reverse: \"example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\n# Set the reverse of an IP\ntest = ovh.IpReverse(\"test\",\n    ip=\"192.0.2.0/24\",\n    ip_reverse=\"192.0.2.1\",\n    reverse=\"example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Set the reverse of an IP\n    var test = new Ovh.IpReverse(\"test\", new()\n    {\n        Ip = \"192.0.2.0/24\",\n        IpReverseAddress = \"192.0.2.1\",\n        Reverse = \"example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewIpReverse(ctx, \"test\", \u0026ovh.IpReverseArgs{\n\t\t\tIp:        pulumi.String(\"192.0.2.0/24\"),\n\t\t\tIpReverse: pulumi.String(\"192.0.2.1\"),\n\t\t\tReverse:   pulumi.String(\"example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpReverse;\nimport com.pulumi.ovh.IpReverseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new IpReverse(\"test\", IpReverseArgs.builder()        \n            .ip(\"192.0.2.0/24\")\n            .ipReverse(\"192.0.2.1\")\n            .reverse(\"example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Set the reverse of an IP\n  test:\n    type: ovh:IpReverse\n    properties:\n      ip: 192.0.2.0/24\n      ipReverse: 192.0.2.1\n      reverse: example.com\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "The IP block to which the IP belongs\n"
                },
                "ipReverse": {
                    "type": "string",
                    "description": "The IP to set the reverse of\n",
                    "language": {
                        "csharp": {
                            "name": "IpReverseAddress"
                        }
                    }
                },
                "reverse": {
                    "type": "string",
                    "description": "The value of the reverse\n"
                }
            },
            "required": [
                "ip",
                "ipReverse",
                "reverse"
            ],
            "inputProperties": {
                "ip": {
                    "type": "string",
                    "description": "The IP block to which the IP belongs\n",
                    "willReplaceOnChanges": true
                },
                "ipReverse": {
                    "type": "string",
                    "description": "The IP to set the reverse of\n",
                    "language": {
                        "csharp": {
                            "name": "IpReverseAddress"
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "reverse": {
                    "type": "string",
                    "description": "The value of the reverse\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ip",
                "ipReverse",
                "reverse"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpReverse resources.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The IP block to which the IP belongs\n",
                        "willReplaceOnChanges": true
                    },
                    "ipReverse": {
                        "type": "string",
                        "description": "The IP to set the reverse of\n",
                        "language": {
                            "csharp": {
                                "name": "IpReverseAddress"
                            }
                        },
                        "willReplaceOnChanges": true
                    },
                    "reverse": {
                        "type": "string",
                        "description": "The value of the reverse\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/ipService:IpService": {
            "description": "Orders an ip service.\n\n\n## Important\n\nThis resource orders an OVH product for a long period of time and may generate heavy costs !\nUse with caution.\n\n__NOTE__ 1: the \"default-payment-mean\" will scan your registered bank accounts, credit card and paypal payment means to find your default payment mean.\n\n__NOTE__ 2: this resource is in beta state. Use with caution.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst mycart = ovh.getOrderCart({\n    ovhSubsidiary: \"fr\",\n    description: \"order ip block\",\n});\nconst ipblockOrderCartProductPlan = mycart.then(mycart =\u003e ovh.getOrderCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"ip\",\n    planCode: \"ip-v4-s30-ripe\",\n}));\nconst ipblockIpService = new ovh.IpService(\"ipblockIpService\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"ovh-account\",\n    description: \"my ip block\",\n    plan: {\n        duration: ipblockOrderCartProductPlan.then(ipblockOrderCartProductPlan =\u003e ipblockOrderCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: ipblockOrderCartProductPlan.then(ipblockOrderCartProductPlan =\u003e ipblockOrderCartProductPlan.planCode),\n        pricingMode: ipblockOrderCartProductPlan.then(ipblockOrderCartProductPlan =\u003e ipblockOrderCartProductPlan.selectedPrices?[0]?.pricingMode),\n        configurations: [{\n            label: \"country\",\n            value: \"FR\",\n        }],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\nmycart = ovh.get_order_cart(ovh_subsidiary=\"fr\",\n    description=\"order ip block\")\nipblock_order_cart_product_plan = ovh.get_order_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"ip\",\n    plan_code=\"ip-v4-s30-ripe\")\nipblock_ip_service = ovh.IpService(\"ipblockIpService\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"ovh-account\",\n    description=\"my ip block\",\n    plan=ovh.IpServicePlanArgs(\n        duration=ipblock_order_cart_product_plan.selected_prices[0].duration,\n        plan_code=ipblock_order_cart_product_plan.plan_code,\n        pricing_mode=ipblock_order_cart_product_plan.selected_prices[0].pricing_mode,\n        configurations=[ovh.IpServicePlanConfigurationArgs(\n            label=\"country\",\n            value=\"FR\",\n        )],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"order ip block\",\n    });\n\n    var ipblockOrderCartProductPlan = Ovh.GetOrderCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"ip\",\n        PlanCode = \"ip-v4-s30-ripe\",\n    });\n\n    var ipblockIpService = new Ovh.IpService(\"ipblockIpService\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.OvhSubsidiary),\n        PaymentMean = \"ovh-account\",\n        Description = \"my ip block\",\n        Plan = new Ovh.Inputs.IpServicePlanArgs\n        {\n            Duration = ipblockOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = ipblockOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.PlanCode),\n            PricingMode = ipblockOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Inputs.IpServicePlanConfigurationArgs\n                {\n                    Label = \"country\",\n                    Value = \"FR\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"order ip block\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipblockOrderCartProductPlan, err := ovh.GetOrderCartProductPlan(ctx, \u0026GetOrderCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"ip\",\n\t\t\tPlanCode:      \"ip-v4-s30-ripe\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewIpService(ctx, \"ipblockIpService\", \u0026ovh.IpServiceArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"ovh-account\"),\n\t\t\tDescription:   pulumi.String(\"my ip block\"),\n\t\t\tPlan: \u0026IpServicePlanArgs{\n\t\t\t\tDuration:    pulumi.String(ipblockOrderCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(ipblockOrderCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(ipblockOrderCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: IpServicePlanConfigurationArray{\n\t\t\t\t\t\u0026IpServicePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"country\"),\n\t\t\t\t\t\tValue: pulumi.String(\"FR\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductPlanArgs;\nimport com.pulumi.ovh.IpService;\nimport com.pulumi.ovh.IpServiceArgs;\nimport com.pulumi.ovh.inputs.IpServicePlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"order ip block\")\n            .build());\n\n        final var ipblockOrderCartProductPlan = OvhFunctions.getOrderCartProductPlan(GetOrderCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"ip\")\n            .planCode(\"ip-v4-s30-ripe\")\n            .build());\n\n        var ipblockIpService = new IpService(\"ipblockIpService\", IpServiceArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.ovhSubsidiary()))\n            .paymentMean(\"ovh-account\")\n            .description(\"my ip block\")\n            .plan(IpServicePlanArgs.builder()\n                .duration(ipblockOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(ipblockOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.planCode()))\n                .pricingMode(ipblockOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(IpServicePlanConfigurationArgs.builder()\n                    .label(\"country\")\n                    .value(\"FR\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ipblockIpService:\n    type: ovh:IpService\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: ovh-account\n      description: my ip block\n      plan:\n        duration: ${ipblockOrderCartProductPlan.selectedPrices[0].duration}\n        planCode: ${ipblockOrderCartProductPlan.planCode}\n        pricingMode: ${ipblockOrderCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: country\n            value: FR\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: order ip block\n  ipblockOrderCartProductPlan:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: ip\n        planCode: ip-v4-s30-ripe\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "canBeTerminated": {
                    "type": "boolean",
                    "description": "can be terminated\n"
                },
                "country": {
                    "type": "string",
                    "description": "country\n"
                },
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "ip block\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpServiceOrder:IpServiceOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "organisationId": {
                    "type": "string",
                    "description": "IP block organisation Id\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:index/IpServicePlan:IpServicePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpServicePlanOption:IpServicePlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "routedTos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpServiceRoutedTo:IpServiceRoutedTo"
                    },
                    "description": "Routage information\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service where ip is routed to\n* `service_name`: service name\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible values for ip type\n"
                }
            },
            "required": [
                "canBeTerminated",
                "country",
                "description",
                "ip",
                "orders",
                "organisationId",
                "ovhSubsidiary",
                "paymentMean",
                "plan",
                "routedTos",
                "serviceName",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip.\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:index/IpServicePlan:IpServicePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/IpServicePlanOption:IpServicePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpService resources.\n",
                "properties": {
                    "canBeTerminated": {
                        "type": "boolean",
                        "description": "can be terminated\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "country\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Custom description on your ip.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "ip block\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/IpServiceOrder:IpServiceOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "organisationId": {
                        "type": "string",
                        "description": "IP block organisation Id\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:index/IpServicePlan:IpServicePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/IpServicePlanOption:IpServicePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "routedTos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/IpServiceRoutedTo:IpServiceRoutedTo"
                        },
                        "description": "Routage information\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service where ip is routed to\n* `service_name`: service name\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible values for ip type\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meIdentityUser:MeIdentityUser": {
            "description": "Creates an identity user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myUser = new ovh.MeIdentityUser(\"my_user\", {\n    description: \"Some custom description\",\n    email: \"my_login@example.com\",\n    group: \"DEFAULT\",\n    login: \"my_login\",\n    password: \"super-s3cr3t!password\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nmy_user = ovh.MeIdentityUser(\"myUser\",\n    description=\"Some custom description\",\n    email=\"my_login@example.com\",\n    group=\"DEFAULT\",\n    login=\"my_login\",\n    password=\"super-s3cr3t!password\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myUser = new Ovh.MeIdentityUser(\"myUser\", new()\n    {\n        Description = \"Some custom description\",\n        Email = \"my_login@example.com\",\n        Group = \"DEFAULT\",\n        Login = \"my_login\",\n        Password = \"super-s3cr3t!password\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewMeIdentityUser(ctx, \"myUser\", \u0026ovh.MeIdentityUserArgs{\n\t\t\tDescription: pulumi.String(\"Some custom description\"),\n\t\t\tEmail:       pulumi.String(\"my_login@example.com\"),\n\t\t\tGroup:       pulumi.String(\"DEFAULT\"),\n\t\t\tLogin:       pulumi.String(\"my_login\"),\n\t\t\tPassword:    pulumi.String(\"super-s3cr3t!password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.MeIdentityUser;\nimport com.pulumi.ovh.MeIdentityUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myUser = new MeIdentityUser(\"myUser\", MeIdentityUserArgs.builder()        \n            .description(\"Some custom description\")\n            .email(\"my_login@example.com\")\n            .group(\"DEFAULT\")\n            .login(\"my_login\")\n            .password(\"super-s3cr3t!password\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myUser:\n    type: ovh:MeIdentityUser\n    properties:\n      description: Some custom description\n      email: my_login@example.com\n      group: DEFAULT\n      login: my_login\n      password: super-s3cr3t!password\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "creation": {
                    "type": "string",
                    "description": "Creation date of this user.\n"
                },
                "description": {
                    "type": "string",
                    "description": "User description.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User's email.\n"
                },
                "group": {
                    "type": "string",
                    "description": "User's group.\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update of this user.\n"
                },
                "login": {
                    "type": "string",
                    "description": "User's login suffix.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User's password.\n"
                },
                "passwordLastUpdate": {
                    "type": "string",
                    "description": "When the user changed his password for the last time.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current user's status.\n"
                }
            },
            "required": [
                "creation",
                "email",
                "lastUpdate",
                "login",
                "password",
                "passwordLastUpdate",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "User description.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User's email.\n"
                },
                "group": {
                    "type": "string",
                    "description": "User's group.\n"
                },
                "login": {
                    "type": "string",
                    "description": "User's login suffix.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "User's password.\n"
                }
            },
            "requiredInputs": [
                "email",
                "login",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeIdentityUser resources.\n",
                "properties": {
                    "creation": {
                        "type": "string",
                        "description": "Creation date of this user.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User description.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "User's group.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update of this user.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "User's login suffix.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password.\n"
                    },
                    "passwordLastUpdate": {
                        "type": "string",
                        "description": "When the user changed his password for the last time.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current user's status.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meInstallationTemplatePartitionScheme:MeInstallationTemplatePartitionScheme": {
            "description": "Use this resource to create partition scheme for a custom installation template available for dedicated servers.\n\n\n## Import\n\nUse the fake id format to import the resource `template_name/name` ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,\namong all the compatible partitioning schemes (given the underlying hardware specifications)\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "This template name\n"
                }
            },
            "required": [
                "name",
                "priority",
                "templateName"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,\namong all the compatible partitioning schemes (given the underlying hardware specifications)\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "This template name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "priority",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeInstallationTemplatePartitionScheme resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "name of this partitioning scheme\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default,\namong all the compatible partitioning schemes (given the underlying hardware specifications)\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "This template name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meInstallationTemplatePartitionSchemeHardwareRaid:MeInstallationTemplatePartitionSchemeHardwareRaid": {
            "description": "Use this resource to create a hardware raid group in the partition scheme of a custom installation template available for dedicated servers.\n\n\n## Import\n\nUse the fake id format to import the resource `template_name/scheme_name/name`. ",
            "properties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id\n"
                },
                "mode": {
                    "type": "string",
                    "description": "RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Hardware RAID name\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "step": {
                    "type": "integer",
                    "description": "Specifies the creation order of the hardware RAID\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                }
            },
            "required": [
                "disks",
                "mode",
                "name",
                "schemeName",
                "step",
                "templateName"
            ],
            "inputProperties": {
                "disks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id\n"
                },
                "mode": {
                    "type": "string",
                    "description": "RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Hardware RAID name\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "step": {
                    "type": "integer",
                    "description": "Specifies the creation order of the hardware RAID\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "disks",
                "mode",
                "schemeName",
                "step",
                "templateName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeInstallationTemplatePartitionSchemeHardwareRaid resources.\n",
                "properties": {
                    "disks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Disk List. Syntax is cX:dY for disks and [cX:dY,cX:dY] for groups. With X and Y resp. the controller id and the disk id\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "RAID mode (raid0, raid1, raid10, raid5, raid50, raid6, raid60)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Hardware RAID name\n"
                    },
                    "schemeName": {
                        "type": "string",
                        "description": "name of this partitioning scheme\n"
                    },
                    "step": {
                        "type": "integer",
                        "description": "Specifies the creation order of the hardware RAID\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meInstallationTemplatePartitionSchemePartition:MeInstallationTemplatePartitionSchemePartition": {
            "description": "Use this resource to create a partition in the partition scheme of a custom installation template available for dedicated servers.\n\n\n## Import\n\nUse the fake id format to import the resource `template_name/scheme_name/mountpoint` (example\"mytemplate/myscheme//\"). ",
            "properties": {
                "filesystem": {
                    "type": "string",
                    "description": "Partition filesystem\n"
                },
                "mountpoint": {
                    "type": "string",
                    "description": "partition mount point\n"
                },
                "order": {
                    "type": "integer",
                    "description": "step or order. specifies the creation order of the partition on the disk\n"
                },
                "raid": {
                    "type": "string",
                    "description": "raid partition type\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "size": {
                    "type": "integer",
                    "description": "size of partition in MB, 0 =\u003e rest of the space\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n"
                },
                "type": {
                    "type": "string",
                    "description": "partition type\n"
                },
                "volumeName": {
                    "type": "string",
                    "description": "The volume name needed for proxmox distribution\n"
                }
            },
            "required": [
                "filesystem",
                "mountpoint",
                "order",
                "raid",
                "schemeName",
                "size",
                "templateName",
                "type",
                "volumeName"
            ],
            "inputProperties": {
                "filesystem": {
                    "type": "string",
                    "description": "Partition filesystem\n"
                },
                "mountpoint": {
                    "type": "string",
                    "description": "partition mount point\n"
                },
                "order": {
                    "type": "integer",
                    "description": "step or order. specifies the creation order of the partition on the disk\n"
                },
                "raid": {
                    "type": "string",
                    "description": "raid partition type\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "name of this partitioning scheme\n"
                },
                "size": {
                    "type": "integer",
                    "description": "size of partition in MB, 0 =\u003e rest of the space\n"
                },
                "templateName": {
                    "type": "string",
                    "description": "Template name\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "partition type\n"
                },
                "volumeName": {
                    "type": "string",
                    "description": "The volume name needed for proxmox distribution\n"
                }
            },
            "requiredInputs": [
                "filesystem",
                "mountpoint",
                "order",
                "schemeName",
                "size",
                "templateName",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeInstallationTemplatePartitionSchemePartition resources.\n",
                "properties": {
                    "filesystem": {
                        "type": "string",
                        "description": "Partition filesystem\n"
                    },
                    "mountpoint": {
                        "type": "string",
                        "description": "partition mount point\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "step or order. specifies the creation order of the partition on the disk\n"
                    },
                    "raid": {
                        "type": "string",
                        "description": "raid partition type\n"
                    },
                    "schemeName": {
                        "type": "string",
                        "description": "name of this partitioning scheme\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "size of partition in MB, 0 =\u003e rest of the space\n"
                    },
                    "templateName": {
                        "type": "string",
                        "description": "Template name\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "partition type\n"
                    },
                    "volumeName": {
                        "type": "string",
                        "description": "The volume name needed for proxmox distribution\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meIpxeScript:MeIpxeScript": {
            "description": "Creates an IPXE Script.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fs from \"fs\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst script = new ovh.MeIpxeScript(\"script\", {script: fs.readFileSync(`${path.module}/boot.ipxe`)});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nscript = ovh.MeIpxeScript(\"script\", script=(lambda path: open(path).read())(f\"{path['module']}/boot.ipxe\"))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.IO;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var script = new Ovh.MeIpxeScript(\"script\", new()\n    {\n        Script = File.ReadAllText($\"{path.Module}/boot.ipxe\"),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewMeIpxeScript(ctx, \"script\", \u0026ovh.MeIpxeScriptArgs{\n\t\t\tScript: readFileOrPanic(fmt.Sprintf(\"%v/boot.ipxe\", path.Module)),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.MeIpxeScript;\nimport com.pulumi.ovh.MeIpxeScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var script = new MeIpxeScript(\"script\", MeIpxeScriptArgs.builder()        \n            .script(Files.readString(Paths.get(String.format(\"%s/boot.ipxe\", path.module()))))\n            .build());\n\n    }\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a fake description ('$name auto description') is passed at creation time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the IPXE Script.\n"
                },
                "script": {
                    "type": "string",
                    "description": "The content of the script.\n"
                }
            },
            "required": [
                "description",
                "name",
                "script"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a fake description ('$name auto description') is passed at creation time.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the IPXE Script.\n",
                    "willReplaceOnChanges": true
                },
                "script": {
                    "type": "string",
                    "description": "The content of the script.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeIpxeScript resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "For documentation purpose only. This attribute is not passed to the OVH API as it cannot be retrieved back. Instead a fake description ('$name auto description') is passed at creation time.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the IPXE Script.\n",
                        "willReplaceOnChanges": true
                    },
                    "script": {
                        "type": "string",
                        "description": "The content of the script.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/meSshKey:MeSshKey": {
            "description": "Creates an SSH Key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mykey = new ovh.MeSshKey(\"mykey\", {\n    key: \"ssh-ed25519 AAAAC3...\",\n    keyName: \"mykey\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nmykey = ovh.MeSshKey(\"mykey\",\n    key=\"ssh-ed25519 AAAAC3...\",\n    key_name=\"mykey\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mykey = new Ovh.MeSshKey(\"mykey\", new()\n    {\n        Key = \"ssh-ed25519 AAAAC3...\",\n        KeyName = \"mykey\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewMeSshKey(ctx, \"mykey\", \u0026ovh.MeSshKeyArgs{\n\t\t\tKey:     pulumi.String(\"ssh-ed25519 AAAAC3...\"),\n\t\t\tKeyName: pulumi.String(\"mykey\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.MeSshKey;\nimport com.pulumi.ovh.MeSshKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mykey = new MeSshKey(\"mykey\", MeSshKeyArgs.builder()        \n            .key(\"ssh-ed25519 AAAAC3...\")\n            .keyName(\"mykey\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mykey:\n    type: ovh:MeSshKey\n    properties:\n      key: ssh-ed25519 AAAAC3...\n      keyName: mykey\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "default": {
                    "type": "boolean",
                    "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The content of the public key in the form \"ssh-algo content\", e.g. \"ssh-ed25519 AAAAC3...\".\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "The friendly name of this SSH key.\n"
                }
            },
            "required": [
                "default",
                "key",
                "keyName"
            ],
            "inputProperties": {
                "default": {
                    "type": "boolean",
                    "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The content of the public key in the form \"ssh-algo content\", e.g. \"ssh-ed25519 AAAAC3...\".\n",
                    "willReplaceOnChanges": true
                },
                "keyName": {
                    "type": "string",
                    "description": "The friendly name of this SSH key.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "key",
                "keyName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MeSshKey resources.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The content of the public key in the form \"ssh-algo content\", e.g. \"ssh-ed25519 AAAAC3...\".\n",
                        "willReplaceOnChanges": true
                    },
                    "keyName": {
                        "type": "string",
                        "description": "The friendly name of this SSH key.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vrack:Vrack": {
            "description": "Orders a vrack.\n\n## Important\n\nThis resource is in beta state. Use with caution.\n\n__NOTE__ : Currently, the OVH api doesn't support Vrack termination. You have to open a support ticket to ask for vrack termination. Otherwise, you may hit vrack quota issues.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst mycart = ovh.getOrderCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my vrack order cart\",\n});\nconst vrackOrderCartProductPlan = mycart.then(mycart =\u003e ovh.getOrderCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"vrack\",\n    planCode: \"vrack\",\n}));\nconst vrackVrack = new ovh.Vrack(\"vrackVrack\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"fidelity\",\n    description: \"my vrack\",\n    plan: {\n        duration: vrackOrderCartProductPlan.then(vrackOrderCartProductPlan =\u003e vrackOrderCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: vrackOrderCartProductPlan.then(vrackOrderCartProductPlan =\u003e vrackOrderCartProductPlan.planCode),\n        pricingMode: vrackOrderCartProductPlan.then(vrackOrderCartProductPlan =\u003e vrackOrderCartProductPlan.selectedPrices?[0]?.pricingMode),\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\nmycart = ovh.get_order_cart(ovh_subsidiary=\"fr\",\n    description=\"my vrack order cart\")\nvrack_order_cart_product_plan = ovh.get_order_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"vrack\",\n    plan_code=\"vrack\")\nvrack_vrack = ovh.Vrack(\"vrackVrack\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"fidelity\",\n    description=\"my vrack\",\n    plan=ovh.VrackPlanArgs(\n        duration=vrack_order_cart_product_plan.selected_prices[0].duration,\n        plan_code=vrack_order_cart_product_plan.plan_code,\n        pricing_mode=vrack_order_cart_product_plan.selected_prices[0].pricing_mode,\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my vrack order cart\",\n    });\n\n    var vrackOrderCartProductPlan = Ovh.GetOrderCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"vrack\",\n        PlanCode = \"vrack\",\n    });\n\n    var vrackVrack = new Ovh.Vrack(\"vrackVrack\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.OvhSubsidiary),\n        PaymentMean = \"fidelity\",\n        Description = \"my vrack\",\n        Plan = new Ovh.Inputs.VrackPlanArgs\n        {\n            Duration = vrackOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = vrackOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.PlanCode),\n            PricingMode = vrackOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my vrack order cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvrackOrderCartProductPlan, err := ovh.GetOrderCartProductPlan(ctx, \u0026GetOrderCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"vrack\",\n\t\t\tPlanCode:      \"vrack\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewVrack(ctx, \"vrackVrack\", \u0026ovh.VrackArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"fidelity\"),\n\t\t\tDescription:   pulumi.String(\"my vrack\"),\n\t\t\tPlan: \u0026VrackPlanArgs{\n\t\t\t\tDuration:    pulumi.String(vrackOrderCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(vrackOrderCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(vrackOrderCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductPlanArgs;\nimport com.pulumi.ovh.Vrack;\nimport com.pulumi.ovh.VrackArgs;\nimport com.pulumi.ovh.inputs.VrackPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my vrack order cart\")\n            .build());\n\n        final var vrackOrderCartProductPlan = OvhFunctions.getOrderCartProductPlan(GetOrderCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"vrack\")\n            .planCode(\"vrack\")\n            .build());\n\n        var vrackVrack = new Vrack(\"vrackVrack\", VrackArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.ovhSubsidiary()))\n            .paymentMean(\"fidelity\")\n            .description(\"my vrack\")\n            .plan(VrackPlanArgs.builder()\n                .duration(vrackOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(vrackOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.planCode()))\n                .pricingMode(vrackOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackVrack:\n    type: ovh:Vrack\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: fidelity\n      description: my vrack\n      plan:\n        duration: ${vrackOrderCartProductPlan.selectedPrices[0].duration}\n        planCode: ${vrackOrderCartProductPlan.planCode}\n        pricingMode: ${vrackOrderCartProductPlan.selectedPrices[0].pricingMode}\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my vrack order cart\n  vrackOrderCartProductPlan:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: vrack\n        planCode: vrack\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n"
                },
                "name": {
                    "type": "string",
                    "description": "yourvrackname\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/VrackOrder:VrackOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n"
                },
                "plan": {
                    "$ref": "#/types/ovh:index/VrackPlan:VrackPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/VrackPlanOption:VrackPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "required": [
                "description",
                "name",
                "orders",
                "ovhSubsidiary",
                "paymentMean",
                "plan",
                "serviceName"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n"
                },
                "name": {
                    "type": "string",
                    "description": "yourvrackname\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:index/VrackPlan:VrackPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/VrackPlanOption:VrackPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "paymentMean",
                "plan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vrack resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "yourvrackdescription\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "yourvrackname\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/VrackOrder:VrackOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode (One of \"default-payment-mean\", \"fidelity\", \"ovh-account\")\n",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:index/VrackPlan:VrackPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/VrackPlanOption:VrackPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vrackCloudProject:VrackCloudProject": {
            "description": "Attach a Public Cloud Project to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vcp = new ovh.VrackCloudProject(\"vcp\", {\n    projectId: \"67890\",\n    serviceName: \"12345\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nvcp = ovh.VrackCloudProject(\"vcp\",\n    project_id=\"67890\",\n    service_name=\"12345\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vcp = new Ovh.VrackCloudProject(\"vcp\", new()\n    {\n        ProjectId = \"67890\",\n        ServiceName = \"12345\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewVrackCloudProject(ctx, \"vcp\", \u0026ovh.VrackCloudProjectArgs{\n\t\t\tProjectId:   pulumi.String(\"67890\"),\n\t\t\tServiceName: pulumi.String(\"12345\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.VrackCloudProject;\nimport com.pulumi.ovh.VrackCloudProjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vcp = new VrackCloudProject(\"vcp\", VrackCloudProjectArgs.builder()        \n            .projectId(\"67890\")\n            .serviceName(\"12345\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vcp:\n    type: ovh:VrackCloudProject\n    properties:\n      projectId: 67890\n      serviceName: 12345\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "projectId",
                "serviceName"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "projectId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrackCloudProject resources.\n",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vrackDedicatedServer:VrackDedicatedServer": {
            "description": "Attach a dedicated server to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vds = new ovh.VrackDedicatedServer(\"vds\", {\n    serverId: \"67890\",\n    serviceName: \"XXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nvds = ovh.VrackDedicatedServer(\"vds\",\n    server_id=\"67890\",\n    service_name=\"XXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vds = new Ovh.VrackDedicatedServer(\"vds\", new()\n    {\n        ServerId = \"67890\",\n        ServiceName = \"XXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewVrackDedicatedServer(ctx, \"vds\", \u0026ovh.VrackDedicatedServerArgs{\n\t\t\tServerId:    pulumi.String(\"67890\"),\n\t\t\tServiceName: pulumi.String(\"XXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.VrackDedicatedServer;\nimport com.pulumi.ovh.VrackDedicatedServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vds = new VrackDedicatedServer(\"vds\", VrackDedicatedServerArgs.builder()        \n            .serverId(\"67890\")\n            .serviceName(\"XXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vds:\n    type: ovh:VrackDedicatedServer\n    properties:\n      serverId: 67890\n      serviceName: XXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "serverId": {
                    "type": "string",
                    "description": "The id of the dedicated server.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "serverId",
                "serviceName"
            ],
            "inputProperties": {
                "serverId": {
                    "type": "string",
                    "description": "The id of the dedicated server.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serverId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrackDedicatedServer resources.\n",
                "properties": {
                    "serverId": {
                        "type": "string",
                        "description": "The id of the dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vrackDedicatedServerInterface:VrackDedicatedServerInterface": {
            "description": "Attach a Dedicated Server Network Interface to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vdsi = new ovh.VrackDedicatedServerInterface(\"vdsi\", {\n    interfaceId: \"67890\",\n    serviceName: \"12345\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nvdsi = ovh.VrackDedicatedServerInterface(\"vdsi\",\n    interface_id=\"67890\",\n    service_name=\"12345\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vdsi = new Ovh.VrackDedicatedServerInterface(\"vdsi\", new()\n    {\n        InterfaceId = \"67890\",\n        ServiceName = \"12345\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewVrackDedicatedServerInterface(ctx, \"vdsi\", \u0026ovh.VrackDedicatedServerInterfaceArgs{\n\t\t\tInterfaceId: pulumi.String(\"67890\"),\n\t\t\tServiceName: pulumi.String(\"12345\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.VrackDedicatedServerInterface;\nimport com.pulumi.ovh.VrackDedicatedServerInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vdsi = new VrackDedicatedServerInterface(\"vdsi\", VrackDedicatedServerInterfaceArgs.builder()        \n            .interfaceId(\"67890\")\n            .serviceName(\"12345\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vdsi:\n    type: ovh:VrackDedicatedServerInterface\n    properties:\n      interfaceId: 67890\n      serviceName: 12345\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "interfaceId": {
                    "type": "string",
                    "description": "The id of dedicated server network interface.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "interfaceId",
                "serviceName"
            ],
            "inputProperties": {
                "interfaceId": {
                    "type": "string",
                    "description": "The id of dedicated server network interface.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "interfaceId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrackDedicatedServerInterface resources.\n",
                "properties": {
                    "interfaceId": {
                        "type": "string",
                        "description": "The id of dedicated server network interface.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the vrack. If omitted,\nthe `OVH_VRACK_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vrackIp:VrackIp": {
            "description": "Attach a Ip block to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\nimport * as ovh from \"@pulumiverse/ovh\";\n\nconst mycart = ovh.getOrderCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cart\",\n});\nconst vrackOrderCartProductPlan = mycart.then(mycart =\u003e ovh.getOrderCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"vrack\",\n    planCode: \"vrack\",\n}));\nconst vrackVrack = new ovh.Vrack(\"vrackVrack\", {\n    description: mycart.then(mycart =\u003e mycart.description),\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"fidelity\",\n    plan: {\n        duration: vrackOrderCartProductPlan.then(vrackOrderCartProductPlan =\u003e vrackOrderCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: vrackOrderCartProductPlan.then(vrackOrderCartProductPlan =\u003e vrackOrderCartProductPlan.planCode),\n        pricingMode: vrackOrderCartProductPlan.then(vrackOrderCartProductPlan =\u003e vrackOrderCartProductPlan.selectedPrices?[0]?.pricingMode),\n    },\n});\nconst ipblockOrderCartProductPlan = mycart.then(mycart =\u003e ovh.getOrderCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"ip\",\n    planCode: \"ip-v4-s30-ripe\",\n}));\nconst ipblockIpService = new ovh.IpService(\"ipblockIpService\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    paymentMean: \"ovh-account\",\n    description: mycart.then(mycart =\u003e mycart.description),\n    plan: {\n        duration: ipblockOrderCartProductPlan.then(ipblockOrderCartProductPlan =\u003e ipblockOrderCartProductPlan.selectedPrices?[0]?.duration),\n        planCode: ipblockOrderCartProductPlan.then(ipblockOrderCartProductPlan =\u003e ipblockOrderCartProductPlan.planCode),\n        pricingMode: ipblockOrderCartProductPlan.then(ipblockOrderCartProductPlan =\u003e ipblockOrderCartProductPlan.selectedPrices?[0]?.pricingMode),\n        configurations: [{\n            label: \"country\",\n            value: \"FR\",\n        }],\n    },\n});\nconst vrackblock = new ovh.VrackIp(\"vrackblock\", {\n    serviceName: vrackVrack.serviceName,\n    block: ipblockIpService.ip,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\nimport pulumiverse_ovh as ovh\n\nmycart = ovh.get_order_cart(ovh_subsidiary=\"fr\",\n    description=\"my cart\")\nvrack_order_cart_product_plan = ovh.get_order_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"vrack\",\n    plan_code=\"vrack\")\nvrack_vrack = ovh.Vrack(\"vrackVrack\",\n    description=mycart.description,\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"fidelity\",\n    plan=ovh.VrackPlanArgs(\n        duration=vrack_order_cart_product_plan.selected_prices[0].duration,\n        plan_code=vrack_order_cart_product_plan.plan_code,\n        pricing_mode=vrack_order_cart_product_plan.selected_prices[0].pricing_mode,\n    ))\nipblock_order_cart_product_plan = ovh.get_order_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"ip\",\n    plan_code=\"ip-v4-s30-ripe\")\nipblock_ip_service = ovh.IpService(\"ipblockIpService\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    payment_mean=\"ovh-account\",\n    description=mycart.description,\n    plan=ovh.IpServicePlanArgs(\n        duration=ipblock_order_cart_product_plan.selected_prices[0].duration,\n        plan_code=ipblock_order_cart_product_plan.plan_code,\n        pricing_mode=ipblock_order_cart_product_plan.selected_prices[0].pricing_mode,\n        configurations=[ovh.IpServicePlanConfigurationArgs(\n            label=\"country\",\n            value=\"FR\",\n        )],\n    ))\nvrackblock = ovh.VrackIp(\"vrackblock\",\n    service_name=vrack_vrack.service_name,\n    block=ipblock_ip_service.ip)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cart\",\n    });\n\n    var vrackOrderCartProductPlan = Ovh.GetOrderCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"vrack\",\n        PlanCode = \"vrack\",\n    });\n\n    var vrackVrack = new Ovh.Vrack(\"vrackVrack\", new()\n    {\n        Description = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Description),\n        OvhSubsidiary = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.OvhSubsidiary),\n        PaymentMean = \"fidelity\",\n        Plan = new Ovh.Inputs.VrackPlanArgs\n        {\n            Duration = vrackOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = vrackOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.PlanCode),\n            PricingMode = vrackOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n    });\n\n    var ipblockOrderCartProductPlan = Ovh.GetOrderCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"ip\",\n        PlanCode = \"ip-v4-s30-ripe\",\n    });\n\n    var ipblockIpService = new Ovh.IpService(\"ipblockIpService\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.OvhSubsidiary),\n        PaymentMean = \"ovh-account\",\n        Description = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Description),\n        Plan = new Ovh.Inputs.IpServicePlanArgs\n        {\n            Duration = ipblockOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = ipblockOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.PlanCode),\n            PricingMode = ipblockOrderCartProductPlan.Apply(getOrderCartProductPlanResult =\u003e getOrderCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Inputs.IpServicePlanConfigurationArgs\n                {\n                    Label = \"country\",\n                    Value = \"FR\",\n                },\n            },\n        },\n    });\n\n    var vrackblock = new Ovh.VrackIp(\"vrackblock\", new()\n    {\n        ServiceName = vrackVrack.ServiceName,\n        Block = ipblockIpService.Ip,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvrackOrderCartProductPlan, err := ovh.GetOrderCartProductPlan(ctx, \u0026GetOrderCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"vrack\",\n\t\t\tPlanCode:      \"vrack\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvrackVrack, err := ovh.NewVrack(ctx, \"vrackVrack\", \u0026ovh.VrackArgs{\n\t\t\tDescription:   pulumi.String(mycart.Description),\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"fidelity\"),\n\t\t\tPlan: \u0026VrackPlanArgs{\n\t\t\t\tDuration:    pulumi.String(vrackOrderCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(vrackOrderCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(vrackOrderCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipblockOrderCartProductPlan, err := ovh.GetOrderCartProductPlan(ctx, \u0026GetOrderCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"ip\",\n\t\t\tPlanCode:      \"ip-v4-s30-ripe\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipblockIpService, err := ovh.NewIpService(ctx, \"ipblockIpService\", \u0026ovh.IpServiceArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPaymentMean:   pulumi.String(\"ovh-account\"),\n\t\t\tDescription:   pulumi.String(mycart.Description),\n\t\t\tPlan: \u0026IpServicePlanArgs{\n\t\t\t\tDuration:    pulumi.String(ipblockOrderCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(ipblockOrderCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(ipblockOrderCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: IpServicePlanConfigurationArray{\n\t\t\t\t\t\u0026IpServicePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"country\"),\n\t\t\t\t\t\tValue: pulumi.String(\"FR\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.NewVrackIp(ctx, \"vrackblock\", \u0026ovh.VrackIpArgs{\n\t\t\tServiceName: vrackVrack.ServiceName,\n\t\t\tBlock:       ipblockIpService.Ip,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductPlanArgs;\nimport com.pulumi.ovh.Vrack;\nimport com.pulumi.ovh.VrackArgs;\nimport com.pulumi.ovh.inputs.VrackPlanArgs;\nimport com.pulumi.ovh.IpService;\nimport com.pulumi.ovh.IpServiceArgs;\nimport com.pulumi.ovh.inputs.IpServicePlanArgs;\nimport com.pulumi.ovh.VrackIp;\nimport com.pulumi.ovh.VrackIpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cart\")\n            .build());\n\n        final var vrackOrderCartProductPlan = OvhFunctions.getOrderCartProductPlan(GetOrderCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"vrack\")\n            .planCode(\"vrack\")\n            .build());\n\n        var vrackVrack = new Vrack(\"vrackVrack\", VrackArgs.builder()        \n            .description(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.description()))\n            .ovhSubsidiary(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.ovhSubsidiary()))\n            .paymentMean(\"fidelity\")\n            .plan(VrackPlanArgs.builder()\n                .duration(vrackOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(vrackOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.planCode()))\n                .pricingMode(vrackOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n        final var ipblockOrderCartProductPlan = OvhFunctions.getOrderCartProductPlan(GetOrderCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"ip\")\n            .planCode(\"ip-v4-s30-ripe\")\n            .build());\n\n        var ipblockIpService = new IpService(\"ipblockIpService\", IpServiceArgs.builder()        \n            .ovhSubsidiary(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.ovhSubsidiary()))\n            .paymentMean(\"ovh-account\")\n            .description(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.description()))\n            .plan(IpServicePlanArgs.builder()\n                .duration(ipblockOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(ipblockOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.planCode()))\n                .pricingMode(ipblockOrderCartProductPlan.applyValue(getOrderCartProductPlanResult -\u003e getOrderCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(IpServicePlanConfigurationArgs.builder()\n                    .label(\"country\")\n                    .value(\"FR\")\n                    .build())\n                .build())\n            .build());\n\n        var vrackblock = new VrackIp(\"vrackblock\", VrackIpArgs.builder()        \n            .serviceName(vrackVrack.serviceName())\n            .block(ipblockIpService.ip())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackVrack:\n    type: ovh:Vrack\n    properties:\n      description: ${mycart.description}\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: fidelity\n      plan:\n        duration: ${vrackOrderCartProductPlan.selectedPrices[0].duration}\n        planCode: ${vrackOrderCartProductPlan.planCode}\n        pricingMode: ${vrackOrderCartProductPlan.selectedPrices[0].pricingMode}\n  ipblockIpService:\n    type: ovh:IpService\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      paymentMean: ovh-account\n      description: ${mycart.description}\n      plan:\n        duration: ${ipblockOrderCartProductPlan.selectedPrices[0].duration}\n        planCode: ${ipblockOrderCartProductPlan.planCode}\n        pricingMode: ${ipblockOrderCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: country\n            value: FR\n  vrackblock:\n    type: ovh:VrackIp\n    properties:\n      serviceName: ${vrackVrack.serviceName}\n      block: ${ipblockIpService.ip}\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cart\n  vrackOrderCartProductPlan:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: vrack\n        planCode: vrack\n  ipblockOrderCartProductPlan:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: ip\n        planCode: ip-v4-s30-ripe\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "block": {
                    "type": "string",
                    "description": "Your IP block.\n"
                },
                "gateway": {
                    "type": "string",
                    "description": "Your gateway\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Your IP block\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Where you want your block announced on the network\n"
                }
            },
            "required": [
                "block",
                "gateway",
                "ip",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "block": {
                    "type": "string",
                    "description": "Your IP block.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "block",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrackIp resources.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "Your IP block.\n",
                        "willReplaceOnChanges": true
                    },
                    "gateway": {
                        "type": "string",
                        "description": "Your gateway\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Your IP block\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n",
                        "willReplaceOnChanges": true
                    },
                    "zone": {
                        "type": "string",
                        "description": "Where you want your block announced on the network\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:index/vrackIpLoadbalancing:VrackIpLoadbalancing": {
            "description": "Attach a ip loadbalancing to a VRack.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst viplb = new ovh.VrackIpLoadbalancing(\"viplb\", {\n    ipLoadbalancing: \"yyy\",\n    serviceName: \"xxx\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_ovh as ovh\n\nviplb = ovh.VrackIpLoadbalancing(\"viplb\",\n    ip_loadbalancing=\"yyy\",\n    service_name=\"xxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumiverse.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var viplb = new Ovh.VrackIpLoadbalancing(\"viplb\", new()\n    {\n        IpLoadbalancing = \"yyy\",\n        ServiceName = \"xxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.NewVrackIpLoadbalancing(ctx, \"viplb\", \u0026ovh.VrackIpLoadbalancingArgs{\n\t\t\tIpLoadbalancing: pulumi.String(\"yyy\"),\n\t\t\tServiceName:     pulumi.String(\"xxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.VrackIpLoadbalancing;\nimport com.pulumi.ovh.VrackIpLoadbalancingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var viplb = new VrackIpLoadbalancing(\"viplb\", VrackIpLoadbalancingArgs.builder()        \n            .ipLoadbalancing(\"yyy\")\n            .serviceName(\"xxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  viplb:\n    type: ovh:VrackIpLoadbalancing\n    properties:\n      ipLoadbalancing: yyy\n      serviceName: xxx\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "ipLoadbalancing": {
                    "type": "string",
                    "description": "The id of the ip loadbalancing.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack.\n"
                }
            },
            "required": [
                "ipLoadbalancing",
                "serviceName"
            ],
            "inputProperties": {
                "ipLoadbalancing": {
                    "type": "string",
                    "description": "The id of the ip loadbalancing.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ipLoadbalancing",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrackIpLoadbalancing resources.\n",
                "properties": {
                    "ipLoadbalancing": {
                        "type": "string",
                        "description": "The id of the ip loadbalancing.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the vrack.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "ovh:index/getCloudProjectCapabilitiesContainerFilter:getCloudProjectCapabilitiesContainerFilter": {
            "description": "Use this data source to filter the list of container registry capabilities associated with a public cloud project to match one and only one capability.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst capability = pulumi.output(ovh.getCloudProjectCapabilitiesContainerFilter({\n    planName: \"SMALL\",\n    region: \"GRA\",\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncapability = ovh.get_cloud_project_capabilities_container_filter(plan_name=\"SMALL\",\n    region=\"GRA\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var capability = Ovh.GetCloudProjectCapabilitiesContainerFilter.Invoke(new()\n    {\n        PlanName = \"SMALL\",\n        Region = \"GRA\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetCloudProjectCapabilitiesContainerFilter(ctx, \u0026GetCloudProjectCapabilitiesContainerFilterArgs{\n\t\t\tPlanName:    \"SMALL\",\n\t\t\tRegion:      \"GRA\",\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectCapabilitiesContainerFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var capability = OvhFunctions.getCloudProjectCapabilitiesContainerFilter(GetCloudProjectCapabilitiesContainerFilterArgs.builder()\n            .planName(\"SMALL\")\n            .region(\"GRA\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  capability:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectCapabilitiesContainerFilter\n      Arguments:\n        planName: SMALL\n        region: GRA\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectCapabilitiesContainerFilter.\n",
                "properties": {
                    "planName": {
                        "type": "string",
                        "description": "The plan name\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "planName",
                    "region",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectCapabilitiesContainerFilter.\n",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Plan code from the catalog\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Plan creation date\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getCloudProjectCapabilitiesContainerFilterFeature:getCloudProjectCapabilitiesContainerFilterFeature"
                        },
                        "description": "Features of the plan\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Plan name\n"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "registryLimits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getCloudProjectCapabilitiesContainerFilterRegistryLimit:getCloudProjectCapabilitiesContainerFilterRegistryLimit"
                        },
                        "description": "Container registry limits\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Plan last update date\n"
                    }
                },
                "type": "object",
                "required": [
                    "code",
                    "createdAt",
                    "features",
                    "name",
                    "planName",
                    "region",
                    "registryLimits",
                    "serviceName",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectCapabilitiesContainerRegistry:getCloudProjectCapabilitiesContainerRegistry": {
            "description": "Use this data source to get the container registry capabilities of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst capabilities = pulumi.output(ovh.getCloudProjectCapabilitiesContainerRegistry({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncapabilities = ovh.get_cloud_project_capabilities_container_registry(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var capabilities = Ovh.GetCloudProjectCapabilitiesContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupCloudProjectCapabilitiesContainerRegistry(ctx, \u0026GetCloudProjectCapabilitiesContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectCapabilitiesContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var capabilities = OvhFunctions.getCloudProjectCapabilitiesContainerRegistry(GetCloudProjectCapabilitiesContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  capabilities:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectCapabilitiesContainerRegistry\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectCapabilitiesContainerRegistry.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectCapabilitiesContainerRegistry.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getCloudProjectCapabilitiesContainerRegistryResult:getCloudProjectCapabilitiesContainerRegistryResult"
                        },
                        "description": "List of container registry capability for a single region\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectContainerRegistries:getCloudProjectContainerRegistries": {
            "description": "Use this data source to get the container registries of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registries = pulumi.output(ovh.getCloudProjectContainerRegistries({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregistries = ovh.get_cloud_project_container_registries(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registries = Ovh.GetCloudProjectContainerRegistries.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupCloudProjectContainerRegistries(ctx, \u0026GetCloudProjectContainerRegistriesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectContainerRegistriesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registries = OvhFunctions.getCloudProjectContainerRegistries(GetCloudProjectContainerRegistriesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  registries:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectContainerRegistries\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectContainerRegistries.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectContainerRegistries.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getCloudProjectContainerRegistriesResult:getCloudProjectContainerRegistriesResult"
                        },
                        "description": "The list of container registries associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectContainerRegistry:getCloudProjectContainerRegistry": {
            "description": "Use this data source to get information about a container registry associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registry = pulumi.output(ovh.getCloudProjectContainerRegistry({\n    registryId: \"yyyy\",\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregistry = ovh.get_cloud_project_container_registry(registry_id=\"yyyy\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registry = Ovh.GetCloudProjectContainerRegistry.Invoke(new()\n    {\n        RegistryId = \"yyyy\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupCloudProjectContainerRegistry(ctx, \u0026GetCloudProjectContainerRegistryArgs{\n\t\t\tRegistryId:  \"yyyy\",\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registry = OvhFunctions.getCloudProjectContainerRegistry(GetCloudProjectContainerRegistryArgs.builder()\n            .registryId(\"yyyy\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  registry:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectContainerRegistry\n      Arguments:\n        registryId: yyyy\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectContainerRegistry.\n",
                "properties": {
                    "registryId": {
                        "type": "string",
                        "description": "Registry ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectContainerRegistry.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Registry creation date\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Registry name\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID of your registry\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the registry\n"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Current size of the registry (bytes)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Registry status\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Registry last update date\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Access url of the registry\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of your registry\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "name",
                    "projectId",
                    "region",
                    "registryId",
                    "serviceName",
                    "size",
                    "status",
                    "updatedAt",
                    "url",
                    "version",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectContainerRegistryUsers:getCloudProjectContainerRegistryUsers": {
            "description": "Use this data source to get the list of users of a container registry associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registry = ovh.getCloudProjectContainerRegistry({\n    serviceName: \"XXXXXX\",\n    registryId: \"yyyy\",\n});\nconst users = ovh.getCloudProjectContainerRegistryUsers({\n    serviceName: ovh_cloud_project_containerregistry.registry.service_name,\n    registryId: ovh_cloud_project_containerregistry.registry.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregistry = ovh.get_cloud_project_container_registry(service_name=\"XXXXXX\",\n    registry_id=\"yyyy\")\nusers = ovh.get_cloud_project_container_registry_users(service_name=ovh_cloud_project_containerregistry[\"registry\"][\"service_name\"],\n    registry_id=ovh_cloud_project_containerregistry[\"registry\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registry = Ovh.GetCloudProjectContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegistryId = \"yyyy\",\n    });\n\n    var users = Ovh.GetCloudProjectContainerRegistryUsers.Invoke(new()\n    {\n        ServiceName = ovh_cloud_project_containerregistry.Registry.Service_name,\n        RegistryId = ovh_cloud_project_containerregistry.Registry.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupCloudProjectContainerRegistry(ctx, \u0026GetCloudProjectContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegistryId:  \"yyyy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.LookupCloudProjectContainerRegistryUsers(ctx, \u0026GetCloudProjectContainerRegistryUsersArgs{\n\t\t\tServiceName: ovh_cloud_project_containerregistry.Registry.Service_name,\n\t\t\tRegistryId:  ovh_cloud_project_containerregistry.Registry.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectContainerRegistryArgs;\nimport com.pulumi.ovh.inputs.GetCloudProjectContainerRegistryUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registry = OvhFunctions.getCloudProjectContainerRegistry(GetCloudProjectContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .registryId(\"yyyy\")\n            .build());\n\n        final var users = OvhFunctions.getCloudProjectContainerRegistryUsers(GetCloudProjectContainerRegistryUsersArgs.builder()\n            .serviceName(ovh_cloud_project_containerregistry.registry().service_name())\n            .registryId(ovh_cloud_project_containerregistry.registry().id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  registry:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectContainerRegistry\n      Arguments:\n        serviceName: XXXXXX\n        registryId: yyyy\n  users:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectContainerRegistryUsers\n      Arguments:\n        serviceName: ${ovh_cloud_project_containerregistry.registry.service_name}\n        registryId: ${ovh_cloud_project_containerregistry.registry.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectContainerRegistryUsers.\n",
                "properties": {
                    "registryId": {
                        "type": "string",
                        "description": "Registry ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectContainerRegistryUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getCloudProjectContainerRegistryUsersResult:getCloudProjectContainerRegistryUsersResult"
                        },
                        "description": "The list of users of the container registry associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectDatabase:getCloudProjectDatabase": {
            "description": "Use this data source to get the managed database of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo get information of a database cluster service:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst db = ovh.getCloudProjectDatabase({\n    serviceName: \"XXXXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZZ\",\n});\nexport const clusterId = db.then(db =\u003e db.clusterId);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndb = ovh.get_cloud_project_database(service_name=\"XXXXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZZ\")\npulumi.export(\"clusterId\", db.cluster_id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var db = Ovh.GetCloudProjectDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"clusterId\"] = db.Apply(getCloudProjectDatabaseResult =\u003e getCloudProjectDatabaseResult.ClusterId),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdb, err := ovh.LookupCloudProjectDatabase(ctx, \u0026GetCloudProjectDatabaseArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"clusterId\", db.ClusterId)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var db = OvhFunctions.getCloudProjectDatabase(GetCloudProjectDatabaseArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZZ\")\n            .build());\n\n        ctx.export(\"clusterId\", db.applyValue(getCloudProjectDatabaseResult -\u003e getCloudProjectDatabaseResult.clusterId()));\n    }\n}\n```\n```yaml\nvariables:\n  db:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectDatabase\n      Arguments:\n        serviceName: XXXXXX\n        engine: YYYY\n        clusterId: ZZZZ\noutputs:\n  clusterId: ${db.clusterId}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectDatabase.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The database engine you want to get information. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectDatabase.\n",
                "properties": {
                    "backupTime": {
                        "type": "string",
                        "description": "Time on which backups start every day.\n"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the cluster.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getCloudProjectDatabaseEndpoint:getCloudProjectDatabaseEndpoint"
                        },
                        "description": "List of all endpoints objects of the service.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "maintenanceTime": {
                        "type": "string",
                        "description": "Time on which maintenances can start every day.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Type of network of the cluster.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getCloudProjectDatabaseNode:getCloudProjectDatabaseNode"
                        },
                        "description": "See Argument Reference above.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "backupTime",
                    "clusterId",
                    "createdAt",
                    "description",
                    "endpoints",
                    "engine",
                    "flavor",
                    "maintenanceTime",
                    "networkType",
                    "nodes",
                    "plan",
                    "serviceName",
                    "status",
                    "version",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectDatabaseIpRestrictions:getCloudProjectDatabaseIpRestrictions": {
            "description": "Use the list of IP restrictions associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo get the list of IP restriction on a database cluster service:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst iprestrictions = ovh.getCloudProjectDatabaseIpRestrictions({\n    serviceName: \"XXXXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZZ\",\n});\nexport const ips = iprestrictions.then(iprestrictions =\u003e iprestrictions.ips);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\niprestrictions = ovh.get_cloud_project_database_ip_restrictions(service_name=\"XXXXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZZ\")\npulumi.export(\"ips\", iprestrictions.ips)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var iprestrictions = Ovh.GetCloudProjectDatabaseIpRestrictions.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"ips\"] = iprestrictions.Apply(getCloudProjectDatabaseIpRestrictionsResult =\u003e getCloudProjectDatabaseIpRestrictionsResult.Ips),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tiprestrictions, err := ovh.GetCloudProjectDatabaseIpRestrictions(ctx, \u0026GetCloudProjectDatabaseIpRestrictionsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ips\", iprestrictions.Ips)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectDatabaseIpRestrictionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var iprestrictions = OvhFunctions.getCloudProjectDatabaseIpRestrictions(GetCloudProjectDatabaseIpRestrictionsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZZ\")\n            .build());\n\n        ctx.export(\"ips\", iprestrictions.applyValue(getCloudProjectDatabaseIpRestrictionsResult -\u003e getCloudProjectDatabaseIpRestrictionsResult.ips()));\n    }\n}\n```\n```yaml\nvariables:\n  iprestrictions:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectDatabaseIpRestrictions\n      Arguments:\n        serviceName: XXXXXX\n        engine: YYYY\n        clusterId: ZZZZ\noutputs:\n  ips: ${iprestrictions.ips}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectDatabaseIpRestrictions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to list IP restrictions. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectDatabaseIpRestrictions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IP restriction of the database associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "ips",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectDatabasePostgresSqlUser:getCloudProjectDatabasePostgresSqlUser": {
            "description": "Use this data source to get information about a user of a postgresql cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst pguser = ovh.getCloudProjectDatabasePostgresSqlUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const pguserRoles = pguser.then(pguser =\u003e pguser.roles);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npguser = ovh.get_cloud_project_database_postgres_sql_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"pguserRoles\", pguser.roles)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pguser = Ovh.GetCloudProjectDatabasePostgresSqlUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"pguserRoles\"] = pguser.Apply(getCloudProjectDatabasePostgresSqlUserResult =\u003e getCloudProjectDatabasePostgresSqlUserResult.Roles),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpguser, err := ovh.LookupCloudProjectDatabasePostgresSqlUser(ctx, \u0026GetCloudProjectDatabasePostgresSqlUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"pguserRoles\", pguser.Roles)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectDatabasePostgresSqlUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var pguser = OvhFunctions.getCloudProjectDatabasePostgresSqlUser(GetCloudProjectDatabasePostgresSqlUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"pguserRoles\", pguser.applyValue(getCloudProjectDatabasePostgresSqlUserResult -\u003e getCloudProjectDatabasePostgresSqlUserResult.roles()));\n    }\n}\n```\n```yaml\nvariables:\n  pguser:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectDatabasePostgresSqlUser\n      Arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  pguserRoles: ${pguser.roles}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectDatabasePostgresSqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectDatabasePostgresSqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "name",
                    "roles",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectDatabaseUser:getCloudProjectDatabaseUser": {
            "description": "Use this data source to get information about a user of a database cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst user = ovh.getCloudProjectDatabaseUser({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n    name: \"UUU\",\n});\nexport const userName = user.then(user =\u003e user.name);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser = ovh.get_cloud_project_database_user(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\",\n    name=\"UUU\")\npulumi.export(\"userName\", user.name)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Ovh.GetCloudProjectDatabaseUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n        Name = \"UUU\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"userName\"] = user.Apply(getCloudProjectDatabaseUserResult =\u003e getCloudProjectDatabaseUserResult.Name),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser, err := ovh.LookupCloudProjectDatabaseUser(ctx, \u0026GetCloudProjectDatabaseUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t\tName:        \"UUU\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"userName\", user.Name)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectDatabaseUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = OvhFunctions.getCloudProjectDatabaseUser(GetCloudProjectDatabaseUserArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .name(\"UUU\")\n            .build());\n\n        ctx.export(\"userName\", user.applyValue(getCloudProjectDatabaseUserResult -\u003e getCloudProjectDatabaseUserResult.name()));\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectDatabaseUser\n      Arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\n        name: UUU\noutputs:\n  userName: ${user.name}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectDatabaseUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want user information. To get a full list of available engine visit :\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\\\nAvailable engines for this resource (other have specific resource):\n* `cassandra`\n* `kafka`\n* `kafkaConnect`\n* `mysql`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectDatabaseUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "engine",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectDatabaseUsers:getCloudProjectDatabaseUsers": {
            "description": "Use this data source to get the list of users of a database cluster associated with a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst users = ovh.getCloudProjectDatabaseUsers({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZ\",\n});\nexport const userIds = users.then(users =\u003e users.userIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nusers = ovh.get_cloud_project_database_users(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"userIds\", users.user_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var users = Ovh.GetCloudProjectDatabaseUsers.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"userIds\"] = users.Apply(getCloudProjectDatabaseUsersResult =\u003e getCloudProjectDatabaseUsersResult.UserIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tusers, err := ovh.GetCloudProjectDatabaseUsers(ctx, \u0026GetCloudProjectDatabaseUsersArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"userIds\", users.UserIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectDatabaseUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var users = OvhFunctions.getCloudProjectDatabaseUsers(GetCloudProjectDatabaseUsersArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"userIds\", users.applyValue(getCloudProjectDatabaseUsersResult -\u003e getCloudProjectDatabaseUsersResult.userIds()));\n    }\n}\n```\n```yaml\nvariables:\n  users:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectDatabaseUsers\n      Arguments:\n        serviceName: XXXX\n        engine: YYYY\n        clusterId: ZZZ\noutputs:\n  userIds: ${users.userIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectDatabaseUsers.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to list users. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectDatabaseUsers.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of users ids of the database cluster associated with the project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName",
                    "userIds",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectDatabases:getCloudProjectDatabases": {
            "description": "Use this data source to get the list of managed databases of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nTo get the list of database clusters service for a given engine:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst dbs = ovh.getCloudProjectDatabases({\n    serviceName: \"XXXXXX\",\n    engine: \"YYYY\",\n});\nexport const clusterIds = dbs.then(dbs =\u003e dbs.clusterIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndbs = ovh.get_cloud_project_databases(service_name=\"XXXXXX\",\n    engine=\"YYYY\")\npulumi.export(\"clusterIds\", dbs.cluster_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var dbs = Ovh.GetCloudProjectDatabases.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Engine = \"YYYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"clusterIds\"] = dbs.Apply(getCloudProjectDatabasesResult =\u003e getCloudProjectDatabasesResult.ClusterIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdbs, err := ovh.GetCloudProjectDatabases(ctx, \u0026GetCloudProjectDatabasesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"clusterIds\", dbs.ClusterIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectDatabasesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var dbs = OvhFunctions.getCloudProjectDatabases(GetCloudProjectDatabasesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .engine(\"YYYY\")\n            .build());\n\n        ctx.export(\"clusterIds\", dbs.applyValue(getCloudProjectDatabasesResult -\u003e getCloudProjectDatabasesResult.clusterIds()));\n    }\n}\n```\n```yaml\nvariables:\n  dbs:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectDatabases\n      Arguments:\n        serviceName: XXXXXX\n        engine: YYYY\noutputs:\n  clusterIds: ${dbs.clusterIds}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectDatabases.\n",
                "properties": {
                    "engine": {
                        "type": "string",
                        "description": "The database engine you want to list. To get a full list of available engine visit.\n[public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectDatabases.\n",
                "properties": {
                    "clusterIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of managed databases ids of the project.\n"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterIds",
                    "engine",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectFailoverIpAttach:getCloudProjectFailoverIpAttach": {
            "description": "Use this data source to get the details of a failover ip address of a service in a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myfailoverip = pulumi.output(ovh.getCloudProjectFailoverIpAttach({\n    ip: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmyfailoverip = ovh.get_cloud_project_failover_ip_attach(ip=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myfailoverip = Ovh.GetCloudProjectFailoverIpAttach.Invoke(new()\n    {\n        Ip = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupCloudProjectFailoverIpAttach(ctx, \u0026GetCloudProjectFailoverIpAttachArgs{\n\t\t\tIp:          pulumi.StringRef(\"XXXXXX\"),\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectFailoverIpAttachArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myfailoverip = OvhFunctions.getCloudProjectFailoverIpAttach(GetCloudProjectFailoverIpAttachArgs.builder()\n            .ip(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myfailoverip:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectFailoverIpAttach\n      Arguments:\n        ip: XXXXXX\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectFailoverIpAttach.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "The IP block\n"
                    },
                    "continentCode": {
                        "type": "string"
                    },
                    "geoLoc": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The failover ip address to query\n"
                    },
                    "routedTo": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectFailoverIpAttach.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "The IP block\n"
                    },
                    "continentCode": {
                        "type": "string"
                    },
                    "geoLoc": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The Ip id\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The Ip Address\n"
                    },
                    "progress": {
                        "type": "integer",
                        "description": "Current operation progress in percent\n"
                    },
                    "routedTo": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "Ip status, can be `ok` or `operationPending`\n"
                    },
                    "subType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "block",
                    "continentCode",
                    "geoLoc",
                    "id",
                    "ip",
                    "progress",
                    "routedTo",
                    "serviceName",
                    "status",
                    "subType"
                ]
            }
        },
        "ovh:index/getCloudProjectKube:getCloudProjectKube": {
            "description": "Use this data source to get a OVH Managed Kubernetes Service cluster.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myKubeCluster = ovh.getCloudProjectKube({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n});\nexport const version = myKubeCluster.then(myKubeCluster =\u003e myKubeCluster.version);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_kube_cluster = ovh.get_cloud_project_kube(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\npulumi.export(\"version\", my_kube_cluster.version)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myKubeCluster = Ovh.GetCloudProjectKube.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"version\"] = myKubeCluster.Apply(getCloudProjectKubeResult =\u003e getCloudProjectKubeResult.Version),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyKubeCluster, err := ovh.LookupCloudProjectKube(ctx, \u0026GetCloudProjectKubeArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"version\", myKubeCluster.Version)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectKubeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myKubeCluster = OvhFunctions.getCloudProjectKube(GetCloudProjectKubeArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        ctx.export(\"version\", myKubeCluster.applyValue(getCloudProjectKubeResult -\u003e getCloudProjectKubeResult.version()));\n    }\n}\n```\n```yaml\nvariables:\n  myKubeCluster:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectKube\n      Arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\noutputs:\n  version: ${myKubeCluster.version}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectKube.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the managed kubernetes cluster.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The OVH public cloud region ID of the managed kubernetes cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Kubernetes version of the managed kubernetes cluster.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectKube.\n",
                "properties": {
                    "controlPlaneIsUpToDate": {
                        "type": "boolean",
                        "description": "True if control-plane is up to date.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isUpToDate": {
                        "type": "boolean",
                        "description": "True if all nodes and control-plane are up to date.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the managed kubernetes cluster.\n"
                    },
                    "nextUpgradeVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Kubernetes versions available for upgrade.\n"
                    },
                    "nodesUrl": {
                        "type": "string",
                        "description": "Cluster nodes URL.\n"
                    },
                    "privateNetworkId": {
                        "type": "string",
                        "description": "OpenStack private network (or vrack) ID to use.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The OVH public cloud region ID of the managed kubernetes cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Cluster status. Should be normally set to 'READY'.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Management URL of your cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Kubernetes version of the managed kubernetes cluster.\n"
                    }
                },
                "type": "object",
                "required": [
                    "controlPlaneIsUpToDate",
                    "isUpToDate",
                    "kubeId",
                    "nextUpgradeVersions",
                    "nodesUrl",
                    "privateNetworkId",
                    "serviceName",
                    "status",
                    "url",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectKubeIpNodePool:getCloudProjectKubeIpNodePool": {
            "description": "Use this data source to get a OVH Managed Kubernetes node pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst nodepool = ovh.getCloudProjectKubeIpNodePool({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    name: \"xxxxxx\",\n});\nexport const maxNodes = nodepool.then(nodepool =\u003e nodepool.maxNodes);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnodepool = ovh.get_cloud_project_kube_ip_node_pool(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    name=\"xxxxxx\")\npulumi.export(\"maxNodes\", nodepool.max_nodes)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nodepool = Ovh.GetCloudProjectKubeIpNodePool.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n        Name = \"xxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"maxNodes\"] = nodepool.Apply(getCloudProjectKubeIpNodePoolResult =\u003e getCloudProjectKubeIpNodePoolResult.MaxNodes),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnodepool, err := ovh.GetCloudProjectKubeIpNodePool(ctx, \u0026GetCloudProjectKubeIpNodePoolArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n\t\t\tName:        \"xxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"maxNodes\", nodepool.MaxNodes)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectKubeIpNodePoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var nodepool = OvhFunctions.getCloudProjectKubeIpNodePool(GetCloudProjectKubeIpNodePoolArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\")\n            .name(\"xxxxxx\")\n            .build());\n\n        ctx.export(\"maxNodes\", nodepool.applyValue(getCloudProjectKubeIpNodePoolResult -\u003e getCloudProjectKubeIpNodePoolResult.maxNodes()));\n    }\n}\n```\n```yaml\nvariables:\n  nodepool:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectKubeIpNodePool\n      Arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\n        name: xxxxxx\noutputs:\n  maxNodes: ${nodepool.maxNodes}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectKubeIpNodePool.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n"
                    },
                    "maxNodes": {
                        "type": "integer",
                        "description": "maximum number of nodes allowed in the pool.\nSetting `desired_nodes` over this value will raise an error.\n"
                    },
                    "minNodes": {
                        "type": "integer",
                        "description": "minimum number of nodes allowed in the pool.\nSetting `desired_nodes` under this value will raise an error.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the node pool.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectKubeIpNodePool.\n",
                "properties": {
                    "antiAffinity": {
                        "type": "boolean",
                        "description": "(Optional) should the pool use the anti-affinity feature. Default to `false`.\n"
                    },
                    "autoscale": {
                        "type": "boolean",
                        "description": "(Optional) Enable auto-scaling for the pool. Default to `false`.\n"
                    },
                    "availableNodes": {
                        "type": "integer",
                        "description": "Number of nodes which are actually ready in the pool\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date\n"
                    },
                    "currentNodes": {
                        "type": "integer",
                        "description": "Number of nodes present in the pool\n"
                    },
                    "desiredNodes": {
                        "type": "integer",
                        "description": "Number of nodes you desire in the pool\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "Flavor name\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "a valid OVH public cloud flavor ID in which the nodes will be started.\nEx: \"b2-7\". Changing this value recreates the resource.\nYou can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "maxNodes": {
                        "type": "integer",
                        "description": "maximum number of nodes allowed in the pool.\nSetting `desired_nodes` over this value will raise an error.\n"
                    },
                    "minNodes": {
                        "type": "integer",
                        "description": "minimum number of nodes allowed in the pool.\nSetting `desired_nodes` under this value will raise an error.\n"
                    },
                    "monthlyBilled": {
                        "type": "boolean",
                        "description": "(Optional) should the nodes be billed on a monthly basis. Default to `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(Optional) The name of the nodepool.\nChanging this value recreates the resource.\nWarning: \"_\" char is not allowed!\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project id\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "sizeStatus": {
                        "type": "string",
                        "description": "Status describing the state between number of nodes wanted and available ones\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status\n"
                    },
                    "upToDateNodes": {
                        "type": "integer",
                        "description": "Number of nodes with the latest version installed in the pool\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date\n"
                    }
                },
                "type": "object",
                "required": [
                    "antiAffinity",
                    "autoscale",
                    "availableNodes",
                    "createdAt",
                    "currentNodes",
                    "desiredNodes",
                    "flavor",
                    "flavorName",
                    "kubeId",
                    "maxNodes",
                    "minNodes",
                    "monthlyBilled",
                    "name",
                    "projectId",
                    "serviceName",
                    "sizeStatus",
                    "status",
                    "upToDateNodes",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectKubeIpRestrictions:getCloudProjectKubeIpRestrictions": {
            "description": "Use this data source to get a OVH Managed Kubernetes Service cluster IP restrictions.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst iprestrictions = ovh.getCloudProjectKubeIpRestrictions({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n});\nexport const ips = iprestrictions.then(iprestrictions =\u003e iprestrictions.ips);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\niprestrictions = ovh.get_cloud_project_kube_ip_restrictions(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\npulumi.export(\"ips\", iprestrictions.ips)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var iprestrictions = Ovh.GetCloudProjectKubeIpRestrictions.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"ips\"] = iprestrictions.Apply(getCloudProjectKubeIpRestrictionsResult =\u003e getCloudProjectKubeIpRestrictionsResult.Ips),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tiprestrictions, err := ovh.LookupCloudProjectKubeIpRestrictions(ctx, \u0026GetCloudProjectKubeIpRestrictionsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ips\", iprestrictions.Ips)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectKubeIpRestrictionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var iprestrictions = OvhFunctions.getCloudProjectKubeIpRestrictions(GetCloudProjectKubeIpRestrictionsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        ctx.export(\"ips\", iprestrictions.applyValue(getCloudProjectKubeIpRestrictionsResult -\u003e getCloudProjectKubeIpRestrictionsResult.ips()));\n    }\n}\n```\n```yaml\nvariables:\n  iprestrictions:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectKubeIpRestrictions\n      Arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\noutputs:\n  ips: ${iprestrictions.ips}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectKubeIpRestrictions.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectKubeIpRestrictions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of CIDRs that restricts the access to the API server.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ips",
                    "kubeId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectRegion:getCloudProjectRegion": {
            "description": "Use this data source to retrieve information about a region associated with a public cloud project. The region must be associated with the project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst gRA1 = pulumi.output(ovh.getCloudProjectRegion({\n    name: \"GRA1\",\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ng_ra1 = ovh.get_cloud_project_region(name=\"GRA1\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var gRA1 = Ovh.GetCloudProjectRegion.Invoke(new()\n    {\n        Name = \"GRA1\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetCloudProjectRegion(ctx, \u0026GetCloudProjectRegionArgs{\n\t\t\tName:        \"GRA1\",\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectRegionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var gRA1 = OvhFunctions.getCloudProjectRegion(GetCloudProjectRegionArgs.builder()\n            .name(\"GRA1\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  gRA1:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectRegion\n      Arguments:\n        name: GRA1\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectRegion.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the region associated with the public cloud\nproject.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectRegion.\n",
                "properties": {
                    "continentCode": {
                        "type": "string",
                        "description": "the code of the geographic continent the region is running.\nE.g.: EU for Europe, US for America...\n"
                    },
                    "datacenterLocation": {
                        "type": "string",
                        "description": "The location code of the datacenter.\nE.g.: \"GRA\", meaning Gravelines, for region \"GRA1\"\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the public cloud service\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getCloudProjectRegionService:getCloudProjectRegionService"
                        },
                        "description": "The list of public cloud services running within the region\n"
                    }
                },
                "type": "object",
                "required": [
                    "continentCode",
                    "datacenterLocation",
                    "name",
                    "serviceName",
                    "services",
                    "id"
                ]
            }
        },
        "ovh:index/getCloudProjectRegions:getCloudProjectRegions": {
            "description": "Use this data source to get the regions of a public cloud project.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst regions = pulumi.output(ovh.getCloudProjectRegions({\n    hasServicesUps: [\"network\"],\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregions = ovh.get_cloud_project_regions(has_services_ups=[\"network\"],\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var regions = Ovh.GetCloudProjectRegions.Invoke(new()\n    {\n        HasServicesUps = new[]\n        {\n            \"network\",\n        },\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetCloudProjectRegions(ctx, \u0026GetCloudProjectRegionsArgs{\n\t\t\tHasServicesUps: []string{\n\t\t\t\t\"network\",\n\t\t\t},\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetCloudProjectRegionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var regions = OvhFunctions.getCloudProjectRegions(GetCloudProjectRegionsArgs.builder()\n            .hasServicesUps(\"network\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  regions:\n    Fn::Invoke:\n      Function: ovh:getCloudProjectRegions\n      Arguments:\n        hasServicesUps:\n          - network\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudProjectRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of services which has to be UP in regions.\nExample: \"image\", \"instance\", \"network\", \"storage\", \"volume\", \"workflow\", ...\nIf left blank, returns all regions associated with the service_name.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted,\nthe `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudProjectRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of regions associated with the project, filtered by services UP.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "names",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:index/getDbaasLogsInputEngine:getDbaasLogsInputEngine": {
            "description": "Use this data source to retrieve information about a DBaas logs input engine.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst logstash = pulumi.output(ovh.getDbaasLogsInputEngine({\n    isDeprecated: true,\n    name: \"logstash\",\n    version: \"6.8\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlogstash = ovh.get_dbaas_logs_input_engine(is_deprecated=True,\n    name=\"logstash\",\n    version=\"6.8\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var logstash = Ovh.GetDbaasLogsInputEngine.Invoke(new()\n    {\n        IsDeprecated = true,\n        Name = \"logstash\",\n        Version = \"6.8\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDbaasLogsInputEngine(ctx, \u0026GetDbaasLogsInputEngineArgs{\n\t\t\tIsDeprecated: pulumi.BoolRef(true),\n\t\t\tName:         pulumi.StringRef(\"logstash\"),\n\t\t\tVersion:      pulumi.StringRef(\"6.8\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetDbaasLogsInputEngineArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var logstash = OvhFunctions.getDbaasLogsInputEngine(GetDbaasLogsInputEngineArgs.builder()\n            .isDeprecated(true)\n            .name(\"logstash\")\n            .version(\"6.8\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  logstash:\n    Fn::Invoke:\n      Function: ovh:getDbaasLogsInputEngine\n      Arguments:\n        isDeprecated: true\n        name: logstash\n        version: 6.8\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDbaasLogsInputEngine.\n",
                "properties": {
                    "isDeprecated": {
                        "type": "boolean",
                        "description": "Indicates if engine will soon not be supported.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the logs input engine.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Software version\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getDbaasLogsInputEngine.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isDeprecated": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "isDeprecated",
                    "name",
                    "version",
                    "id"
                ]
            }
        },
        "ovh:index/getDbaasLogsOutputGraylogStream:getDbaasLogsOutputGraylogStream": {
            "description": "Use this data source to retrieve information about a DBaas logs output graylog stream.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst stream = pulumi.output(ovh.getDbaasLogsOutputGraylogStream({\n    serviceName: \"XXXXXX\",\n    title: \"my stream\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nstream = ovh.get_dbaas_logs_output_graylog_stream(service_name=\"XXXXXX\",\n    title=\"my stream\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var stream = Ovh.GetDbaasLogsOutputGraylogStream.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Title = \"my stream\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupDbaasLogsOutputGraylogStream(ctx, \u0026GetDbaasLogsOutputGraylogStreamArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tTitle:       \"my stream\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetDbaasLogsOutputGraylogStreamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var stream = OvhFunctions.getDbaasLogsOutputGraylogStream(GetDbaasLogsOutputGraylogStreamArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .title(\"my stream\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  stream:\n    Fn::Invoke:\n      Function: ovh:getDbaasLogsOutputGraylogStream\n      Arguments:\n        serviceName: XXXXXX\n        title: my stream\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDbaasLogsOutputGraylogStream.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Stream description\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "title"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDbaasLogsOutputGraylogStream.\n",
                "properties": {
                    "canAlert": {
                        "type": "boolean"
                    },
                    "coldStorageCompression": {
                        "type": "string",
                        "description": "Cold storage compression method\n"
                    },
                    "coldStorageContent": {
                        "type": "string",
                        "description": "ColdStorage content\n"
                    },
                    "coldStorageEnabled": {
                        "type": "boolean",
                        "description": "Is Cold storage enabled?\n"
                    },
                    "coldStorageNotifyEnabled": {
                        "type": "boolean",
                        "description": "Notify on new Cold storage archive\n"
                    },
                    "coldStorageRetention": {
                        "type": "integer",
                        "description": "Cold storage retention in year\n"
                    },
                    "coldStorageTarget": {
                        "type": "string",
                        "description": "ColdStorage destination\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Stream creation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "indexingEnabled": {
                        "type": "boolean",
                        "description": "Enable ES indexing\n"
                    },
                    "indexingMaxSize": {
                        "type": "integer",
                        "description": "Maximum indexing size (in GB)\n"
                    },
                    "indexingNotifyEnabled": {
                        "type": "boolean",
                        "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "isShareable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to share entry\n"
                    },
                    "nbAlertCondition": {
                        "type": "integer",
                        "description": "Number of alert condition\n"
                    },
                    "nbArchive": {
                        "type": "integer",
                        "description": "Number of coldstored archives\n"
                    },
                    "parentStreamId": {
                        "type": "string",
                        "description": "Parent stream ID\n"
                    },
                    "pauseIndexingOnMaxSize": {
                        "type": "boolean",
                        "description": "If set, pause indexing when maximum size is reach\n"
                    },
                    "retentionId": {
                        "type": "string",
                        "description": "Retention ID\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Stream ID\n"
                    },
                    "title": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Stream last update\n"
                    },
                    "webSocketEnabled": {
                        "type": "string",
                        "description": "Enable Websocket\n"
                    }
                },
                "type": "object",
                "required": [
                    "canAlert",
                    "coldStorageCompression",
                    "coldStorageContent",
                    "coldStorageEnabled",
                    "coldStorageNotifyEnabled",
                    "coldStorageRetention",
                    "coldStorageTarget",
                    "createdAt",
                    "description",
                    "indexingEnabled",
                    "indexingMaxSize",
                    "indexingNotifyEnabled",
                    "isEditable",
                    "isShareable",
                    "nbAlertCondition",
                    "nbArchive",
                    "parentStreamId",
                    "pauseIndexingOnMaxSize",
                    "retentionId",
                    "serviceName",
                    "streamId",
                    "title",
                    "updatedAt",
                    "webSocketEnabled",
                    "id"
                ]
            }
        },
        "ovh:index/getDedicatedCeph:getDedicatedCeph": {
            "description": "Use this data source to retrieve information about a dedicated CEPH. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst my_ceph = pulumi.output(ovh.getDedicatedCeph({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_ceph = ovh.get_dedicated_ceph(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var my_ceph = Ovh.GetDedicatedCeph.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDedicatedCeph(ctx, \u0026GetDedicatedCephArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetDedicatedCephArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var my-ceph = OvhFunctions.getDedicatedCeph(GetDedicatedCephArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  my-ceph:\n    Fn::Invoke:\n      Function: ovh:getDedicatedCeph\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDedicatedCeph.\n",
                "properties": {
                    "cephVersion": {
                        "type": "string",
                        "description": "CEPH cluster version\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name of the dedicated CEPH cluster.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the service\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDedicatedCeph.\n",
                "properties": {
                    "cephMons": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of CEPH monitors IPs\n"
                    },
                    "cephVersion": {
                        "type": "string",
                        "description": "CEPH cluster version\n"
                    },
                    "crushTunables": {
                        "type": "string",
                        "description": "CRUSH algorithm settings. Possible values\n* OPTIMAL\n* DEFAULT\n* LEGACY\n* BOBTAIL\n* ARGONAUT\n* FIREFLY\n* HAMMER\n* JEWEL\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "CEPH cluster label\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "cluster region\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number",
                        "description": "Cluster size in TB\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "the state of the cluster\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the service\n"
                    }
                },
                "type": "object",
                "required": [
                    "cephMons",
                    "cephVersion",
                    "crushTunables",
                    "label",
                    "region",
                    "serviceName",
                    "size",
                    "state",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:index/getDedicatedInstallationTemplates:getDedicatedInstallationTemplates": {
            "description": "Use this data source to get the list of installation templates available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst templates = pulumi.output(ovh.getDedicatedInstallationTemplates());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntemplates = ovh.get_dedicated_installation_templates()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var templates = Ovh.GetDedicatedInstallationTemplates.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDedicatedInstallationTemplates(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var templates = OvhFunctions.getDedicatedInstallationTemplates();\n\n    }\n}\n```\n```yaml\nvariables:\n  templates:\n    Fn::Invoke:\n      Function: ovh:getDedicatedInstallationTemplates\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getDedicatedInstallationTemplates.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of installation templates IDs available for dedicated servers.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getDedicatedServer:getDedicatedServer": {
            "description": "Use this data source to retrieve information about a dedicated server associated with your OVH Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst server = pulumi.output(ovh.getDedicatedServer({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nserver = ovh.get_dedicated_server(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var server = Ovh.GetDedicatedServer.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDedicatedServer(ctx, \u0026GetDedicatedServerArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetDedicatedServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var server = OvhFunctions.getDedicatedServer(GetDedicatedServerArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  server:\n    Fn::Invoke:\n      Function: ovh:getDedicatedServer\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDedicatedServer.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDedicatedServer.\n",
                "properties": {
                    "bootId": {
                        "type": "integer",
                        "description": "boot id of the server\n"
                    },
                    "commercialRange": {
                        "type": "string",
                        "description": "dedicater server commercial range\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "dedicated datacenter localisation (bhs1,bhs2,...)\n"
                    },
                    "enabledPublicVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled public VNI uuids\n"
                    },
                    "enabledVrackAggregationVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled vrack_aggregation VNI uuids\n"
                    },
                    "enabledVrackVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled vrack VNI uuids\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "dedicated server ip (IPv4)\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "dedicated server ip blocks\n"
                    },
                    "linkSpeed": {
                        "type": "integer",
                        "description": "link speed of the server\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "User defined VirtualNetworkInterface name\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "Operating system\n"
                    },
                    "professionalUse": {
                        "type": "boolean",
                        "description": "Does this server have professional use option\n"
                    },
                    "rack": {
                        "type": "string",
                        "description": "rack id of the server\n"
                    },
                    "rescueMail": {
                        "type": "string",
                        "description": "rescue mail of the server\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "dedicated server reverse\n"
                    },
                    "rootDevice": {
                        "type": "string",
                        "description": "root device of the server\n"
                    },
                    "serverId": {
                        "type": "integer",
                        "description": "your server id\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "error, hacked, hackedBlocked, ok\n"
                    },
                    "supportLevel": {
                        "type": "string",
                        "description": "Dedicated server support level (critical, fastpath, gs, pro)\n"
                    },
                    "vnis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getDedicatedServerVni:getDedicatedServerVni"
                        },
                        "description": "the list of Virtualnetworkinterface assiociated with this server\n"
                    }
                },
                "type": "object",
                "required": [
                    "bootId",
                    "commercialRange",
                    "datacenter",
                    "enabledPublicVnis",
                    "enabledVrackAggregationVnis",
                    "enabledVrackVnis",
                    "ip",
                    "ips",
                    "linkSpeed",
                    "monitoring",
                    "name",
                    "os",
                    "professionalUse",
                    "rack",
                    "rescueMail",
                    "reverse",
                    "rootDevice",
                    "serverId",
                    "serviceName",
                    "state",
                    "supportLevel",
                    "vnis",
                    "id"
                ]
            }
        },
        "ovh:index/getDedicatedServers:getDedicatedServers": {
            "description": "Use this data source to get the list of dedicated servers associated with your OVH Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst servers = pulumi.output(ovh.getDedicatedServers());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nservers = ovh.get_dedicated_servers()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var servers = Ovh.GetDedicatedServers.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetDedicatedServers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var servers = OvhFunctions.getDedicatedServers();\n\n    }\n}\n```\n```yaml\nvariables:\n  servers:\n    Fn::Invoke:\n      Function: ovh:getDedicatedServers\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getDedicatedServers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of dedicated servers IDs associated with your OVH Account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getDomainZone:getDomainZone": {
            "description": "Use this data source to retrieve information about a domain zone.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rootzone = pulumi.output(ovh.getDomainZone({\n    name: \"mysite.ovh\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nrootzone = ovh.get_domain_zone(name=\"mysite.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rootzone = Ovh.GetDomainZone.Invoke(new()\n    {\n        Name = \"mysite.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupDomainZone(ctx, \u0026GetDomainZoneArgs{\n\t\t\tName: \"mysite.ovh\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetDomainZoneArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rootzone = OvhFunctions.getDomainZone(GetDomainZoneArgs.builder()\n            .name(\"mysite.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  rootzone:\n    Fn::Invoke:\n      Function: ovh:getDomainZone\n      Arguments:\n        name: mysite.ovh\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDomainZone.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the domain zone.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDomainZone.\n",
                "properties": {
                    "dnssecSupported": {
                        "type": "boolean",
                        "description": "Is DNSSEC supported by this zone\n"
                    },
                    "hasDnsAnycast": {
                        "type": "boolean",
                        "description": "hasDnsAnycast flag of the DNS zone\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update date of the DNS zone\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name servers that host the DNS zone\n"
                    }
                },
                "type": "object",
                "required": [
                    "dnssecSupported",
                    "hasDnsAnycast",
                    "lastUpdate",
                    "name",
                    "nameServers",
                    "id"
                ]
            }
        },
        "ovh:index/getIpLoadbalancingVrackNetwork:getIpLoadbalancingVrackNetwork": {
            "description": "Use this data source to get the details of Vrack network available for your IPLoadbalancer associated with your OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lbNetwork = pulumi.output(ovh.getIpLoadbalancingVrackNetwork({\n    serviceName: \"XXXXXX\",\n    vrackNetworkId: Number.parseFloat(\"yyy\"),\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb_network = ovh.get_ip_loadbalancing_vrack_network(service_name=\"XXXXXX\",\n    vrack_network_id=\"yyy\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lbNetwork = Ovh.GetIpLoadbalancingVrackNetwork.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        VrackNetworkId = \"yyy\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetIpLoadbalancingVrackNetwork(ctx, \u0026GetIpLoadbalancingVrackNetworkArgs{\n\t\t\tServiceName:    \"XXXXXX\",\n\t\t\tVrackNetworkId: \"yyy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetIpLoadbalancingVrackNetworkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lbNetwork = OvhFunctions.getIpLoadbalancingVrackNetwork(GetIpLoadbalancingVrackNetworkArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .vrackNetworkId(\"yyy\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  lbNetwork:\n    Fn::Invoke:\n      Function: ovh:getIpLoadbalancingVrackNetwork\n      Arguments:\n        serviceName: XXXXXX\n        vrackNetworkId: yyy\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpLoadbalancingVrackNetwork.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "vrackNetworkId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpLoadbalancingVrackNetwork.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your vrack network\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "natIp": {
                        "type": "string",
                        "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "IP block of the private network in the vRack\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "displayName",
                    "natIp",
                    "serviceName",
                    "subnet",
                    "vlan",
                    "vrackNetworkId",
                    "id"
                ]
            }
        },
        "ovh:index/getIpLoadbalancingVrackNetworks:getIpLoadbalancingVrackNetworks": {
            "description": "Use this data source to get the list of Vrack network ids available for your IPLoadbalancer associated with your OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lbNetworks = pulumi.output(ovh.getIpLoadbalancingVrackNetworks({\n    serviceName: \"XXXXXX\",\n    subnet: \"10.0.0.0/24\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb_networks = ovh.get_ip_loadbalancing_vrack_networks(service_name=\"XXXXXX\",\n    subnet=\"10.0.0.0/24\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lbNetworks = Ovh.GetIpLoadbalancingVrackNetworks.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Subnet = \"10.0.0.0/24\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetIpLoadbalancingVrackNetworks(ctx, \u0026GetIpLoadbalancingVrackNetworksArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tSubnet:      pulumi.StringRef(\"10.0.0.0/24\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetIpLoadbalancingVrackNetworksArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lbNetworks = OvhFunctions.getIpLoadbalancingVrackNetworks(GetIpLoadbalancingVrackNetworksArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .subnet(\"10.0.0.0/24\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  lbNetworks:\n    Fn::Invoke:\n      Function: ovh:getIpLoadbalancingVrackNetworks\n      Arguments:\n        serviceName: XXXXXX\n        subnet: 10.0.0.0/24\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpLoadbalancingVrackNetworks.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "Filters networks on the subnet.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "Filters networks on the vlan id.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpLoadbalancingVrackNetworks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of vrack network ids.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:index/getIpService:getIpService": {
            "description": "Use this data source to retrieve information about an ip service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myip = pulumi.output(ovh.getIpService({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmyip = ovh.get_ip_service(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myip = Ovh.GetIpService.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupIpService(ctx, \u0026GetIpServiceArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetIpServiceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myip = OvhFunctions.getIpService(GetIpServiceArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myip:\n    Fn::Invoke:\n      Function: ovh:getIpService\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIpService.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpService.\n",
                "properties": {
                    "canBeTerminated": {
                        "type": "boolean",
                        "description": "can be terminated\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "country\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Custom description on your ip\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "ip block\n"
                    },
                    "organisationId": {
                        "type": "string",
                        "description": "IP block organisation Id\n"
                    },
                    "routedTos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getIpServiceRoutedTo:getIpServiceRoutedTo"
                        },
                        "description": "Routage information\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service where ip is routed to\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible values for ip type (    \"cdn\", \"cloud\", \"dedicated\", \"failover\", \"hosted_ssl\", \"housing\", \"loadBalancing\", \"mail\", \"overthebox\", \"pcc\", \"pci\", \"private\", \"vpn\", \"vps\", \"vrack\", \"xdsl\")\n"
                    }
                },
                "type": "object",
                "required": [
                    "canBeTerminated",
                    "country",
                    "description",
                    "ip",
                    "organisationId",
                    "routedTos",
                    "serviceName",
                    "type",
                    "id"
                ]
            }
        },
        "ovh:index/getMe:getMe": {
            "description": "Use this data source to get information about the current OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myaccount = pulumi.output(ovh.getMe());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmyaccount = ovh.get_me()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myaccount = Ovh.GetMe.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMe(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myaccount = OvhFunctions.getMe();\n\n    }\n}\n```\n```yaml\nvariables:\n  myaccount:\n    Fn::Invoke:\n      Function: ovh:getMe\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getMe.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "area": {
                        "type": "string"
                    },
                    "birthCity": {
                        "type": "string"
                    },
                    "birthDay": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "companyNationalIdentificationNumber": {
                        "type": "string"
                    },
                    "corporationType": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "currencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getMeCurrency:getMeCurrency"
                        }
                    },
                    "customerCode": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "fax": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "italianSdi": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "legalform": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nationalIdentificationNumber": {
                        "type": "string"
                    },
                    "nichandle": {
                        "type": "string"
                    },
                    "organisation": {
                        "type": "string"
                    },
                    "ovhCompany": {
                        "type": "string"
                    },
                    "ovhSubsidiary": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "phoneCountry": {
                        "type": "string"
                    },
                    "sex": {
                        "type": "string"
                    },
                    "spareEmail": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "vat": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "area",
                    "birthCity",
                    "birthDay",
                    "city",
                    "companyNationalIdentificationNumber",
                    "corporationType",
                    "country",
                    "currencies",
                    "customerCode",
                    "email",
                    "fax",
                    "firstname",
                    "italianSdi",
                    "language",
                    "legalform",
                    "name",
                    "nationalIdentificationNumber",
                    "nichandle",
                    "organisation",
                    "ovhCompany",
                    "ovhSubsidiary",
                    "phone",
                    "phoneCountry",
                    "sex",
                    "spareEmail",
                    "state",
                    "vat",
                    "zip",
                    "id"
                ]
            }
        },
        "ovh:index/getMeIdentityUser:getMeIdentityUser": {
            "description": "Use this data source to retrieve information about an identity user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myUser = pulumi.output(ovh.getMeIdentityUser({\n    user: \"my_user_login\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_user = ovh.get_me_identity_user(user=\"my_user_login\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myUser = Ovh.GetMeIdentityUser.Invoke(new()\n    {\n        User = \"my_user_login\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupMeIdentityUser(ctx, \u0026GetMeIdentityUserArgs{\n\t\t\tUser: \"my_user_login\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetMeIdentityUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myUser = OvhFunctions.getMeIdentityUser(GetMeIdentityUserArgs.builder()\n            .user(\"my_user_login\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myUser:\n    Fn::Invoke:\n      Function: ovh:getMeIdentityUser\n      Arguments:\n        user: my_user_login\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMeIdentityUser.\n",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "User's login.\n"
                    }
                },
                "type": "object",
                "required": [
                    "user"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMeIdentityUser.\n",
                "properties": {
                    "creation": {
                        "type": "string",
                        "description": "Creation date of this user.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User description.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "User's group.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update of this user.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "User's login suffix.\n"
                    },
                    "passwordLastUpdate": {
                        "type": "string",
                        "description": "When the user changed his password for the last time.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current user's status.\n"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creation",
                    "description",
                    "email",
                    "group",
                    "lastUpdate",
                    "login",
                    "passwordLastUpdate",
                    "status",
                    "user",
                    "id"
                ]
            }
        },
        "ovh:index/getMeIdentityUsers:getMeIdentityUsers": {
            "description": "Use this data source to retrieve list of user logins of the account's identity users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst users = pulumi.output(ovh.getMeIdentityUsers());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nusers = ovh.get_me_identity_users()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var users = Ovh.GetMeIdentityUsers.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMeIdentityUsers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var users = OvhFunctions.getMeIdentityUsers();\n\n    }\n}\n```\n```yaml\nvariables:\n  users:\n    Fn::Invoke:\n      Function: ovh:getMeIdentityUsers\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getMeIdentityUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the user's logins of all the identity users.\n"
                    }
                },
                "type": "object",
                "required": [
                    "users",
                    "id"
                ]
            }
        },
        "ovh:index/getMeInstallationTemplate:getMeInstallationTemplate": {
            "description": "Use this data source to get a custom installation template available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mytemplate = pulumi.output(ovh.getMeInstallationTemplate({\n    templateName: \"mytemplate\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmytemplate = ovh.get_me_installation_template(template_name=\"mytemplate\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mytemplate = Ovh.GetMeInstallationTemplate.Invoke(new()\n    {\n        TemplateName = \"mytemplate\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMeInstallationTemplate(ctx, \u0026GetMeInstallationTemplateArgs{\n\t\t\tTemplateName: \"mytemplate\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetMeInstallationTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mytemplate = OvhFunctions.getMeInstallationTemplate(GetMeInstallationTemplateArgs.builder()\n            .templateName(\"mytemplate\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mytemplate:\n    Fn::Invoke:\n      Function: ovh:getMeInstallationTemplate\n      Arguments:\n        templateName: mytemplate\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMeInstallationTemplate.\n",
                "properties": {
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMeInstallationTemplate.\n",
                "properties": {
                    "availableLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "beta": {
                        "type": "boolean"
                    },
                    "bitFormat": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "string"
                    },
                    "customizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getMeInstallationTemplateCustomization:getMeInstallationTemplateCustomization"
                        }
                    },
                    "defaultLanguage": {
                        "type": "string"
                    },
                    "deprecated": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "family": {
                        "type": "string"
                    },
                    "filesystems": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hardRaidConfiguration": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastModification": {
                        "type": "string"
                    },
                    "lvmReady": {
                        "type": "boolean"
                    },
                    "partitionSchemes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getMeInstallationTemplatePartitionScheme:getMeInstallationTemplatePartitionScheme"
                        }
                    },
                    "supportsDistributionKernel": {
                        "type": "boolean"
                    },
                    "supportsGptLabel": {
                        "type": "boolean"
                    },
                    "supportsRtm": {
                        "type": "boolean"
                    },
                    "supportsSqlServer": {
                        "type": "boolean"
                    },
                    "supportsUefi": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "availableLanguages",
                    "beta",
                    "bitFormat",
                    "category",
                    "customizations",
                    "defaultLanguage",
                    "deprecated",
                    "description",
                    "distribution",
                    "family",
                    "filesystems",
                    "hardRaidConfiguration",
                    "lastModification",
                    "lvmReady",
                    "partitionSchemes",
                    "supportsDistributionKernel",
                    "supportsGptLabel",
                    "supportsRtm",
                    "supportsSqlServer",
                    "supportsUefi",
                    "templateName",
                    "id"
                ]
            }
        },
        "ovh:index/getMeInstallationTemplates:getMeInstallationTemplates": {
            "description": "Use this data source to get the list of custom installation templates available for dedicated servers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst templates = pulumi.output(ovh.getMeInstallationTemplates());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntemplates = ovh.get_me_installation_templates()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var templates = Ovh.GetMeInstallationTemplates.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMeInstallationTemplates(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var templates = OvhFunctions.getMeInstallationTemplates();\n\n    }\n}\n```\n```yaml\nvariables:\n  templates:\n    Fn::Invoke:\n      Function: ovh:getMeInstallationTemplates\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getMeInstallationTemplates.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of custom installation templates IDs available for dedicated servers.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getMeIpxeScript:getMeIpxeScript": {
            "description": "Use this data source to retrieve information about an IPXE Script.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst script = pulumi.output(ovh.getMeIpxeScript({\n    name: \"myscript\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nscript = ovh.get_me_ipxe_script(name=\"myscript\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var script = Ovh.GetMeIpxeScript.Invoke(new()\n    {\n        Name = \"myscript\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupMeIpxeScript(ctx, \u0026GetMeIpxeScriptArgs{\n\t\t\tName: \"myscript\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetMeIpxeScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var script = OvhFunctions.getMeIpxeScript(GetMeIpxeScriptArgs.builder()\n            .name(\"myscript\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  script:\n    Fn::Invoke:\n      Function: ovh:getMeIpxeScript\n      Arguments:\n        name: myscript\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMeIpxeScript.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the IPXE Script.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMeIpxeScript.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "The content of the script.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "script",
                    "id"
                ]
            }
        },
        "ovh:index/getMeIpxeScripts:getMeIpxeScripts": {
            "description": "Use this data source to retrieve a list of the names of the account's IPXE Scripts.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst scripts = pulumi.output(ovh.getMeIpxeScripts());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nscripts = ovh.get_me_ipxe_scripts()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var scripts = Ovh.GetMeIpxeScripts.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMeIpxeScripts(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var scripts = OvhFunctions.getMeIpxeScripts();\n\n    }\n}\n```\n```yaml\nvariables:\n  scripts:\n    Fn::Invoke:\n      Function: ovh:getMeIpxeScripts\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getMeIpxeScripts.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the names of all the IPXE Scripts.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getMePaymentmeanBankAccount:getMePaymentmeanBankAccount": {
            "description": "Use this data source to retrieve information about a bank account\npayment mean associated with an OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst ba = pulumi.output(ovh.getMePaymentmeanBankAccount({\n    useDefault: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nba = ovh.get_me_paymentmean_bank_account(use_default=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ba = Ovh.GetMePaymentmeanBankAccount.Invoke(new()\n    {\n        UseDefault = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMePaymentmeanBankAccount(ctx, \u0026GetMePaymentmeanBankAccountArgs{\n\t\t\tUseDefault: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetMePaymentmeanBankAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ba = OvhFunctions.getMePaymentmeanBankAccount(GetMePaymentmeanBankAccountArgs.builder()\n            .useDefault(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  ba:\n    Fn::Invoke:\n      Function: ovh:getMePaymentmeanBankAccount\n      Arguments:\n        useDefault: true\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMePaymentmeanBankAccount.\n",
                "properties": {
                    "descriptionRegexp": {
                        "type": "string",
                        "description": "a regexp used to filter bank accounts \non their `description` attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Filter bank accounts on their `state` attribute.\nCan be \"blockedForIncidents\", \"valid\", \"pendingValidation\"\n"
                    },
                    "useDefault": {
                        "type": "boolean",
                        "description": "Retrieve bank account marked as default payment mean.\n",
                        "willReplaceOnChanges": true
                    },
                    "useOldest": {
                        "type": "boolean",
                        "description": "Retrieve oldest bank account.\nproject.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMePaymentmeanBankAccount.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "a boolean which tells if the retrieved bank account\nis marked as the default payment mean\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "the description attribute of the bank account\n"
                    },
                    "descriptionRegexp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "useDefault": {
                        "type": "boolean"
                    },
                    "useOldest": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "description",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:index/getMePaymentmeanCreditCard:getMePaymentmeanCreditCard": {
            "description": "Use this data source to retrieve information about a credit card\npayment mean associated with an OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst cc = pulumi.output(ovh.getMePaymentmeanCreditCard({\n    useDefault: true,\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncc = ovh.get_me_paymentmean_credit_card(use_default=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cc = Ovh.GetMePaymentmeanCreditCard.Invoke(new()\n    {\n        UseDefault = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetMePaymentmeanCreditCard(ctx, \u0026GetMePaymentmeanCreditCardArgs{\n\t\t\tUseDefault: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetMePaymentmeanCreditCardArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var cc = OvhFunctions.getMePaymentmeanCreditCard(GetMePaymentmeanCreditCardArgs.builder()\n            .useDefault(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  cc:\n    Fn::Invoke:\n      Function: ovh:getMePaymentmeanCreditCard\n      Arguments:\n        useDefault: true\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMePaymentmeanCreditCard.\n",
                "properties": {
                    "descriptionRegexp": {
                        "type": "string",
                        "description": "a regexp used to filter credit cards \non their `description` attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Filter credit cards on their `state` attribute.\nCan be \"expired\", \"valid\", \"tooManyFailures\"\n"
                    },
                    "useDefault": {
                        "type": "boolean",
                        "description": "Retrieve credit card marked as default payment mean.\n",
                        "willReplaceOnChanges": true
                    },
                    "useLastToExpire": {
                        "type": "boolean",
                        "description": "Retrieve the credit card that will be the last\nto expire according to its expiration date.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMePaymentmeanCreditCard.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "a boolean which tells if the retrieved credit card\nis marked as the default payment mean\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "the description attribute of the credit card\n"
                    },
                    "descriptionRegexp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "the state attribute of the credit card\n"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "useDefault": {
                        "type": "boolean"
                    },
                    "useLastToExpire": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "description",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:index/getMeSshKey:getMeSshKey": {
            "description": "Use this data source to retrieve information about an SSH key.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mykey = pulumi.output(ovh.getMeSshKey({\n    keyName: \"mykey\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmykey = ovh.get_me_ssh_key(key_name=\"mykey\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mykey = Ovh.GetMeSshKey.Invoke(new()\n    {\n        KeyName = \"mykey\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.LookupMeSshKey(ctx, \u0026GetMeSshKeyArgs{\n\t\t\tKeyName: \"mykey\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetMeSshKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mykey = OvhFunctions.getMeSshKey(GetMeSshKeyArgs.builder()\n            .keyName(\"mykey\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mykey:\n    Fn::Invoke:\n      Function: ovh:getMeSshKey\n      Arguments:\n        keyName: mykey\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMeSshKey.\n",
                "properties": {
                    "keyName": {
                        "type": "string",
                        "description": "The name of the SSH key.\n"
                    }
                },
                "type": "object",
                "required": [
                    "keyName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMeSshKey.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "True when this public SSH key is used for rescue mode and reinstallations.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The content of the public key.\nE.g.: \"ssh-ed25519 AAAAC3...\"\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "key",
                    "keyName",
                    "id"
                ]
            }
        },
        "ovh:index/getOrderCart:getOrderCart": {
            "description": "Use this data source to create a temporary order cart to retrieve information order cart products.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = pulumi.output(ovh.getOrderCart({\n    description: \"...\",\n    ovhSubsidiary: \"fr\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmycart = ovh.get_order_cart(description=\"...\",\n    ovh_subsidiary=\"fr\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        Description = \"...\",\n        OvhSubsidiary = \"fr\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tDescription:   pulumi.StringRef(\"...\"),\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .description(\"...\")\n            .ovhSubsidiary(\"fr\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        description: '...'\n        ovhSubsidiary: fr\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOrderCart.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of your cart\n",
                        "willReplaceOnChanges": true
                    },
                    "expire": {
                        "type": "string",
                        "description": "Expiration time (format: 2006-01-02T15:04:05+00:00)\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "ovhSubsidiary"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrderCart.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "expire": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Items of your cart\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Indicates if the cart has already been validated\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "expire",
                    "items",
                    "ovhSubsidiary",
                    "readOnly",
                    "id"
                ]
            }
        },
        "ovh:index/getOrderCartProduct:getOrderCartProduct": {
            "description": "Use this data source to retrieve information of order cart product products.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.getOrderCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cart\",\n});\nconst plans = mycart.then(mycart =\u003e ovh.getOrderCartProduct({\n    cartId: mycart.id,\n    product: \"...\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmycart = ovh.get_order_cart(ovh_subsidiary=\"fr\",\n    description=\"my cart\")\nplans = ovh.get_order_cart_product(cart_id=mycart.id,\n    product=\"...\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cart\",\n    });\n\n    var plans = Ovh.GetOrderCartProduct.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        Product = \"...\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.LookupOrderCartProduct(ctx, \u0026GetOrderCartProductArgs{\n\t\t\tCartId:  mycart.Id,\n\t\t\tProduct: \"...\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cart\")\n            .build());\n\n        final var plans = OvhFunctions.getOrderCartProduct(GetOrderCartProductArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .product(\"...\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cart\n  plans:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProduct\n      Arguments:\n        cartId: ${mycart.id}\n        product: '...'\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOrderCartProduct.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrderCartProduct.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getOrderCartProductResult:getOrderCartProductResult"
                        },
                        "description": "products results\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "product",
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getOrderCartProductOptions:getOrderCartProductOptions": {
            "description": "Use this data source to retrieve information of order cart product options.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.getOrderCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cart\",\n});\nconst options = mycart.then(mycart =\u003e ovh.getOrderCartProductOptions({\n    cartId: mycart.id,\n    product: \"cloud\",\n    planCode: \"project\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmycart = ovh.get_order_cart(ovh_subsidiary=\"fr\",\n    description=\"my cart\")\noptions = ovh.get_order_cart_product_options(cart_id=mycart.id,\n    product=\"cloud\",\n    plan_code=\"project\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cart\",\n    });\n\n    var options = Ovh.GetOrderCartProductOptions.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        Product = \"cloud\",\n        PlanCode = \"project\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.LookupOrderCartProductOptions(ctx, \u0026GetOrderCartProductOptionsArgs{\n\t\t\tCartId:   mycart.Id,\n\t\t\tProduct:  \"cloud\",\n\t\t\tPlanCode: \"project\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cart\")\n            .build());\n\n        final var options = OvhFunctions.getOrderCartProductOptions(GetOrderCartProductOptionsArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .product(\"cloud\")\n            .planCode(\"project\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cart\n  options:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductOptions\n      Arguments:\n        cartId: ${mycart.id}\n        product: cloud\n        planCode: project\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOrderCartProductOptions.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "Catalog name\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrderCartProductOptions.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getOrderCartProductOptionsResult:getOrderCartProductOptionsResult"
                        },
                        "description": "products results\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "product",
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getOrderCartProductOptionsPlan:getOrderCartProductOptionsPlan": {
            "description": "Use this data source to retrieve information of order cart product options plan.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.getOrderCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cart\",\n});\nconst plan = mycart.then(mycart =\u003e ovh.getOrderCartProductOptionsPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"cloud\",\n    planCode: \"project\",\n    optionsPlanCode: \"vrack\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmycart = ovh.get_order_cart(ovh_subsidiary=\"fr\",\n    description=\"my cart\")\nplan = ovh.get_order_cart_product_options_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"cloud\",\n    plan_code=\"project\",\n    options_plan_code=\"vrack\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cart\",\n    });\n\n    var plan = Ovh.GetOrderCartProductOptionsPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"cloud\",\n        PlanCode = \"project\",\n        OptionsPlanCode = \"vrack\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.GetOrderCartProductOptionsPlan(ctx, \u0026GetOrderCartProductOptionsPlanArgs{\n\t\t\tCartId:          mycart.Id,\n\t\t\tPriceCapacity:   \"renew\",\n\t\t\tProduct:         \"cloud\",\n\t\t\tPlanCode:        \"project\",\n\t\t\tOptionsPlanCode: \"vrack\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductOptionsPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cart\")\n            .build());\n\n        final var plan = OvhFunctions.getOrderCartProductOptionsPlan(GetOrderCartProductOptionsPlanArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"cloud\")\n            .planCode(\"project\")\n            .optionsPlanCode(\"vrack\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cart\n  plan:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductOptionsPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: cloud\n        planCode: project\n        optionsPlanCode: vrack\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOrderCartProductOptionsPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "Catalog name\n"
                    },
                    "optionsPlanCode": {
                        "type": "string",
                        "description": "options plan code.\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string",
                        "description": "Capacity of the pricing (type of pricing)\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "optionsPlanCode",
                    "planCode",
                    "priceCapacity",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrderCartProductOptionsPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "exclusive": {
                        "type": "boolean",
                        "description": "Define if options of this family are exclusive with each other\n"
                    },
                    "family": {
                        "type": "string",
                        "description": "Option family\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "mandatory": {
                        "type": "boolean",
                        "description": "Define if an option of this family is mandatory\n"
                    },
                    "optionsPlanCode": {
                        "type": "string"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getOrderCartProductOptionsPlanPrice:getOrderCartProductOptionsPlanPrice"
                        },
                        "description": "Prices of the product offer\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string",
                        "description": "Name of the product\n"
                    },
                    "productType": {
                        "type": "string",
                        "description": "Product type\n"
                    },
                    "selectedPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getOrderCartProductOptionsPlanSelectedPrice:getOrderCartProductOptionsPlanSelectedPrice"
                        },
                        "description": "Selected Price according to capacity\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "exclusive",
                    "family",
                    "mandatory",
                    "optionsPlanCode",
                    "planCode",
                    "priceCapacity",
                    "prices",
                    "product",
                    "productName",
                    "productType",
                    "selectedPrices",
                    "id"
                ]
            }
        },
        "ovh:index/getOrderCartProductPlan:getOrderCartProductPlan": {
            "description": "Use this data source to retrieve information of order cart product plan.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mycart = ovh.getOrderCart({\n    ovhSubsidiary: \"fr\",\n    description: \"my cart\",\n});\nconst plan = mycart.then(mycart =\u003e ovh.getOrderCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"cloud\",\n    planCode: \"project\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmycart = ovh.get_order_cart(ovh_subsidiary=\"fr\",\n    description=\"my cart\")\nplan = ovh.get_order_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"cloud\",\n    plan_code=\"project\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mycart = Ovh.GetOrderCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n        Description = \"my cart\",\n    });\n\n    var plan = Ovh.GetOrderCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getOrderCartResult =\u003e getOrderCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"cloud\",\n        PlanCode = \"project\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmycart, err := ovh.GetOrderCart(ctx, \u0026GetOrderCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t\tDescription:   pulumi.StringRef(\"my cart\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ovh.GetOrderCartProductPlan(ctx, \u0026GetOrderCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"cloud\",\n\t\t\tPlanCode:      \"project\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetOrderCartArgs;\nimport com.pulumi.ovh.inputs.GetOrderCartProductPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mycart = OvhFunctions.getOrderCart(GetOrderCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .description(\"my cart\")\n            .build());\n\n        final var plan = OvhFunctions.getOrderCartProductPlan(GetOrderCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getOrderCartResult -\u003e getOrderCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"cloud\")\n            .planCode(\"project\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mycart:\n    Fn::Invoke:\n      Function: ovh:getOrderCart\n      Arguments:\n        ovhSubsidiary: fr\n        description: my cart\n  plan:\n    Fn::Invoke:\n      Function: ovh:getOrderCartProductPlan\n      Arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: cloud\n        planCode: project\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOrderCartProductPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "Catalog name\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string",
                        "description": "Capacity of the pricing (type of pricing)\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "priceCapacity",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOrderCartProductPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getOrderCartProductPlanPrice:getOrderCartProductPlanPrice"
                        },
                        "description": "Prices of the product offer\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string",
                        "description": "Name of the product\n"
                    },
                    "productType": {
                        "type": "string",
                        "description": "Product type\n"
                    },
                    "selectedPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getOrderCartProductPlanSelectedPrice:getOrderCartProductPlanSelectedPrice"
                        },
                        "description": "Selected Price according to capacity\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "priceCapacity",
                    "prices",
                    "product",
                    "productName",
                    "productType",
                    "selectedPrices",
                    "id"
                ]
            }
        },
        "ovh:index/getVps:getVps": {
            "description": "Use this data source to retrieve information about a vps associated with your OVH Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst server = pulumi.output(ovh.getVps({\n    serviceName: \"XXXXXX\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nserver = ovh.get_vps(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var server = Ovh.GetVps.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-ovh/sdk/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetVps(ctx, \u0026GetVpsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetVpsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var server = OvhFunctions.getVps(GetVpsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  server:\n    Fn::Invoke:\n      Function: ovh:getVps\n      Arguments:\n        serviceName: XXXXXX\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getVps.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVps.\n",
                "properties": {
                    "cluster": {
                        "type": "string",
                        "description": "The ovh cluster the vps is in\n"
                    },
                    "datacenter": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The datacenter in which the vps is located\n* `datacenter.longname` - The fullname of the datacenter (ex: \"Strasbourg SBG1\")\n* `datacenter.name` - The short name of the datacenter (ex: \"sbg1)\n"
                    },
                    "displayname": {
                        "type": "string",
                        "description": "The displayed name in the ovh web admin\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IPs addresses attached to the vps\n"
                    },
                    "keymap": {
                        "type": "string",
                        "description": "The keymap for the ip kvm, valid values \"\", \"fr\", \"us\"\n"
                    },
                    "memory": {
                        "type": "integer",
                        "description": "The amount of memory in MB of the vps.\n"
                    },
                    "model": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A dict describing the type of vps.\n* `model.name` - The model name (ex: model1)\n* `model.offer` - The model human description (ex: \"VPS 2016 SSD 1\")\n* `model.version` - The model version (ex: \"2017v2\")\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "netbootmode": {
                        "type": "string",
                        "description": "The source of the boot kernel\n"
                    },
                    "offertype": {
                        "type": "string",
                        "description": "The type of offer (ssd, cloud, classic)\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "slamonitoring": {
                        "type": "boolean",
                        "description": "A boolean to indicate if OVH sla monitoring is active.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the vps\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of server\n"
                    },
                    "vcore": {
                        "type": "integer",
                        "description": "The number of vcore of the vps\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The OVH zone where the vps is\n"
                    }
                },
                "type": "object",
                "required": [
                    "cluster",
                    "datacenter",
                    "displayname",
                    "ips",
                    "keymap",
                    "memory",
                    "model",
                    "name",
                    "netbootmode",
                    "offertype",
                    "serviceName",
                    "slamonitoring",
                    "state",
                    "type",
                    "vcore",
                    "zone",
                    "id"
                ]
            }
        },
        "ovh:index/getVracks:getVracks": {
            "description": "Use this data source to get the list of Vrack IDs available for your OVH account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vracks = pulumi.output(ovh.getVracks());\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvracks = ovh.get_vracks()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vracks = Ovh.GetVracks.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetVracks(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var vracks = OvhFunctions.getVracks();\n\n    }\n}\n```\n```yaml\nvariables:\n  vracks:\n    Fn::Invoke:\n      Function: ovh:getVracks\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getVracks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        }
    }
}