// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs_Pulumi.Ovh
{
    /// <summary>
    /// Creates a user for a container registry associated with a public cloud project.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Ovh = Lbrlabs_Pulumi.Ovh;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var registry = Ovh.GetCloudProjectContainerRegistry.Invoke(new()
    ///     {
    ///         ServiceName = "XXXXXX",
    ///         RegistryId = "yyyy",
    ///     });
    /// 
    ///     var user = new Ovh.CloudProjectContainerRegistryUser("user", new()
    ///     {
    ///         ServiceName = ovh_cloud_project_containerregistry.Registry.Service_name,
    ///         RegistryId = ovh_cloud_project_containerregistry.Registry.Id,
    ///         Email = "foo@bar.com",
    ///         Login = "foobar",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OvhResourceType("ovh:index/cloudProjectContainerRegistryUser:CloudProjectContainerRegistryUser")]
    public partial class CloudProjectContainerRegistryUser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// User email
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// Registry name
        /// </summary>
        [Output("login")]
        public Output<string> Login { get; private set; } = null!;

        /// <summary>
        /// (Sensitive) User password
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// Registry ID
        /// </summary>
        [Output("registryId")]
        public Output<string> RegistryId { get; private set; } = null!;

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// User name
        /// </summary>
        [Output("user")]
        public Output<string> User { get; private set; } = null!;


        /// <summary>
        /// Create a CloudProjectContainerRegistryUser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudProjectContainerRegistryUser(string name, CloudProjectContainerRegistryUserArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/cloudProjectContainerRegistryUser:CloudProjectContainerRegistryUser", name, args ?? new CloudProjectContainerRegistryUserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudProjectContainerRegistryUser(string name, Input<string> id, CloudProjectContainerRegistryUserState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/cloudProjectContainerRegistryUser:CloudProjectContainerRegistryUser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudProjectContainerRegistryUser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudProjectContainerRegistryUser Get(string name, Input<string> id, CloudProjectContainerRegistryUserState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudProjectContainerRegistryUser(name, id, state, options);
        }
    }

    public sealed class CloudProjectContainerRegistryUserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User email
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// Registry name
        /// </summary>
        [Input("login", required: true)]
        public Input<string> Login { get; set; } = null!;

        /// <summary>
        /// Registry ID
        /// </summary>
        [Input("registryId", required: true)]
        public Input<string> RegistryId { get; set; } = null!;

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public CloudProjectContainerRegistryUserArgs()
        {
        }
        public static new CloudProjectContainerRegistryUserArgs Empty => new CloudProjectContainerRegistryUserArgs();
    }

    public sealed class CloudProjectContainerRegistryUserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User email
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Registry name
        /// </summary>
        [Input("login")]
        public Input<string>? Login { get; set; }

        /// <summary>
        /// (Sensitive) User password
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// Registry ID
        /// </summary>
        [Input("registryId")]
        public Input<string>? RegistryId { get; set; }

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// User name
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public CloudProjectContainerRegistryUserState()
        {
        }
        public static new CloudProjectContainerRegistryUserState Empty => new CloudProjectContainerRegistryUserState();
    }
}
