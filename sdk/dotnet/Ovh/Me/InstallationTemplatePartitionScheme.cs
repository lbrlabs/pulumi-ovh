// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Ovh.Me
{
    /// <summary>
    /// Use this resource to create partition scheme for a custom installation template available for dedicated servers.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Lbrlabs.PulumiPackage.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mytemplate = new Ovh.Me.InstallationTemplate("mytemplate", new()
    ///     {
    ///         BaseTemplateName = "centos7_64",
    ///         TemplateName = "mytemplate",
    ///         DefaultLanguage = "fr",
    ///     });
    /// 
    ///     var scheme = new Ovh.Me.InstallationTemplatePartitionScheme("scheme", new()
    ///     {
    ///         TemplateName = mytemplate.TemplateName,
    ///         Priority = 1,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The resource can be imported using the `template_name`, `name` of the cluster, separated by "/" E.g., bash
    /// 
    /// ```sh
    ///  $ pulumi import ovh:Me/installationTemplatePartitionScheme:InstallationTemplatePartitionScheme scheme template_name/name
    /// ```
    /// </summary>
    [OvhResourceType("ovh:Me/installationTemplatePartitionScheme:InstallationTemplatePartitionScheme")]
    public partial class InstallationTemplatePartitionScheme : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Required) This partition scheme name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default, among all the compatible partitioning schemes (given the underlying hardware specifications).
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// The template name of the partition scheme.
        /// </summary>
        [Output("templateName")]
        public Output<string> TemplateName { get; private set; } = null!;


        /// <summary>
        /// Create a InstallationTemplatePartitionScheme resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstallationTemplatePartitionScheme(string name, InstallationTemplatePartitionSchemeArgs args, CustomResourceOptions? options = null)
            : base("ovh:Me/installationTemplatePartitionScheme:InstallationTemplatePartitionScheme", name, args ?? new InstallationTemplatePartitionSchemeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstallationTemplatePartitionScheme(string name, Input<string> id, InstallationTemplatePartitionSchemeState? state = null, CustomResourceOptions? options = null)
            : base("ovh:Me/installationTemplatePartitionScheme:InstallationTemplatePartitionScheme", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstallationTemplatePartitionScheme resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstallationTemplatePartitionScheme Get(string name, Input<string> id, InstallationTemplatePartitionSchemeState? state = null, CustomResourceOptions? options = null)
        {
            return new InstallationTemplatePartitionScheme(name, id, state, options);
        }
    }

    public sealed class InstallationTemplatePartitionSchemeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Required) This partition scheme name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default, among all the compatible partitioning schemes (given the underlying hardware specifications).
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// The template name of the partition scheme.
        /// </summary>
        [Input("templateName", required: true)]
        public Input<string> TemplateName { get; set; } = null!;

        public InstallationTemplatePartitionSchemeArgs()
        {
        }
        public static new InstallationTemplatePartitionSchemeArgs Empty => new InstallationTemplatePartitionSchemeArgs();
    }

    public sealed class InstallationTemplatePartitionSchemeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Required) This partition scheme name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// on a reinstall, if a partitioning scheme is not specified, the one with the higher priority will be used by default, among all the compatible partitioning schemes (given the underlying hardware specifications).
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The template name of the partition scheme.
        /// </summary>
        [Input("templateName")]
        public Input<string>? TemplateName { get; set; }

        public InstallationTemplatePartitionSchemeState()
        {
        }
        public static new InstallationTemplatePartitionSchemeState Empty => new InstallationTemplatePartitionSchemeState();
    }
}
