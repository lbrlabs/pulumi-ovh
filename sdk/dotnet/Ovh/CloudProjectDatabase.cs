// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Lbrlabs.PulumiPackage.Ovh
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// To deploy a business PostgreSQL service with two nodes on public network:
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Ovh = Lbrlabs.PulumiPackage.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var postgresql = new Ovh.CloudProjectDatabase("postgresql", new()
    ///     {
    ///         Description = "my-first-postgresql",
    ///         Engine = "postgresql",
    ///         Flavor = "db1-15",
    ///         Nodes = new[]
    ///         {
    ///             new Ovh.Inputs.CloudProjectDatabaseNodeArgs
    ///             {
    ///                 Region = "GRA",
    ///             },
    ///             new Ovh.Inputs.CloudProjectDatabaseNodeArgs
    ///             {
    ///                 Region = "GRA",
    ///             },
    ///         },
    ///         Plan = "business",
    ///         ServiceName = "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
    ///         Version = "14",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// To deploy an enterprise MongoDB service with three nodes on private network:
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Ovh = Lbrlabs.PulumiPackage.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mongodb = new Ovh.CloudProjectDatabase("mongodb", new()
    ///     {
    ///         ServiceName = @var.Openstack_infos.Project_id,
    ///         Description = "my-first-mongodb",
    ///         Engine = "mongodb",
    ///         Version = "5.0",
    ///         Plan = "enterprise",
    ///         Nodes = new[]
    ///         {
    ///             new Ovh.Inputs.CloudProjectDatabaseNodeArgs
    ///             {
    ///                 Region = "SBG",
    ///                 SubnetId = "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
    ///                 NetworkId = "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
    ///             },
    ///             new Ovh.Inputs.CloudProjectDatabaseNodeArgs
    ///             {
    ///                 Region = "SBG",
    ///                 SubnetId = "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
    ///                 NetworkId = "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
    ///             },
    ///             new Ovh.Inputs.CloudProjectDatabaseNodeArgs
    ///             {
    ///                 Region = "SBG",
    ///                 SubnetId = "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
    ///                 NetworkId = "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
    ///             },
    ///         },
    ///         Flavor = "db1-30",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// OVHcloud Managed database clusters can be imported using the `service_name`, `engine`, `id` of the cluster, separated by "/" E.g.,
    /// 
    /// ```sh
    ///  $ pulumi import ovh:index/cloudProjectDatabase:CloudProjectDatabase my_database_cluster &lt;service_name&gt;/&lt;engine&gt;/&lt;id&gt;
    /// ```
    /// </summary>
    [OvhResourceType("ovh:index/cloudProjectDatabase:CloudProjectDatabase")]
    public partial class CloudProjectDatabase : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Time on which backups start every day.
        /// </summary>
        [Output("backupTime")]
        public Output<string> BackupTime { get; private set; } = null!;

        /// <summary>
        /// Date of the creation of the cluster.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Small description of the database service.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// List of all endpoints objects of the service.
        /// </summary>
        [Output("endpoints")]
        public Output<ImmutableArray<Outputs.CloudProjectDatabaseEndpoint>> Endpoints { get; private set; } = null!;

        /// <summary>
        /// The database engine you want to deploy. To get a full list of available engine visit.
        /// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).
        /// </summary>
        [Output("engine")]
        public Output<string> Engine { get; private set; } = null!;

        /// <summary>
        /// a valid OVH public cloud database flavor name in which the nodes will be started.
        /// Ex: "db1-7". Changing this value upgrade the nodes with the new flavor.
        /// You can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/
        /// </summary>
        [Output("flavor")]
        public Output<string> Flavor { get; private set; } = null!;

        /// <summary>
        /// Time on which maintenances can start every day.
        /// </summary>
        [Output("maintenanceTime")]
        public Output<string> MaintenanceTime { get; private set; } = null!;

        /// <summary>
        /// Type of network of the cluster.
        /// </summary>
        [Output("networkType")]
        public Output<string> NetworkType { get; private set; } = null!;

        /// <summary>
        /// List of nodes object.
        /// Multi region cluster are not yet available, all node should be identical.
        /// </summary>
        [Output("nodes")]
        public Output<ImmutableArray<Outputs.CloudProjectDatabaseNode>> Nodes { get; private set; } = null!;

        /// <summary>
        /// List of nodes object.
        /// Enum: "esential", "business", "enterprise".
        /// </summary>
        [Output("plan")]
        public Output<string> Plan { get; private set; } = null!;

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Current status of the cluster.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The version of the engine in which the service should be deployed
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CloudProjectDatabase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudProjectDatabase(string name, CloudProjectDatabaseArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/cloudProjectDatabase:CloudProjectDatabase", name, args ?? new CloudProjectDatabaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudProjectDatabase(string name, Input<string> id, CloudProjectDatabaseState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/cloudProjectDatabase:CloudProjectDatabase", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lbrlabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudProjectDatabase resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudProjectDatabase Get(string name, Input<string> id, CloudProjectDatabaseState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudProjectDatabase(name, id, state, options);
        }
    }

    public sealed class CloudProjectDatabaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Small description of the database service.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The database engine you want to deploy. To get a full list of available engine visit.
        /// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).
        /// </summary>
        [Input("engine", required: true)]
        public Input<string> Engine { get; set; } = null!;

        /// <summary>
        /// a valid OVH public cloud database flavor name in which the nodes will be started.
        /// Ex: "db1-7". Changing this value upgrade the nodes with the new flavor.
        /// You can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/
        /// </summary>
        [Input("flavor", required: true)]
        public Input<string> Flavor { get; set; } = null!;

        [Input("nodes", required: true)]
        private InputList<Inputs.CloudProjectDatabaseNodeArgs>? _nodes;

        /// <summary>
        /// List of nodes object.
        /// Multi region cluster are not yet available, all node should be identical.
        /// </summary>
        public InputList<Inputs.CloudProjectDatabaseNodeArgs> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<Inputs.CloudProjectDatabaseNodeArgs>());
            set => _nodes = value;
        }

        /// <summary>
        /// List of nodes object.
        /// Enum: "esential", "business", "enterprise".
        /// </summary>
        [Input("plan", required: true)]
        public Input<string> Plan { get; set; } = null!;

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// The version of the engine in which the service should be deployed
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public CloudProjectDatabaseArgs()
        {
        }
        public static new CloudProjectDatabaseArgs Empty => new CloudProjectDatabaseArgs();
    }

    public sealed class CloudProjectDatabaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time on which backups start every day.
        /// </summary>
        [Input("backupTime")]
        public Input<string>? BackupTime { get; set; }

        /// <summary>
        /// Date of the creation of the cluster.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Small description of the database service.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("endpoints")]
        private InputList<Inputs.CloudProjectDatabaseEndpointGetArgs>? _endpoints;

        /// <summary>
        /// List of all endpoints objects of the service.
        /// </summary>
        public InputList<Inputs.CloudProjectDatabaseEndpointGetArgs> Endpoints
        {
            get => _endpoints ?? (_endpoints = new InputList<Inputs.CloudProjectDatabaseEndpointGetArgs>());
            set => _endpoints = value;
        }

        /// <summary>
        /// The database engine you want to deploy. To get a full list of available engine visit.
        /// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).
        /// </summary>
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        /// <summary>
        /// a valid OVH public cloud database flavor name in which the nodes will be started.
        /// Ex: "db1-7". Changing this value upgrade the nodes with the new flavor.
        /// You can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/
        /// </summary>
        [Input("flavor")]
        public Input<string>? Flavor { get; set; }

        /// <summary>
        /// Time on which maintenances can start every day.
        /// </summary>
        [Input("maintenanceTime")]
        public Input<string>? MaintenanceTime { get; set; }

        /// <summary>
        /// Type of network of the cluster.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        [Input("nodes")]
        private InputList<Inputs.CloudProjectDatabaseNodeGetArgs>? _nodes;

        /// <summary>
        /// List of nodes object.
        /// Multi region cluster are not yet available, all node should be identical.
        /// </summary>
        public InputList<Inputs.CloudProjectDatabaseNodeGetArgs> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<Inputs.CloudProjectDatabaseNodeGetArgs>());
            set => _nodes = value;
        }

        /// <summary>
        /// List of nodes object.
        /// Enum: "esential", "business", "enterprise".
        /// </summary>
        [Input("plan")]
        public Input<string>? Plan { get; set; }

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Current status of the cluster.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The version of the engine in which the service should be deployed
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public CloudProjectDatabaseState()
        {
        }
        public static new CloudProjectDatabaseState Empty => new CloudProjectDatabaseState();
    }
}
