// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace lbrlabs.Ovh
{
    public static class GetCloudProjectKube
    {
        /// <summary>
        /// Use this data source to get a OVH Managed Kubernetes Service cluster.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKubeCluster = Ovh.GetCloudProjectKube.Invoke(new()
        ///     {
        ///         ServiceName = "XXXXXX",
        ///         KubeId = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["version"] = myKubeCluster.Apply(getCloudProjectKubeResult =&gt; getCloudProjectKubeResult.Version),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCloudProjectKubeResult> InvokeAsync(GetCloudProjectKubeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCloudProjectKubeResult>("ovh:index/getCloudProjectKube:getCloudProjectKube", args ?? new GetCloudProjectKubeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a OVH Managed Kubernetes Service cluster.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myKubeCluster = Ovh.GetCloudProjectKube.Invoke(new()
        ///     {
        ///         ServiceName = "XXXXXX",
        ///         KubeId = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["version"] = myKubeCluster.Apply(getCloudProjectKubeResult =&gt; getCloudProjectKubeResult.Version),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetCloudProjectKubeResult> Invoke(GetCloudProjectKubeInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCloudProjectKubeResult>("ovh:index/getCloudProjectKube:getCloudProjectKube", args ?? new GetCloudProjectKubeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudProjectKubeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the managed kubernetes cluster.
        /// </summary>
        [Input("kubeId", required: true)]
        public string KubeId { get; set; } = null!;

        /// <summary>
        /// The name of the managed kubernetes cluster.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The OVH public cloud region ID of the managed kubernetes cluster.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        /// <summary>
        /// Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.
        /// </summary>
        [Input("updatePolicy")]
        public string? UpdatePolicy { get; set; }

        /// <summary>
        /// Kubernetes version of the managed kubernetes cluster.
        /// </summary>
        [Input("version")]
        public string? Version { get; set; }

        public GetCloudProjectKubeArgs()
        {
        }
        public static new GetCloudProjectKubeArgs Empty => new GetCloudProjectKubeArgs();
    }

    public sealed class GetCloudProjectKubeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the managed kubernetes cluster.
        /// </summary>
        [Input("kubeId", required: true)]
        public Input<string> KubeId { get; set; } = null!;

        /// <summary>
        /// The name of the managed kubernetes cluster.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The OVH public cloud region ID of the managed kubernetes cluster.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.
        /// </summary>
        [Input("updatePolicy")]
        public Input<string>? UpdatePolicy { get; set; }

        /// <summary>
        /// Kubernetes version of the managed kubernetes cluster.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetCloudProjectKubeInvokeArgs()
        {
        }
        public static new GetCloudProjectKubeInvokeArgs Empty => new GetCloudProjectKubeInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudProjectKubeResult
    {
        /// <summary>
        /// True if control-plane is up to date.
        /// </summary>
        public readonly bool ControlPlaneIsUpToDate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// True if all nodes and control-plane are up to date.
        /// </summary>
        public readonly bool IsUpToDate;
        /// <summary>
        /// See Argument Reference above.
        /// </summary>
        public readonly string KubeId;
        /// <summary>
        /// The name of the managed kubernetes cluster.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Kubernetes versions available for upgrade.
        /// </summary>
        public readonly ImmutableArray<string> NextUpgradeVersions;
        /// <summary>
        /// Cluster nodes URL.
        /// </summary>
        public readonly string NodesUrl;
        /// <summary>
        /// OpenStack private network (or vrack) ID to use.
        /// </summary>
        public readonly string PrivateNetworkId;
        /// <summary>
        /// The OVH public cloud region ID of the managed kubernetes cluster.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// See Argument Reference above.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// Cluster status. Should be normally set to 'READY'.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.
        /// </summary>
        public readonly string? UpdatePolicy;
        /// <summary>
        /// Management URL of your cluster.
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// Kubernetes version of the managed kubernetes cluster.
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private GetCloudProjectKubeResult(
            bool controlPlaneIsUpToDate,

            string id,

            bool isUpToDate,

            string kubeId,

            string? name,

            ImmutableArray<string> nextUpgradeVersions,

            string nodesUrl,

            string privateNetworkId,

            string? region,

            string serviceName,

            string status,

            string? updatePolicy,

            string url,

            string? version)
        {
            ControlPlaneIsUpToDate = controlPlaneIsUpToDate;
            Id = id;
            IsUpToDate = isUpToDate;
            KubeId = kubeId;
            Name = name;
            NextUpgradeVersions = nextUpgradeVersions;
            NodesUrl = nodesUrl;
            PrivateNetworkId = privateNetworkId;
            Region = region;
            ServiceName = serviceName;
            Status = status;
            UpdatePolicy = updatePolicy;
            Url = url;
            Version = version;
        }
    }
}
