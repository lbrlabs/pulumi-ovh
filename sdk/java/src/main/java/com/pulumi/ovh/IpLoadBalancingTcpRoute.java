// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ovh.IpLoadBalancingTcpRouteArgs;
import com.pulumi.ovh.Utilities;
import com.pulumi.ovh.inputs.IpLoadBalancingTcpRouteState;
import com.pulumi.ovh.outputs.IpLoadBalancingTcpRouteAction;
import com.pulumi.ovh.outputs.IpLoadBalancingTcpRouteRule;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manage tcp route for a loadbalancer service
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.IpLoadBalancingTcpRoute;
 * import com.pulumi.ovh.IpLoadBalancingTcpRouteArgs;
 * import com.pulumi.ovh.inputs.IpLoadBalancingTcpRouteActionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var tcpreject = new IpLoadBalancingTcpRoute(&#34;tcpreject&#34;, IpLoadBalancingTcpRouteArgs.builder()        
 *             .action(IpLoadBalancingTcpRouteActionArgs.builder()
 *                 .type(&#34;reject&#34;)
 *                 .build())
 *             .serviceName(&#34;loadbalancer-xxxxxxxxxxxxxxxxxx&#34;)
 *             .weight(1)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="ovh:index/ipLoadBalancingTcpRoute:IpLoadBalancingTcpRoute")
public class IpLoadBalancingTcpRoute extends com.pulumi.resources.CustomResource {
    /**
     * Action triggered when all rules match
     * 
     */
    @Export(name="action", type=IpLoadBalancingTcpRouteAction.class, parameters={})
    private Output<IpLoadBalancingTcpRouteAction> action;

    /**
     * @return Action triggered when all rules match
     * 
     */
    public Output<IpLoadBalancingTcpRouteAction> action() {
        return this.action;
    }
    /**
     * Human readable name for your route, this field is for you
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Human readable name for your route, this field is for you
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Route traffic for this frontend
     * 
     */
    @Export(name="frontendId", type=Integer.class, parameters={})
    private Output<Integer> frontendId;

    /**
     * @return Route traffic for this frontend
     * 
     */
    public Output<Integer> frontendId() {
        return this.frontendId;
    }
    /**
     * List of rules to match to trigger action
     * 
     */
    @Export(name="rules", type=List.class, parameters={IpLoadBalancingTcpRouteRule.class})
    private Output<List<IpLoadBalancingTcpRouteRule>> rules;

    /**
     * @return List of rules to match to trigger action
     * 
     */
    public Output<List<IpLoadBalancingTcpRouteRule>> rules() {
        return this.rules;
    }
    /**
     * The internal name of your IP load balancing
     * 
     */
    @Export(name="serviceName", type=String.class, parameters={})
    private Output<String> serviceName;

    /**
     * @return The internal name of your IP load balancing
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Route status. Routes in &#34;ok&#34; state are ready to operate
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Route status. Routes in &#34;ok&#34; state are ready to operate
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action
     * 
     */
    @Export(name="weight", type=Integer.class, parameters={})
    private Output<Integer> weight;

    /**
     * @return Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action
     * 
     */
    public Output<Integer> weight() {
        return this.weight;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IpLoadBalancingTcpRoute(String name) {
        this(name, IpLoadBalancingTcpRouteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IpLoadBalancingTcpRoute(String name, IpLoadBalancingTcpRouteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IpLoadBalancingTcpRoute(String name, IpLoadBalancingTcpRouteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:index/ipLoadBalancingTcpRoute:IpLoadBalancingTcpRoute", name, args == null ? IpLoadBalancingTcpRouteArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IpLoadBalancingTcpRoute(String name, Output<String> id, @Nullable IpLoadBalancingTcpRouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:index/ipLoadBalancingTcpRoute:IpLoadBalancingTcpRoute", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IpLoadBalancingTcpRoute get(String name, Output<String> id, @Nullable IpLoadBalancingTcpRouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IpLoadBalancingTcpRoute(name, id, state, options);
    }
}
