// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.Dbaas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsClusterState extends com.pulumi.resources.ResourceArgs {

    public static final LogsClusterState Empty = new LogsClusterState();

    /**
     * List of IP blocks
     * 
     */
    @Import(name="archiveAllowedNetworks")
    private @Nullable Output<List<String>> archiveAllowedNetworks;

    /**
     * @return List of IP blocks
     * 
     */
    public Optional<Output<List<String>>> archiveAllowedNetworks() {
        return Optional.ofNullable(this.archiveAllowedNetworks);
    }

    /**
     * type of cluster (DEDICATED, PRO or TRIAL)
     * 
     */
    @Import(name="clusterType")
    private @Nullable Output<String> clusterType;

    /**
     * @return type of cluster (DEDICATED, PRO or TRIAL)
     * 
     */
    public Optional<Output<String>> clusterType() {
        return Optional.ofNullable(this.clusterType);
    }

    /**
     * PEM for dedicated inputs
     * 
     */
    @Import(name="dedicatedInputPem")
    private @Nullable Output<String> dedicatedInputPem;

    /**
     * @return PEM for dedicated inputs
     * 
     */
    public Optional<Output<String>> dedicatedInputPem() {
        return Optional.ofNullable(this.dedicatedInputPem);
    }

    /**
     * List of IP blocks
     * 
     */
    @Import(name="directInputAllowedNetworks")
    private @Nullable Output<List<String>> directInputAllowedNetworks;

    /**
     * @return List of IP blocks
     * 
     */
    public Optional<Output<List<String>>> directInputAllowedNetworks() {
        return Optional.ofNullable(this.directInputAllowedNetworks);
    }

    /**
     * PEM for direct inputs
     * 
     */
    @Import(name="directInputPem")
    private @Nullable Output<String> directInputPem;

    /**
     * @return PEM for direct inputs
     * 
     */
    public Optional<Output<String>> directInputPem() {
        return Optional.ofNullable(this.directInputPem);
    }

    /**
     * cluster hostname hosting tenant
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return cluster hostname hosting tenant
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * Initial allowed networks for ARCHIVE flow type
     * 
     */
    @Import(name="initialArchiveAllowedNetworks")
    private @Nullable Output<List<String>> initialArchiveAllowedNetworks;

    /**
     * @return Initial allowed networks for ARCHIVE flow type
     * 
     */
    public Optional<Output<List<String>>> initialArchiveAllowedNetworks() {
        return Optional.ofNullable(this.initialArchiveAllowedNetworks);
    }

    /**
     * Initial allowed networks for DIRECT_INPUT flow type
     * 
     */
    @Import(name="initialDirectInputAllowedNetworks")
    private @Nullable Output<List<String>> initialDirectInputAllowedNetworks;

    /**
     * @return Initial allowed networks for DIRECT_INPUT flow type
     * 
     */
    public Optional<Output<List<String>>> initialDirectInputAllowedNetworks() {
        return Optional.ofNullable(this.initialDirectInputAllowedNetworks);
    }

    /**
     * Initial allowed networks for QUERY flow type
     * 
     */
    @Import(name="initialQueryAllowedNetworks")
    private @Nullable Output<List<String>> initialQueryAllowedNetworks;

    /**
     * @return Initial allowed networks for QUERY flow type
     * 
     */
    public Optional<Output<List<String>>> initialQueryAllowedNetworks() {
        return Optional.ofNullable(this.initialQueryAllowedNetworks);
    }

    /**
     * true if all content generated by given service will be placed on this cluster
     * 
     */
    @Import(name="isDefault")
    private @Nullable Output<Boolean> isDefault;

    /**
     * @return true if all content generated by given service will be placed on this cluster
     * 
     */
    public Optional<Output<Boolean>> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }

    /**
     * true if given service can perform advanced operations on cluster
     * 
     */
    @Import(name="isUnlocked")
    private @Nullable Output<Boolean> isUnlocked;

    /**
     * @return true if given service can perform advanced operations on cluster
     * 
     */
    public Optional<Output<Boolean>> isUnlocked() {
        return Optional.ofNullable(this.isUnlocked);
    }

    /**
     * List of IP blocks
     * 
     */
    @Import(name="queryAllowedNetworks")
    private @Nullable Output<List<String>> queryAllowedNetworks;

    /**
     * @return List of IP blocks
     * 
     */
    public Optional<Output<List<String>>> queryAllowedNetworks() {
        return Optional.ofNullable(this.queryAllowedNetworks);
    }

    /**
     * datacenter localization
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return datacenter localization
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    private LogsClusterState() {}

    private LogsClusterState(LogsClusterState $) {
        this.archiveAllowedNetworks = $.archiveAllowedNetworks;
        this.clusterType = $.clusterType;
        this.dedicatedInputPem = $.dedicatedInputPem;
        this.directInputAllowedNetworks = $.directInputAllowedNetworks;
        this.directInputPem = $.directInputPem;
        this.hostname = $.hostname;
        this.initialArchiveAllowedNetworks = $.initialArchiveAllowedNetworks;
        this.initialDirectInputAllowedNetworks = $.initialDirectInputAllowedNetworks;
        this.initialQueryAllowedNetworks = $.initialQueryAllowedNetworks;
        this.isDefault = $.isDefault;
        this.isUnlocked = $.isUnlocked;
        this.queryAllowedNetworks = $.queryAllowedNetworks;
        this.region = $.region;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsClusterState $;

        public Builder() {
            $ = new LogsClusterState();
        }

        public Builder(LogsClusterState defaults) {
            $ = new LogsClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param archiveAllowedNetworks List of IP blocks
         * 
         * @return builder
         * 
         */
        public Builder archiveAllowedNetworks(@Nullable Output<List<String>> archiveAllowedNetworks) {
            $.archiveAllowedNetworks = archiveAllowedNetworks;
            return this;
        }

        /**
         * @param archiveAllowedNetworks List of IP blocks
         * 
         * @return builder
         * 
         */
        public Builder archiveAllowedNetworks(List<String> archiveAllowedNetworks) {
            return archiveAllowedNetworks(Output.of(archiveAllowedNetworks));
        }

        /**
         * @param archiveAllowedNetworks List of IP blocks
         * 
         * @return builder
         * 
         */
        public Builder archiveAllowedNetworks(String... archiveAllowedNetworks) {
            return archiveAllowedNetworks(List.of(archiveAllowedNetworks));
        }

        /**
         * @param clusterType type of cluster (DEDICATED, PRO or TRIAL)
         * 
         * @return builder
         * 
         */
        public Builder clusterType(@Nullable Output<String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        /**
         * @param clusterType type of cluster (DEDICATED, PRO or TRIAL)
         * 
         * @return builder
         * 
         */
        public Builder clusterType(String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        /**
         * @param dedicatedInputPem PEM for dedicated inputs
         * 
         * @return builder
         * 
         */
        public Builder dedicatedInputPem(@Nullable Output<String> dedicatedInputPem) {
            $.dedicatedInputPem = dedicatedInputPem;
            return this;
        }

        /**
         * @param dedicatedInputPem PEM for dedicated inputs
         * 
         * @return builder
         * 
         */
        public Builder dedicatedInputPem(String dedicatedInputPem) {
            return dedicatedInputPem(Output.of(dedicatedInputPem));
        }

        /**
         * @param directInputAllowedNetworks List of IP blocks
         * 
         * @return builder
         * 
         */
        public Builder directInputAllowedNetworks(@Nullable Output<List<String>> directInputAllowedNetworks) {
            $.directInputAllowedNetworks = directInputAllowedNetworks;
            return this;
        }

        /**
         * @param directInputAllowedNetworks List of IP blocks
         * 
         * @return builder
         * 
         */
        public Builder directInputAllowedNetworks(List<String> directInputAllowedNetworks) {
            return directInputAllowedNetworks(Output.of(directInputAllowedNetworks));
        }

        /**
         * @param directInputAllowedNetworks List of IP blocks
         * 
         * @return builder
         * 
         */
        public Builder directInputAllowedNetworks(String... directInputAllowedNetworks) {
            return directInputAllowedNetworks(List.of(directInputAllowedNetworks));
        }

        /**
         * @param directInputPem PEM for direct inputs
         * 
         * @return builder
         * 
         */
        public Builder directInputPem(@Nullable Output<String> directInputPem) {
            $.directInputPem = directInputPem;
            return this;
        }

        /**
         * @param directInputPem PEM for direct inputs
         * 
         * @return builder
         * 
         */
        public Builder directInputPem(String directInputPem) {
            return directInputPem(Output.of(directInputPem));
        }

        /**
         * @param hostname cluster hostname hosting tenant
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname cluster hostname hosting tenant
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param initialArchiveAllowedNetworks Initial allowed networks for ARCHIVE flow type
         * 
         * @return builder
         * 
         */
        public Builder initialArchiveAllowedNetworks(@Nullable Output<List<String>> initialArchiveAllowedNetworks) {
            $.initialArchiveAllowedNetworks = initialArchiveAllowedNetworks;
            return this;
        }

        /**
         * @param initialArchiveAllowedNetworks Initial allowed networks for ARCHIVE flow type
         * 
         * @return builder
         * 
         */
        public Builder initialArchiveAllowedNetworks(List<String> initialArchiveAllowedNetworks) {
            return initialArchiveAllowedNetworks(Output.of(initialArchiveAllowedNetworks));
        }

        /**
         * @param initialArchiveAllowedNetworks Initial allowed networks for ARCHIVE flow type
         * 
         * @return builder
         * 
         */
        public Builder initialArchiveAllowedNetworks(String... initialArchiveAllowedNetworks) {
            return initialArchiveAllowedNetworks(List.of(initialArchiveAllowedNetworks));
        }

        /**
         * @param initialDirectInputAllowedNetworks Initial allowed networks for DIRECT_INPUT flow type
         * 
         * @return builder
         * 
         */
        public Builder initialDirectInputAllowedNetworks(@Nullable Output<List<String>> initialDirectInputAllowedNetworks) {
            $.initialDirectInputAllowedNetworks = initialDirectInputAllowedNetworks;
            return this;
        }

        /**
         * @param initialDirectInputAllowedNetworks Initial allowed networks for DIRECT_INPUT flow type
         * 
         * @return builder
         * 
         */
        public Builder initialDirectInputAllowedNetworks(List<String> initialDirectInputAllowedNetworks) {
            return initialDirectInputAllowedNetworks(Output.of(initialDirectInputAllowedNetworks));
        }

        /**
         * @param initialDirectInputAllowedNetworks Initial allowed networks for DIRECT_INPUT flow type
         * 
         * @return builder
         * 
         */
        public Builder initialDirectInputAllowedNetworks(String... initialDirectInputAllowedNetworks) {
            return initialDirectInputAllowedNetworks(List.of(initialDirectInputAllowedNetworks));
        }

        /**
         * @param initialQueryAllowedNetworks Initial allowed networks for QUERY flow type
         * 
         * @return builder
         * 
         */
        public Builder initialQueryAllowedNetworks(@Nullable Output<List<String>> initialQueryAllowedNetworks) {
            $.initialQueryAllowedNetworks = initialQueryAllowedNetworks;
            return this;
        }

        /**
         * @param initialQueryAllowedNetworks Initial allowed networks for QUERY flow type
         * 
         * @return builder
         * 
         */
        public Builder initialQueryAllowedNetworks(List<String> initialQueryAllowedNetworks) {
            return initialQueryAllowedNetworks(Output.of(initialQueryAllowedNetworks));
        }

        /**
         * @param initialQueryAllowedNetworks Initial allowed networks for QUERY flow type
         * 
         * @return builder
         * 
         */
        public Builder initialQueryAllowedNetworks(String... initialQueryAllowedNetworks) {
            return initialQueryAllowedNetworks(List.of(initialQueryAllowedNetworks));
        }

        /**
         * @param isDefault true if all content generated by given service will be placed on this cluster
         * 
         * @return builder
         * 
         */
        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param isDefault true if all content generated by given service will be placed on this cluster
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        /**
         * @param isUnlocked true if given service can perform advanced operations on cluster
         * 
         * @return builder
         * 
         */
        public Builder isUnlocked(@Nullable Output<Boolean> isUnlocked) {
            $.isUnlocked = isUnlocked;
            return this;
        }

        /**
         * @param isUnlocked true if given service can perform advanced operations on cluster
         * 
         * @return builder
         * 
         */
        public Builder isUnlocked(Boolean isUnlocked) {
            return isUnlocked(Output.of(isUnlocked));
        }

        /**
         * @param queryAllowedNetworks List of IP blocks
         * 
         * @return builder
         * 
         */
        public Builder queryAllowedNetworks(@Nullable Output<List<String>> queryAllowedNetworks) {
            $.queryAllowedNetworks = queryAllowedNetworks;
            return this;
        }

        /**
         * @param queryAllowedNetworks List of IP blocks
         * 
         * @return builder
         * 
         */
        public Builder queryAllowedNetworks(List<String> queryAllowedNetworks) {
            return queryAllowedNetworks(Output.of(queryAllowedNetworks));
        }

        /**
         * @param queryAllowedNetworks List of IP blocks
         * 
         * @return builder
         * 
         */
        public Builder queryAllowedNetworks(String... queryAllowedNetworks) {
            return queryAllowedNetworks(List.of(queryAllowedNetworks));
        }

        /**
         * @param region datacenter localization
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region datacenter localization
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public LogsClusterState build() {
            return $;
        }
    }

}
