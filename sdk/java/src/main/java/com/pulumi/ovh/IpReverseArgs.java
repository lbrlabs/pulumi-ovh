// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class IpReverseArgs extends com.pulumi.resources.ResourceArgs {

    public static final IpReverseArgs Empty = new IpReverseArgs();

    /**
     * The IP block to which the IP belongs
     * 
     */
    @Import(name="ip", required=true)
    private Output<String> ip;

    /**
     * @return The IP block to which the IP belongs
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }

    /**
     * The IP to set the reverse of
     * 
     */
    @Import(name="ipReverse", required=true)
    private Output<String> ipReverse;

    /**
     * @return The IP to set the reverse of
     * 
     */
    public Output<String> ipReverse() {
        return this.ipReverse;
    }

    /**
     * The value of the reverse
     * 
     */
    @Import(name="reverse", required=true)
    private Output<String> reverse;

    /**
     * @return The value of the reverse
     * 
     */
    public Output<String> reverse() {
        return this.reverse;
    }

    private IpReverseArgs() {}

    private IpReverseArgs(IpReverseArgs $) {
        this.ip = $.ip;
        this.ipReverse = $.ipReverse;
        this.reverse = $.reverse;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpReverseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpReverseArgs $;

        public Builder() {
            $ = new IpReverseArgs();
        }

        public Builder(IpReverseArgs defaults) {
            $ = new IpReverseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ip The IP block to which the IP belongs
         * 
         * @return builder
         * 
         */
        public Builder ip(Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IP block to which the IP belongs
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param ipReverse The IP to set the reverse of
         * 
         * @return builder
         * 
         */
        public Builder ipReverse(Output<String> ipReverse) {
            $.ipReverse = ipReverse;
            return this;
        }

        /**
         * @param ipReverse The IP to set the reverse of
         * 
         * @return builder
         * 
         */
        public Builder ipReverse(String ipReverse) {
            return ipReverse(Output.of(ipReverse));
        }

        /**
         * @param reverse The value of the reverse
         * 
         * @return builder
         * 
         */
        public Builder reverse(Output<String> reverse) {
            $.reverse = reverse;
            return this;
        }

        /**
         * @param reverse The value of the reverse
         * 
         * @return builder
         * 
         */
        public Builder reverse(String reverse) {
            return reverse(Output.of(reverse));
        }

        public IpReverseArgs build() {
            $.ip = Objects.requireNonNull($.ip, "expected parameter 'ip' to be non-null");
            $.ipReverse = Objects.requireNonNull($.ipReverse, "expected parameter 'ipReverse' to be non-null");
            $.reverse = Objects.requireNonNull($.reverse, "expected parameter 'reverse' to be non-null");
            return $;
        }
    }

}
