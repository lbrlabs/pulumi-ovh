// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ovh.IpLoadBalancingHttpFarmArgs;
import com.pulumi.ovh.Utilities;
import com.pulumi.ovh.inputs.IpLoadBalancingHttpFarmState;
import com.pulumi.ovh.outputs.IpLoadBalancingHttpFarmProbe;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Creates a http backend server group (farm) to be used by loadbalancing frontend(s)
 * 
 * ## Example Usage
 * 
 */
@ResourceType(type="ovh:index/ipLoadBalancingHttpFarm:IpLoadBalancingHttpFarm")
public class IpLoadBalancingHttpFarm extends com.pulumi.resources.CustomResource {
    /**
     * Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)
     * 
     */
    @Export(name="balance", type=String.class, parameters={})
    private Output</* @Nullable */ String> balance;

    /**
     * @return Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)
     * 
     */
    public Output<Optional<String>> balance() {
        return Codegen.optional(this.balance);
    }
    /**
     * Readable label for loadbalancer farm
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Readable label for loadbalancer farm
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Port for backends to recieve traffic on.
     * 
     */
    @Export(name="port", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> port;

    /**
     * @return Port for backends to recieve traffic on.
     * 
     */
    public Output<Optional<Integer>> port() {
        return Codegen.optional(this.port);
    }
    /**
     * define a backend healthcheck probe
     * 
     */
    @Export(name="probe", type=IpLoadBalancingHttpFarmProbe.class, parameters={})
    private Output</* @Nullable */ IpLoadBalancingHttpFarmProbe> probe;

    /**
     * @return define a backend healthcheck probe
     * 
     */
    public Output<Optional<IpLoadBalancingHttpFarmProbe>> probe() {
        return Codegen.optional(this.probe);
    }
    /**
     * The internal name of your IP load balancing
     * 
     */
    @Export(name="serviceName", type=String.class, parameters={})
    private Output<String> serviceName;

    /**
     * @return The internal name of your IP load balancing
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Stickiness type. No stickiness if null (`sourceIp`, `cookie`)
     * 
     */
    @Export(name="stickiness", type=String.class, parameters={})
    private Output</* @Nullable */ String> stickiness;

    /**
     * @return Stickiness type. No stickiness if null (`sourceIp`, `cookie`)
     * 
     */
    public Output<Optional<String>> stickiness() {
        return Codegen.optional(this.stickiness);
    }
    /**
     * Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack
     * 
     */
    @Export(name="vrackNetworkId", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> vrackNetworkId;

    /**
     * @return Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack
     * 
     */
    public Output<Optional<Integer>> vrackNetworkId() {
        return Codegen.optional(this.vrackNetworkId);
    }
    /**
     * Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)
     * 
     */
    @Export(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    /**
     * @return Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IpLoadBalancingHttpFarm(String name) {
        this(name, IpLoadBalancingHttpFarmArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IpLoadBalancingHttpFarm(String name, IpLoadBalancingHttpFarmArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IpLoadBalancingHttpFarm(String name, IpLoadBalancingHttpFarmArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:index/ipLoadBalancingHttpFarm:IpLoadBalancingHttpFarm", name, args == null ? IpLoadBalancingHttpFarmArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IpLoadBalancingHttpFarm(String name, Output<String> id, @Nullable IpLoadBalancingHttpFarmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:index/ipLoadBalancingHttpFarm:IpLoadBalancingHttpFarm", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IpLoadBalancingHttpFarm get(String name, Output<String> id, @Nullable IpLoadBalancingHttpFarmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IpLoadBalancingHttpFarm(name, id, state, options);
    }
}
