// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.CloudProjectDatabase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.ovh.CloudProjectDatabase.outputs.GetCapabilitiesEngine;
import com.pulumi.ovh.CloudProjectDatabase.outputs.GetCapabilitiesFlavor;
import com.pulumi.ovh.CloudProjectDatabase.outputs.GetCapabilitiesOption;
import com.pulumi.ovh.CloudProjectDatabase.outputs.GetCapabilitiesPlan;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCapabilitiesResult {
    /**
     * @return Database engines available.
     * 
     */
    private List<GetCapabilitiesEngine> engines;
    /**
     * @return Flavors available.
     * 
     */
    private List<GetCapabilitiesFlavor> flavors;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Options available.
     * 
     */
    private List<GetCapabilitiesOption> options;
    /**
     * @return Plans available.
     * 
     */
    private List<GetCapabilitiesPlan> plans;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String serviceName;

    private GetCapabilitiesResult() {}
    /**
     * @return Database engines available.
     * 
     */
    public List<GetCapabilitiesEngine> engines() {
        return this.engines;
    }
    /**
     * @return Flavors available.
     * 
     */
    public List<GetCapabilitiesFlavor> flavors() {
        return this.flavors;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Options available.
     * 
     */
    public List<GetCapabilitiesOption> options() {
        return this.options;
    }
    /**
     * @return Plans available.
     * 
     */
    public List<GetCapabilitiesPlan> plans() {
        return this.plans;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCapabilitiesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCapabilitiesEngine> engines;
        private List<GetCapabilitiesFlavor> flavors;
        private String id;
        private List<GetCapabilitiesOption> options;
        private List<GetCapabilitiesPlan> plans;
        private String serviceName;
        public Builder() {}
        public Builder(GetCapabilitiesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.engines = defaults.engines;
    	      this.flavors = defaults.flavors;
    	      this.id = defaults.id;
    	      this.options = defaults.options;
    	      this.plans = defaults.plans;
    	      this.serviceName = defaults.serviceName;
        }

        @CustomType.Setter
        public Builder engines(List<GetCapabilitiesEngine> engines) {
            this.engines = Objects.requireNonNull(engines);
            return this;
        }
        public Builder engines(GetCapabilitiesEngine... engines) {
            return engines(List.of(engines));
        }
        @CustomType.Setter
        public Builder flavors(List<GetCapabilitiesFlavor> flavors) {
            this.flavors = Objects.requireNonNull(flavors);
            return this;
        }
        public Builder flavors(GetCapabilitiesFlavor... flavors) {
            return flavors(List.of(flavors));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder options(List<GetCapabilitiesOption> options) {
            this.options = Objects.requireNonNull(options);
            return this;
        }
        public Builder options(GetCapabilitiesOption... options) {
            return options(List.of(options));
        }
        @CustomType.Setter
        public Builder plans(List<GetCapabilitiesPlan> plans) {
            this.plans = Objects.requireNonNull(plans);
            return this;
        }
        public Builder plans(GetCapabilitiesPlan... plans) {
            return plans(List.of(plans));
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public GetCapabilitiesResult build() {
            final var o = new GetCapabilitiesResult();
            o.engines = engines;
            o.flavors = flavors;
            o.id = id;
            o.options = options;
            o.plans = plans;
            o.serviceName = serviceName;
            return o;
        }
    }
}
