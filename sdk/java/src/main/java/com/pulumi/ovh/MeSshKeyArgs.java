// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MeSshKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final MeSshKeyArgs Empty = new MeSshKeyArgs();

    /**
     * True when this public SSH key is used for rescue mode and reinstallations.
     * 
     */
    @Import(name="default")
    private @Nullable Output<Boolean> default_;

    /**
     * @return True when this public SSH key is used for rescue mode and reinstallations.
     * 
     */
    public Optional<Output<Boolean>> default_() {
        return Optional.ofNullable(this.default_);
    }

    /**
     * The content of the public key in the form &#34;ssh-algo content&#34;, e.g. &#34;ssh-ed25519 AAAAC3...&#34;.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return The content of the public key in the form &#34;ssh-algo content&#34;, e.g. &#34;ssh-ed25519 AAAAC3...&#34;.
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * The friendly name of this SSH key.
     * 
     */
    @Import(name="keyName", required=true)
    private Output<String> keyName;

    /**
     * @return The friendly name of this SSH key.
     * 
     */
    public Output<String> keyName() {
        return this.keyName;
    }

    private MeSshKeyArgs() {}

    private MeSshKeyArgs(MeSshKeyArgs $) {
        this.default_ = $.default_;
        this.key = $.key;
        this.keyName = $.keyName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MeSshKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MeSshKeyArgs $;

        public Builder() {
            $ = new MeSshKeyArgs();
        }

        public Builder(MeSshKeyArgs defaults) {
            $ = new MeSshKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param default_ True when this public SSH key is used for rescue mode and reinstallations.
         * 
         * @return builder
         * 
         */
        public Builder default_(@Nullable Output<Boolean> default_) {
            $.default_ = default_;
            return this;
        }

        /**
         * @param default_ True when this public SSH key is used for rescue mode and reinstallations.
         * 
         * @return builder
         * 
         */
        public Builder default_(Boolean default_) {
            return default_(Output.of(default_));
        }

        /**
         * @param key The content of the public key in the form &#34;ssh-algo content&#34;, e.g. &#34;ssh-ed25519 AAAAC3...&#34;.
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The content of the public key in the form &#34;ssh-algo content&#34;, e.g. &#34;ssh-ed25519 AAAAC3...&#34;.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param keyName The friendly name of this SSH key.
         * 
         * @return builder
         * 
         */
        public Builder keyName(Output<String> keyName) {
            $.keyName = keyName;
            return this;
        }

        /**
         * @param keyName The friendly name of this SSH key.
         * 
         * @return builder
         * 
         */
        public Builder keyName(String keyName) {
            return keyName(Output.of(keyName));
        }

        public MeSshKeyArgs build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.keyName = Objects.requireNonNull($.keyName, "expected parameter 'keyName' to be non-null");
            return $;
        }
    }

}
