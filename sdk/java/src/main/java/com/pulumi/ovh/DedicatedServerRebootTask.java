// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ovh.DedicatedServerRebootTaskArgs;
import com.pulumi.ovh.Utilities;
import com.pulumi.ovh.inputs.DedicatedServerRebootTaskState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="ovh:index/dedicatedServerRebootTask:DedicatedServerRebootTask")
public class DedicatedServerRebootTask extends com.pulumi.resources.CustomResource {
    /**
     * Details of this task. (should be `Reboot asked`)
     * 
     */
    @Export(name="comment", type=String.class, parameters={})
    private Output<String> comment;

    /**
     * @return Details of this task. (should be `Reboot asked`)
     * 
     */
    public Output<String> comment() {
        return this.comment;
    }
    /**
     * Completion date in RFC3339 format.
     * 
     */
    @Export(name="doneDate", type=String.class, parameters={})
    private Output<String> doneDate;

    /**
     * @return Completion date in RFC3339 format.
     * 
     */
    public Output<String> doneDate() {
        return this.doneDate;
    }
    /**
     * Function name (should be `hardReboot`).
     * 
     */
    @Export(name="function", type=String.class, parameters={})
    private Output<String> function;

    /**
     * @return Function name (should be `hardReboot`).
     * 
     */
    public Output<String> function() {
        return this.function;
    }
    /**
     * List of values traccked to trigger reboot, used also to form implicit dependencies
     * 
     */
    @Export(name="keepers", type=List.class, parameters={String.class})
    private Output<List<String>> keepers;

    /**
     * @return List of values traccked to trigger reboot, used also to form implicit dependencies
     * 
     */
    public Output<List<String>> keepers() {
        return this.keepers;
    }
    /**
     * Last update in RFC3339 format.
     * 
     */
    @Export(name="lastUpdate", type=String.class, parameters={})
    private Output<String> lastUpdate;

    /**
     * @return Last update in RFC3339 format.
     * 
     */
    public Output<String> lastUpdate() {
        return this.lastUpdate;
    }
    /**
     * The service_name of your dedicated server.
     * 
     */
    @Export(name="serviceName", type=String.class, parameters={})
    private Output<String> serviceName;

    /**
     * @return The service_name of your dedicated server.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Task creation date in RFC3339 format.
     * 
     */
    @Export(name="startDate", type=String.class, parameters={})
    private Output<String> startDate;

    /**
     * @return Task creation date in RFC3339 format.
     * 
     */
    public Output<String> startDate() {
        return this.startDate;
    }
    /**
     * Task status (should be `done`)
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Task status (should be `done`)
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DedicatedServerRebootTask(String name) {
        this(name, DedicatedServerRebootTaskArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DedicatedServerRebootTask(String name, DedicatedServerRebootTaskArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DedicatedServerRebootTask(String name, DedicatedServerRebootTaskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:index/dedicatedServerRebootTask:DedicatedServerRebootTask", name, args == null ? DedicatedServerRebootTaskArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DedicatedServerRebootTask(String name, Output<String> id, @Nullable DedicatedServerRebootTaskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:index/dedicatedServerRebootTask:DedicatedServerRebootTask", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DedicatedServerRebootTask get(String name, Output<String> id, @Nullable DedicatedServerRebootTaskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DedicatedServerRebootTask(name, id, state, options);
    }
}
