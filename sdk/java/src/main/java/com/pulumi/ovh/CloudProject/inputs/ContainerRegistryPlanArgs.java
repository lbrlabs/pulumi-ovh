// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.CloudProject.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ovh.CloudProject.inputs.ContainerRegistryPlanFeatureArgs;
import com.pulumi.ovh.CloudProject.inputs.ContainerRegistryPlanRegistryLimitArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerRegistryPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerRegistryPlanArgs Empty = new ContainerRegistryPlanArgs();

    /**
     * Plan code from the catalog
     * 
     */
    @Import(name="code")
    private @Nullable Output<String> code;

    /**
     * @return Plan code from the catalog
     * 
     */
    public Optional<Output<String>> code() {
        return Optional.ofNullable(this.code);
    }

    /**
     * Plan creation date
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Plan creation date
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Features of the plan
     * 
     */
    @Import(name="features")
    private @Nullable Output<List<ContainerRegistryPlanFeatureArgs>> features;

    /**
     * @return Features of the plan
     * 
     */
    public Optional<Output<List<ContainerRegistryPlanFeatureArgs>>> features() {
        return Optional.ofNullable(this.features);
    }

    /**
     * Plan ID
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Plan ID
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Registry name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Registry name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Container registry limits
     * 
     */
    @Import(name="registryLimits")
    private @Nullable Output<List<ContainerRegistryPlanRegistryLimitArgs>> registryLimits;

    /**
     * @return Container registry limits
     * 
     */
    public Optional<Output<List<ContainerRegistryPlanRegistryLimitArgs>>> registryLimits() {
        return Optional.ofNullable(this.registryLimits);
    }

    /**
     * Registry last update date
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Registry last update date
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private ContainerRegistryPlanArgs() {}

    private ContainerRegistryPlanArgs(ContainerRegistryPlanArgs $) {
        this.code = $.code;
        this.createdAt = $.createdAt;
        this.features = $.features;
        this.id = $.id;
        this.name = $.name;
        this.registryLimits = $.registryLimits;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerRegistryPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerRegistryPlanArgs $;

        public Builder() {
            $ = new ContainerRegistryPlanArgs();
        }

        public Builder(ContainerRegistryPlanArgs defaults) {
            $ = new ContainerRegistryPlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param code Plan code from the catalog
         * 
         * @return builder
         * 
         */
        public Builder code(@Nullable Output<String> code) {
            $.code = code;
            return this;
        }

        /**
         * @param code Plan code from the catalog
         * 
         * @return builder
         * 
         */
        public Builder code(String code) {
            return code(Output.of(code));
        }

        /**
         * @param createdAt Plan creation date
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Plan creation date
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param features Features of the plan
         * 
         * @return builder
         * 
         */
        public Builder features(@Nullable Output<List<ContainerRegistryPlanFeatureArgs>> features) {
            $.features = features;
            return this;
        }

        /**
         * @param features Features of the plan
         * 
         * @return builder
         * 
         */
        public Builder features(List<ContainerRegistryPlanFeatureArgs> features) {
            return features(Output.of(features));
        }

        /**
         * @param features Features of the plan
         * 
         * @return builder
         * 
         */
        public Builder features(ContainerRegistryPlanFeatureArgs... features) {
            return features(List.of(features));
        }

        /**
         * @param id Plan ID
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Plan ID
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name Registry name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Registry name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param registryLimits Container registry limits
         * 
         * @return builder
         * 
         */
        public Builder registryLimits(@Nullable Output<List<ContainerRegistryPlanRegistryLimitArgs>> registryLimits) {
            $.registryLimits = registryLimits;
            return this;
        }

        /**
         * @param registryLimits Container registry limits
         * 
         * @return builder
         * 
         */
        public Builder registryLimits(List<ContainerRegistryPlanRegistryLimitArgs> registryLimits) {
            return registryLimits(Output.of(registryLimits));
        }

        /**
         * @param registryLimits Container registry limits
         * 
         * @return builder
         * 
         */
        public Builder registryLimits(ContainerRegistryPlanRegistryLimitArgs... registryLimits) {
            return registryLimits(List.of(registryLimits));
        }

        /**
         * @param updatedAt Registry last update date
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Registry last update date
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public ContainerRegistryPlanArgs build() {
            return $;
        }
    }

}
