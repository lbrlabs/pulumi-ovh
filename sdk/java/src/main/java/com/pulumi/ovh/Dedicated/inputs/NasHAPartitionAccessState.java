// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.Dedicated.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NasHAPartitionAccessState extends com.pulumi.resources.ResourceArgs {

    public static final NasHAPartitionAccessState Empty = new NasHAPartitionAccessState();

    /**
     * ip block in x.x.x.x/x format
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return ip block in x.x.x.x/x format
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * name of the partition
     * 
     */
    @Import(name="partitionName")
    private @Nullable Output<String> partitionName;

    /**
     * @return name of the partition
     * 
     */
    public Optional<Output<String>> partitionName() {
        return Optional.ofNullable(this.partitionName);
    }

    /**
     * The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * one of &#34;readwrite&#34;, &#34;readonly&#34;
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return one of &#34;readwrite&#34;, &#34;readonly&#34;
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private NasHAPartitionAccessState() {}

    private NasHAPartitionAccessState(NasHAPartitionAccessState $) {
        this.ip = $.ip;
        this.partitionName = $.partitionName;
        this.serviceName = $.serviceName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NasHAPartitionAccessState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NasHAPartitionAccessState $;

        public Builder() {
            $ = new NasHAPartitionAccessState();
        }

        public Builder(NasHAPartitionAccessState defaults) {
            $ = new NasHAPartitionAccessState(Objects.requireNonNull(defaults));
        }

        /**
         * @param ip ip block in x.x.x.x/x format
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip ip block in x.x.x.x/x format
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param partitionName name of the partition
         * 
         * @return builder
         * 
         */
        public Builder partitionName(@Nullable Output<String> partitionName) {
            $.partitionName = partitionName;
            return this;
        }

        /**
         * @param partitionName name of the partition
         * 
         * @return builder
         * 
         */
        public Builder partitionName(String partitionName) {
            return partitionName(Output.of(partitionName));
        }

        /**
         * @param serviceName The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param type one of &#34;readwrite&#34;, &#34;readonly&#34;
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type one of &#34;readwrite&#34;, &#34;readonly&#34;
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public NasHAPartitionAccessState build() {
            return $;
        }
    }

}
