// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ovh.CloudProjectDatabaseUserArgs;
import com.pulumi.ovh.Utilities;
import com.pulumi.ovh.inputs.CloudProjectDatabaseUserState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates an user for a database cluster associated with a public cloud project.
 * 
 * With this resource you can create a user for the following database engine:
 * 
 *   * `cassandra`
 *   * `kafka`
 *   * `kafkaConnect`
 *   * `mysql`
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.OvhFunctions;
 * import com.pulumi.ovh.inputs.GetCloudProjectDatabaseArgs;
 * import com.pulumi.ovh.CloudProjectDatabaseUser;
 * import com.pulumi.ovh.CloudProjectDatabaseUserArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var db = OvhFunctions.getCloudProjectDatabase(GetCloudProjectDatabaseArgs.builder()
 *             .serviceName(&#34;XXXX&#34;)
 *             .engine(&#34;YYYY&#34;)
 *             .clusterId(&#34;ZZZZ&#34;)
 *             .build());
 * 
 *         var user = new CloudProjectDatabaseUser(&#34;user&#34;, CloudProjectDatabaseUserArgs.builder()        
 *             .serviceName(ovh_cloud_project_database.db().service_name())
 *             .engine(ovh_cloud_project_database.db().engine())
 *             .clusterId(ovh_cloud_project_database.db().id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * OVHcloud Managed database clusters users can be imported using the `service_name`, `engine`, `cluster_id` and `id` of the user, separated by &#34;/&#34; E.g.,
 * 
 * ```sh
 *  $ pulumi import ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser my_user &lt;service_name&gt;/&lt;engine&gt;/&lt;cluster_id&gt;/&lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser")
public class CloudProjectDatabaseUser extends com.pulumi.resources.CustomResource {
    /**
     * Cluster ID.
     * 
     */
    @Export(name="clusterId", type=String.class, parameters={})
    private Output<String> clusterId;

    /**
     * @return Cluster ID.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * Date of the creation of the user.
     * 
     */
    @Export(name="createdAt", type=String.class, parameters={})
    private Output<String> createdAt;

    /**
     * @return Date of the creation of the user.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * The engine of the database cluster you want to add. To get a full list of available engine visit :
     * [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\
     * Available engines for this resource (other have specific resource):
     * * `cassandra`
     * * `kafka`
     * * `kafkaConnect`
     * * `mysql`
     * 
     */
    @Export(name="engine", type=String.class, parameters={})
    private Output<String> engine;

    /**
     * @return The engine of the database cluster you want to add. To get a full list of available engine visit :
     * [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\
     * Available engines for this resource (other have specific resource):
     * * `cassandra`
     * * `kafka`
     * * `kafkaConnect`
     * * `mysql`
     * 
     */
    public Output<String> engine() {
        return this.engine;
    }
    /**
     * Name of the user.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the user.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Password of the user.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output<String> password;

    /**
     * @return Password of the user.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * The id of the public cloud project. If omitted,
     * the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    @Export(name="serviceName", type=String.class, parameters={})
    private Output<String> serviceName;

    /**
     * @return The id of the public cloud project. If omitted,
     * the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Current status of the user.
     * 
     */
    @Export(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Current status of the user.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CloudProjectDatabaseUser(String name) {
        this(name, CloudProjectDatabaseUserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CloudProjectDatabaseUser(String name, CloudProjectDatabaseUserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CloudProjectDatabaseUser(String name, CloudProjectDatabaseUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser", name, args == null ? CloudProjectDatabaseUserArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CloudProjectDatabaseUser(String name, Output<String> id, @Nullable CloudProjectDatabaseUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CloudProjectDatabaseUser get(String name, Output<String> id, @Nullable CloudProjectDatabaseUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CloudProjectDatabaseUser(name, id, state, options);
    }
}
