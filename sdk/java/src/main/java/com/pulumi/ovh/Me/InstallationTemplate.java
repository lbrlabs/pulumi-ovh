// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.Me;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.ovh.Me.InstallationTemplateArgs;
import com.pulumi.ovh.Me.inputs.InstallationTemplateState;
import com.pulumi.ovh.Me.outputs.InstallationTemplateCustomization;
import com.pulumi.ovh.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Use this resource to create a custom installation template available for dedicated servers.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.Me.InstallationTemplate;
 * import com.pulumi.ovh.Me.InstallationTemplateArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var mytemplate = new InstallationTemplate(&#34;mytemplate&#34;, InstallationTemplateArgs.builder()        
 *             .baseTemplateName(&#34;centos7_64&#34;)
 *             .defaultLanguage(&#34;en&#34;)
 *             .templateName(&#34;mytemplate&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Custom installation template available for dedicated servers can be imported using the `base_template_name`, `template_name` of the cluster, separated by &#34;/&#34; E.g., bash
 * 
 * ```sh
 *  $ pulumi import ovh:Me/installationTemplate:InstallationTemplate mytemplate base_template_name/template_name
 * ```
 * 
 */
@ResourceType(type="ovh:Me/installationTemplate:InstallationTemplate")
public class InstallationTemplate extends com.pulumi.resources.CustomResource {
    /**
     * List of all language available for this template
     * 
     */
    @Export(name="availableLanguages", type=List.class, parameters={String.class})
    private Output<List<String>> availableLanguages;

    /**
     * @return List of all language available for this template
     * 
     */
    public Output<List<String>> availableLanguages() {
        return this.availableLanguages;
    }
    /**
     * OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
     * 
     */
    @Export(name="baseTemplateName", type=String.class, parameters={})
    private Output<String> baseTemplateName;

    /**
     * @return OVH template name yours will be based on, choose one among the list given by compatibleTemplates function
     * 
     */
    public Output<String> baseTemplateName() {
        return this.baseTemplateName;
    }
    /**
     * This distribution is new and, although tested and functional, may still display odd behaviour
     * 
     */
    @Export(name="beta", type=Boolean.class, parameters={})
    private Output<Boolean> beta;

    /**
     * @return This distribution is new and, although tested and functional, may still display odd behaviour
     * 
     */
    public Output<Boolean> beta() {
        return this.beta;
    }
    /**
     * This template bit format (32 or 64)
     * 
     */
    @Export(name="bitFormat", type=Integer.class, parameters={})
    private Output<Integer> bitFormat;

    /**
     * @return This template bit format (32 or 64)
     * 
     */
    public Output<Integer> bitFormat() {
        return this.bitFormat;
    }
    /**
     * Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)
     * 
     */
    @Export(name="category", type=String.class, parameters={})
    private Output<String> category;

    /**
     * @return Category of this template (informative only). (basic, customer, hosting, other, readyToUse, virtualisation)
     * 
     */
    public Output<String> category() {
        return this.category;
    }
    @Export(name="customization", type=InstallationTemplateCustomization.class, parameters={})
    private Output</* @Nullable */ InstallationTemplateCustomization> customization;

    public Output<Optional<InstallationTemplateCustomization>> customization() {
        return Codegen.optional(this.customization);
    }
    /**
     * The default language of this template
     * 
     */
    @Export(name="defaultLanguage", type=String.class, parameters={})
    private Output<String> defaultLanguage;

    /**
     * @return The default language of this template
     * 
     */
    public Output<String> defaultLanguage() {
        return this.defaultLanguage;
    }
    /**
     * is this distribution deprecated
     * 
     */
    @Export(name="deprecated", type=Boolean.class, parameters={})
    private Output<Boolean> deprecated;

    /**
     * @return is this distribution deprecated
     * 
     */
    public Output<Boolean> deprecated() {
        return this.deprecated;
    }
    /**
     * information about this template
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return information about this template
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * the distribution this template is based on
     * 
     */
    @Export(name="distribution", type=String.class, parameters={})
    private Output<String> distribution;

    /**
     * @return the distribution this template is based on
     * 
     */
    public Output<String> distribution() {
        return this.distribution;
    }
    /**
     * this template family type (bsd,linux,solaris,windows)
     * 
     */
    @Export(name="family", type=String.class, parameters={})
    private Output<String> family;

    /**
     * @return this template family type (bsd,linux,solaris,windows)
     * 
     */
    public Output<String> family() {
        return this.family;
    }
    /**
     * Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)
     * 
     */
    @Export(name="filesystems", type=List.class, parameters={String.class})
    private Output<List<String>> filesystems;

    /**
     * @return Filesystems available (btrfs,ext3,ext4,ntfs,reiserfs,swap,ufs,xfs,zfs)
     * 
     */
    public Output<List<String>> filesystems() {
        return this.filesystems;
    }
    /**
     * This distribution supports hardware raid configuration through the OVH API
     * 
     */
    @Export(name="hardRaidConfiguration", type=Boolean.class, parameters={})
    private Output<Boolean> hardRaidConfiguration;

    /**
     * @return This distribution supports hardware raid configuration through the OVH API
     * 
     */
    public Output<Boolean> hardRaidConfiguration() {
        return this.hardRaidConfiguration;
    }
    /**
     * Date of last modification of the base image
     * 
     */
    @Export(name="lastModification", type=String.class, parameters={})
    private Output<String> lastModification;

    /**
     * @return Date of last modification of the base image
     * 
     */
    public Output<String> lastModification() {
        return this.lastModification;
    }
    /**
     * This distribution supports Logical Volumes (Linux LVM)
     * 
     */
    @Export(name="lvmReady", type=Boolean.class, parameters={})
    private Output<Boolean> lvmReady;

    /**
     * @return This distribution supports Logical Volumes (Linux LVM)
     * 
     */
    public Output<Boolean> lvmReady() {
        return this.lvmReady;
    }
    /**
     * Remove default partition schemes at creation
     * 
     */
    @Export(name="removeDefaultPartitionSchemes", type=Boolean.class, parameters={})
    private Output<Boolean> removeDefaultPartitionSchemes;

    /**
     * @return Remove default partition schemes at creation
     * 
     */
    public Output<Boolean> removeDefaultPartitionSchemes() {
        return this.removeDefaultPartitionSchemes;
    }
    /**
     * This distribution supports installation using the distribution&#39;s native kernel instead of the recommended OVH kernel
     * 
     */
    @Export(name="supportsDistributionKernel", type=Boolean.class, parameters={})
    private Output<Boolean> supportsDistributionKernel;

    /**
     * @return This distribution supports installation using the distribution&#39;s native kernel instead of the recommended OVH kernel
     * 
     */
    public Output<Boolean> supportsDistributionKernel() {
        return this.supportsDistributionKernel;
    }
    /**
     * This distribution supports RTM software
     * 
     */
    @Export(name="supportsRtm", type=Boolean.class, parameters={})
    private Output<Boolean> supportsRtm;

    /**
     * @return This distribution supports RTM software
     * 
     */
    public Output<Boolean> supportsRtm() {
        return this.supportsRtm;
    }
    /**
     * This distribution supports the microsoft SQL server
     * 
     */
    @Export(name="supportsSqlServer", type=Boolean.class, parameters={})
    private Output<Boolean> supportsSqlServer;

    /**
     * @return This distribution supports the microsoft SQL server
     * 
     */
    public Output<Boolean> supportsSqlServer() {
        return this.supportsSqlServer;
    }
    /**
     * This template name
     * 
     */
    @Export(name="templateName", type=String.class, parameters={})
    private Output<String> templateName;

    /**
     * @return This template name
     * 
     */
    public Output<String> templateName() {
        return this.templateName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstallationTemplate(String name) {
        this(name, InstallationTemplateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstallationTemplate(String name, InstallationTemplateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstallationTemplate(String name, InstallationTemplateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:Me/installationTemplate:InstallationTemplate", name, args == null ? InstallationTemplateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InstallationTemplate(String name, Output<String> id, @Nullable InstallationTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:Me/installationTemplate:InstallationTemplate", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstallationTemplate get(String name, Output<String> id, @Nullable InstallationTemplateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstallationTemplate(name, id, state, options);
    }
}
