// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpReverseState extends com.pulumi.resources.ResourceArgs {

    public static final IpReverseState Empty = new IpReverseState();

    /**
     * The IP block to which the IP belongs
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return The IP block to which the IP belongs
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * The IP to set the reverse of
     * 
     */
    @Import(name="ipReverse")
    private @Nullable Output<String> ipReverse;

    /**
     * @return The IP to set the reverse of
     * 
     */
    public Optional<Output<String>> ipReverse() {
        return Optional.ofNullable(this.ipReverse);
    }

    /**
     * The value of the reverse
     * 
     */
    @Import(name="reverse")
    private @Nullable Output<String> reverse;

    /**
     * @return The value of the reverse
     * 
     */
    public Optional<Output<String>> reverse() {
        return Optional.ofNullable(this.reverse);
    }

    private IpReverseState() {}

    private IpReverseState(IpReverseState $) {
        this.ip = $.ip;
        this.ipReverse = $.ipReverse;
        this.reverse = $.reverse;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpReverseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpReverseState $;

        public Builder() {
            $ = new IpReverseState();
        }

        public Builder(IpReverseState defaults) {
            $ = new IpReverseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param ip The IP block to which the IP belongs
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IP block to which the IP belongs
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param ipReverse The IP to set the reverse of
         * 
         * @return builder
         * 
         */
        public Builder ipReverse(@Nullable Output<String> ipReverse) {
            $.ipReverse = ipReverse;
            return this;
        }

        /**
         * @param ipReverse The IP to set the reverse of
         * 
         * @return builder
         * 
         */
        public Builder ipReverse(String ipReverse) {
            return ipReverse(Output.of(ipReverse));
        }

        /**
         * @param reverse The value of the reverse
         * 
         * @return builder
         * 
         */
        public Builder reverse(@Nullable Output<String> reverse) {
            $.reverse = reverse;
            return this;
        }

        /**
         * @param reverse The value of the reverse
         * 
         * @return builder
         * 
         */
        public Builder reverse(String reverse) {
            return reverse(Output.of(reverse));
        }

        public IpReverseState build() {
            return $;
        }
    }

}
