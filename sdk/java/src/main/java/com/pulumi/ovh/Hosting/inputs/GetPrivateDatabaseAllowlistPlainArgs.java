// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.Hosting.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPrivateDatabaseAllowlistPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPrivateDatabaseAllowlistPlainArgs Empty = new GetPrivateDatabaseAllowlistPlainArgs();

    /**
     * The whitelisted IP in your instance
     * 
     */
    @Import(name="ip")
    private @Nullable String ip;

    /**
     * @return The whitelisted IP in your instance
     * 
     */
    public Optional<String> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * The internal name of your private database
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    /**
     * @return The internal name of your private database
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    private GetPrivateDatabaseAllowlistPlainArgs() {}

    private GetPrivateDatabaseAllowlistPlainArgs(GetPrivateDatabaseAllowlistPlainArgs $) {
        this.ip = $.ip;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPrivateDatabaseAllowlistPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPrivateDatabaseAllowlistPlainArgs $;

        public Builder() {
            $ = new GetPrivateDatabaseAllowlistPlainArgs();
        }

        public Builder(GetPrivateDatabaseAllowlistPlainArgs defaults) {
            $ = new GetPrivateDatabaseAllowlistPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ip The whitelisted IP in your instance
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable String ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param serviceName The internal name of your private database
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public GetPrivateDatabaseAllowlistPlainArgs build() {
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
