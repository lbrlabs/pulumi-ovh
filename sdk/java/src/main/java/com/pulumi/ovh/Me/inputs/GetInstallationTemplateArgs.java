// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.Me.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetInstallationTemplateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstallationTemplateArgs Empty = new GetInstallationTemplateArgs();

    /**
     * This template name
     * 
     */
    @Import(name="templateName", required=true)
    private Output<String> templateName;

    /**
     * @return This template name
     * 
     */
    public Output<String> templateName() {
        return this.templateName;
    }

    private GetInstallationTemplateArgs() {}

    private GetInstallationTemplateArgs(GetInstallationTemplateArgs $) {
        this.templateName = $.templateName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstallationTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstallationTemplateArgs $;

        public Builder() {
            $ = new GetInstallationTemplateArgs();
        }

        public Builder(GetInstallationTemplateArgs defaults) {
            $ = new GetInstallationTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param templateName This template name
         * 
         * @return builder
         * 
         */
        public Builder templateName(Output<String> templateName) {
            $.templateName = templateName;
            return this;
        }

        /**
         * @param templateName This template name
         * 
         * @return builder
         * 
         */
        public Builder templateName(String templateName) {
            return templateName(Output.of(templateName));
        }

        public GetInstallationTemplateArgs build() {
            $.templateName = Objects.requireNonNull($.templateName, "expected parameter 'templateName' to be non-null");
            return $;
        }
    }

}
