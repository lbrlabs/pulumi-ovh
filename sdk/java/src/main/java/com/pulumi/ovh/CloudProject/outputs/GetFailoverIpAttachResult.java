// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.CloudProject.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFailoverIpAttachResult {
    /**
     * @return The IP block
     * 
     */
    private String block;
    private String continentCode;
    private String geoLoc;
    /**
     * @return The Ip id
     * 
     */
    private String id;
    /**
     * @return The Ip Address
     * 
     */
    private String ip;
    /**
     * @return Current operation progress in percent
     * 
     */
    private Integer progress;
    private String routedTo;
    private String serviceName;
    /**
     * @return Ip status, can be `ok` or `operationPending`
     * 
     */
    private String status;
    private String subType;

    private GetFailoverIpAttachResult() {}
    /**
     * @return The IP block
     * 
     */
    public String block() {
        return this.block;
    }
    public String continentCode() {
        return this.continentCode;
    }
    public String geoLoc() {
        return this.geoLoc;
    }
    /**
     * @return The Ip id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Ip Address
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return Current operation progress in percent
     * 
     */
    public Integer progress() {
        return this.progress;
    }
    public String routedTo() {
        return this.routedTo;
    }
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Ip status, can be `ok` or `operationPending`
     * 
     */
    public String status() {
        return this.status;
    }
    public String subType() {
        return this.subType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFailoverIpAttachResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String block;
        private String continentCode;
        private String geoLoc;
        private String id;
        private String ip;
        private Integer progress;
        private String routedTo;
        private String serviceName;
        private String status;
        private String subType;
        public Builder() {}
        public Builder(GetFailoverIpAttachResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.block = defaults.block;
    	      this.continentCode = defaults.continentCode;
    	      this.geoLoc = defaults.geoLoc;
    	      this.id = defaults.id;
    	      this.ip = defaults.ip;
    	      this.progress = defaults.progress;
    	      this.routedTo = defaults.routedTo;
    	      this.serviceName = defaults.serviceName;
    	      this.status = defaults.status;
    	      this.subType = defaults.subType;
        }

        @CustomType.Setter
        public Builder block(String block) {
            this.block = Objects.requireNonNull(block);
            return this;
        }
        @CustomType.Setter
        public Builder continentCode(String continentCode) {
            this.continentCode = Objects.requireNonNull(continentCode);
            return this;
        }
        @CustomType.Setter
        public Builder geoLoc(String geoLoc) {
            this.geoLoc = Objects.requireNonNull(geoLoc);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            this.ip = Objects.requireNonNull(ip);
            return this;
        }
        @CustomType.Setter
        public Builder progress(Integer progress) {
            this.progress = Objects.requireNonNull(progress);
            return this;
        }
        @CustomType.Setter
        public Builder routedTo(String routedTo) {
            this.routedTo = Objects.requireNonNull(routedTo);
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder subType(String subType) {
            this.subType = Objects.requireNonNull(subType);
            return this;
        }
        public GetFailoverIpAttachResult build() {
            final var o = new GetFailoverIpAttachResult();
            o.block = block;
            o.continentCode = continentCode;
            o.geoLoc = geoLoc;
            o.id = id;
            o.ip = ip;
            o.progress = progress;
            o.routedTo = routedTo;
            o.serviceName = serviceName;
            o.status = status;
            o.subType = subType;
            return o;
        }
    }
}
