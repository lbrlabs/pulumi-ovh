// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.Dbaas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMeIdentityGroupResult {
    /**
     * @return Creation date of this group.
     * 
     */
    private String creation;
    /**
     * @return Is the group a default and immutable one.
     * 
     */
    private Boolean defaultGroup;
    /**
     * @return Group description.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Date of the last update of this group.
     * 
     */
    private String lastUpdate;
    private String name;
    /**
     * @return Role associated with the group. Valid roles are ADMIN, REGULAR, UNPRIVILEGED, and NONE.
     * 
     */
    private String role;

    private GetMeIdentityGroupResult() {}
    /**
     * @return Creation date of this group.
     * 
     */
    public String creation() {
        return this.creation;
    }
    /**
     * @return Is the group a default and immutable one.
     * 
     */
    public Boolean defaultGroup() {
        return this.defaultGroup;
    }
    /**
     * @return Group description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Date of the last update of this group.
     * 
     */
    public String lastUpdate() {
        return this.lastUpdate;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Role associated with the group. Valid roles are ADMIN, REGULAR, UNPRIVILEGED, and NONE.
     * 
     */
    public String role() {
        return this.role;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMeIdentityGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creation;
        private Boolean defaultGroup;
        private String description;
        private String id;
        private String lastUpdate;
        private String name;
        private String role;
        public Builder() {}
        public Builder(GetMeIdentityGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creation = defaults.creation;
    	      this.defaultGroup = defaults.defaultGroup;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.lastUpdate = defaults.lastUpdate;
    	      this.name = defaults.name;
    	      this.role = defaults.role;
        }

        @CustomType.Setter
        public Builder creation(String creation) {
            this.creation = Objects.requireNonNull(creation);
            return this;
        }
        @CustomType.Setter
        public Builder defaultGroup(Boolean defaultGroup) {
            this.defaultGroup = Objects.requireNonNull(defaultGroup);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdate(String lastUpdate) {
            this.lastUpdate = Objects.requireNonNull(lastUpdate);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder role(String role) {
            this.role = Objects.requireNonNull(role);
            return this;
        }
        public GetMeIdentityGroupResult build() {
            final var o = new GetMeIdentityGroupResult();
            o.creation = creation;
            o.defaultGroup = defaultGroup;
            o.description = description;
            o.id = id;
            o.lastUpdate = lastUpdate;
            o.name = name;
            o.role = role;
            return o;
        }
    }
}
