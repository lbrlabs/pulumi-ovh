// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.Ip.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.ovh.Ip.inputs.IpServiceOrderArgs;
import com.pulumi.ovh.Ip.inputs.IpServicePlanArgs;
import com.pulumi.ovh.Ip.inputs.IpServicePlanOptionArgs;
import com.pulumi.ovh.Ip.inputs.IpServiceRoutedToArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpServiceState extends com.pulumi.resources.ResourceArgs {

    public static final IpServiceState Empty = new IpServiceState();

    /**
     * can be terminated
     * 
     */
    @Import(name="canBeTerminated")
    private @Nullable Output<Boolean> canBeTerminated;

    /**
     * @return can be terminated
     * 
     */
    public Optional<Output<Boolean>> canBeTerminated() {
        return Optional.ofNullable(this.canBeTerminated);
    }

    /**
     * country
     * 
     */
    @Import(name="country")
    private @Nullable Output<String> country;

    /**
     * @return country
     * 
     */
    public Optional<Output<String>> country() {
        return Optional.ofNullable(this.country);
    }

    /**
     * Custom description on your ip.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Custom description on your ip.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * ip block
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return ip block
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * Details about an Order
     * 
     */
    @Import(name="orders")
    private @Nullable Output<List<IpServiceOrderArgs>> orders;

    /**
     * @return Details about an Order
     * 
     */
    public Optional<Output<List<IpServiceOrderArgs>>> orders() {
        return Optional.ofNullable(this.orders);
    }

    /**
     * IP block organisation Id
     * 
     */
    @Import(name="organisationId")
    private @Nullable Output<String> organisationId;

    /**
     * @return IP block organisation Id
     * 
     */
    public Optional<Output<String>> organisationId() {
        return Optional.ofNullable(this.organisationId);
    }

    /**
     * OVHcloud Subsidiary
     * 
     */
    @Import(name="ovhSubsidiary")
    private @Nullable Output<String> ovhSubsidiary;

    /**
     * @return OVHcloud Subsidiary
     * 
     */
    public Optional<Output<String>> ovhSubsidiary() {
        return Optional.ofNullable(this.ovhSubsidiary);
    }

    /**
     * OVHcloud payment mode (One of &#34;default-payment-mean&#34;, &#34;fidelity&#34;, &#34;ovh-account&#34;)
     * 
     */
    @Import(name="paymentMean")
    private @Nullable Output<String> paymentMean;

    /**
     * @return OVHcloud payment mode (One of &#34;default-payment-mean&#34;, &#34;fidelity&#34;, &#34;ovh-account&#34;)
     * 
     */
    public Optional<Output<String>> paymentMean() {
        return Optional.ofNullable(this.paymentMean);
    }

    /**
     * Product Plan to order
     * 
     */
    @Import(name="plan")
    private @Nullable Output<IpServicePlanArgs> plan;

    /**
     * @return Product Plan to order
     * 
     */
    public Optional<Output<IpServicePlanArgs>> plan() {
        return Optional.ofNullable(this.plan);
    }

    /**
     * Product Plan to order
     * 
     */
    @Import(name="planOptions")
    private @Nullable Output<List<IpServicePlanOptionArgs>> planOptions;

    /**
     * @return Product Plan to order
     * 
     */
    public Optional<Output<List<IpServicePlanOptionArgs>>> planOptions() {
        return Optional.ofNullable(this.planOptions);
    }

    /**
     * Routage information
     * 
     */
    @Import(name="routedTos")
    private @Nullable Output<List<IpServiceRoutedToArgs>> routedTos;

    /**
     * @return Routage information
     * 
     */
    public Optional<Output<List<IpServiceRoutedToArgs>>> routedTos() {
        return Optional.ofNullable(this.routedTos);
    }

    /**
     * Service where ip is routed to
     * * `service_name`: service name
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Service where ip is routed to
     * * `service_name`: service name
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Possible values for ip type
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Possible values for ip type
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private IpServiceState() {}

    private IpServiceState(IpServiceState $) {
        this.canBeTerminated = $.canBeTerminated;
        this.country = $.country;
        this.description = $.description;
        this.ip = $.ip;
        this.orders = $.orders;
        this.organisationId = $.organisationId;
        this.ovhSubsidiary = $.ovhSubsidiary;
        this.paymentMean = $.paymentMean;
        this.plan = $.plan;
        this.planOptions = $.planOptions;
        this.routedTos = $.routedTos;
        this.serviceName = $.serviceName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpServiceState $;

        public Builder() {
            $ = new IpServiceState();
        }

        public Builder(IpServiceState defaults) {
            $ = new IpServiceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param canBeTerminated can be terminated
         * 
         * @return builder
         * 
         */
        public Builder canBeTerminated(@Nullable Output<Boolean> canBeTerminated) {
            $.canBeTerminated = canBeTerminated;
            return this;
        }

        /**
         * @param canBeTerminated can be terminated
         * 
         * @return builder
         * 
         */
        public Builder canBeTerminated(Boolean canBeTerminated) {
            return canBeTerminated(Output.of(canBeTerminated));
        }

        /**
         * @param country country
         * 
         * @return builder
         * 
         */
        public Builder country(@Nullable Output<String> country) {
            $.country = country;
            return this;
        }

        /**
         * @param country country
         * 
         * @return builder
         * 
         */
        public Builder country(String country) {
            return country(Output.of(country));
        }

        /**
         * @param description Custom description on your ip.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Custom description on your ip.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param ip ip block
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip ip block
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param orders Details about an Order
         * 
         * @return builder
         * 
         */
        public Builder orders(@Nullable Output<List<IpServiceOrderArgs>> orders) {
            $.orders = orders;
            return this;
        }

        /**
         * @param orders Details about an Order
         * 
         * @return builder
         * 
         */
        public Builder orders(List<IpServiceOrderArgs> orders) {
            return orders(Output.of(orders));
        }

        /**
         * @param orders Details about an Order
         * 
         * @return builder
         * 
         */
        public Builder orders(IpServiceOrderArgs... orders) {
            return orders(List.of(orders));
        }

        /**
         * @param organisationId IP block organisation Id
         * 
         * @return builder
         * 
         */
        public Builder organisationId(@Nullable Output<String> organisationId) {
            $.organisationId = organisationId;
            return this;
        }

        /**
         * @param organisationId IP block organisation Id
         * 
         * @return builder
         * 
         */
        public Builder organisationId(String organisationId) {
            return organisationId(Output.of(organisationId));
        }

        /**
         * @param ovhSubsidiary OVHcloud Subsidiary
         * 
         * @return builder
         * 
         */
        public Builder ovhSubsidiary(@Nullable Output<String> ovhSubsidiary) {
            $.ovhSubsidiary = ovhSubsidiary;
            return this;
        }

        /**
         * @param ovhSubsidiary OVHcloud Subsidiary
         * 
         * @return builder
         * 
         */
        public Builder ovhSubsidiary(String ovhSubsidiary) {
            return ovhSubsidiary(Output.of(ovhSubsidiary));
        }

        /**
         * @param paymentMean OVHcloud payment mode (One of &#34;default-payment-mean&#34;, &#34;fidelity&#34;, &#34;ovh-account&#34;)
         * 
         * @return builder
         * 
         */
        public Builder paymentMean(@Nullable Output<String> paymentMean) {
            $.paymentMean = paymentMean;
            return this;
        }

        /**
         * @param paymentMean OVHcloud payment mode (One of &#34;default-payment-mean&#34;, &#34;fidelity&#34;, &#34;ovh-account&#34;)
         * 
         * @return builder
         * 
         */
        public Builder paymentMean(String paymentMean) {
            return paymentMean(Output.of(paymentMean));
        }

        /**
         * @param plan Product Plan to order
         * 
         * @return builder
         * 
         */
        public Builder plan(@Nullable Output<IpServicePlanArgs> plan) {
            $.plan = plan;
            return this;
        }

        /**
         * @param plan Product Plan to order
         * 
         * @return builder
         * 
         */
        public Builder plan(IpServicePlanArgs plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param planOptions Product Plan to order
         * 
         * @return builder
         * 
         */
        public Builder planOptions(@Nullable Output<List<IpServicePlanOptionArgs>> planOptions) {
            $.planOptions = planOptions;
            return this;
        }

        /**
         * @param planOptions Product Plan to order
         * 
         * @return builder
         * 
         */
        public Builder planOptions(List<IpServicePlanOptionArgs> planOptions) {
            return planOptions(Output.of(planOptions));
        }

        /**
         * @param planOptions Product Plan to order
         * 
         * @return builder
         * 
         */
        public Builder planOptions(IpServicePlanOptionArgs... planOptions) {
            return planOptions(List.of(planOptions));
        }

        /**
         * @param routedTos Routage information
         * 
         * @return builder
         * 
         */
        public Builder routedTos(@Nullable Output<List<IpServiceRoutedToArgs>> routedTos) {
            $.routedTos = routedTos;
            return this;
        }

        /**
         * @param routedTos Routage information
         * 
         * @return builder
         * 
         */
        public Builder routedTos(List<IpServiceRoutedToArgs> routedTos) {
            return routedTos(Output.of(routedTos));
        }

        /**
         * @param routedTos Routage information
         * 
         * @return builder
         * 
         */
        public Builder routedTos(IpServiceRoutedToArgs... routedTos) {
            return routedTos(List.of(routedTos));
        }

        /**
         * @param serviceName Service where ip is routed to
         * * `service_name`: service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service where ip is routed to
         * * `service_name`: service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param type Possible values for ip type
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Possible values for ip type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public IpServiceState build() {
            return $;
        }
    }

}
