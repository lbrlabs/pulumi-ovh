// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.ovh.Order.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetCartProductPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCartProductPlainArgs Empty = new GetCartProductPlainArgs();

    /**
     * Cart identifier
     * 
     */
    @Import(name="cartId", required=true)
    private String cartId;

    /**
     * @return Cart identifier
     * 
     */
    public String cartId() {
        return this.cartId;
    }

    /**
     * product
     * 
     */
    @Import(name="product", required=true)
    private String product;

    /**
     * @return product
     * 
     */
    public String product() {
        return this.product;
    }

    private GetCartProductPlainArgs() {}

    private GetCartProductPlainArgs(GetCartProductPlainArgs $) {
        this.cartId = $.cartId;
        this.product = $.product;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCartProductPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCartProductPlainArgs $;

        public Builder() {
            $ = new GetCartProductPlainArgs();
        }

        public Builder(GetCartProductPlainArgs defaults) {
            $ = new GetCartProductPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cartId Cart identifier
         * 
         * @return builder
         * 
         */
        public Builder cartId(String cartId) {
            $.cartId = cartId;
            return this;
        }

        /**
         * @param product product
         * 
         * @return builder
         * 
         */
        public Builder product(String product) {
            $.product = product;
            return this;
        }

        public GetCartProductPlainArgs build() {
            $.cartId = Objects.requireNonNull($.cartId, "expected parameter 'cartId' to be non-null");
            $.product = Objects.requireNonNull($.product, "expected parameter 'product' to be non-null");
            return $;
        }
    }

}
