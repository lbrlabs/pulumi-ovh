// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface CloudProjectContainerRegistryPlan {
    /**
     * Plan code from the catalog
     */
    code: string;
    /**
     * Plan creation date
     */
    createdAt: string;
    /**
     * Features of the plan
     */
    features: outputs.CloudProjectContainerRegistryPlanFeature[];
    /**
     * Plan ID
     */
    id: string;
    /**
     * Registry name
     */
    name: string;
    /**
     * Container registry limits
     */
    registryLimits: outputs.CloudProjectContainerRegistryPlanRegistryLimit[];
    /**
     * Registry last update date
     */
    updatedAt: string;
}

export interface CloudProjectContainerRegistryPlanFeature {
    /**
     * Vulnerability scanning
     */
    vulnerability: boolean;
}

export interface CloudProjectContainerRegistryPlanRegistryLimit {
    /**
     * Docker image storage limits in bytes
     */
    imageStorage: number;
    /**
     * Parallel requests on Docker image API (/v2 Docker registry API)
     */
    parallelRequest: number;
}

export interface CloudProjectDatabaseEndpoint {
    /**
     * Type of component the URI relates to.
     */
    component: string;
    /**
     * Domain of the cluster.
     */
    domain: string;
    /**
     * Path of the endpoint.
     */
    path: string;
    /**
     * Connection port for the endpoint.
     */
    port: number;
    /**
     * Scheme used to generate the URI.
     */
    scheme: string;
    /**
     * Defines whether the endpoint uses SSL.
     */
    ssl: boolean;
    /**
     * SSL mode used to connect to the service if the SSL is enabled.
     */
    sslMode: string;
    /**
     * URI of the endpoint.
     */
    uri: string;
}

export interface CloudProjectDatabaseNode {
    /**
     * Private network id in which the node should be deployed.
     */
    networkId?: string;
    /**
     * Public cloud region in which the node should be deployed.
     * Ex: "GRA'.
     */
    region: string;
    /**
     * Private subnet ID in which the node is.
     */
    subnetId?: string;
}

export interface CloudProjectKubeNodePoolTemplate {
    metadata?: outputs.CloudProjectKubeNodePoolTemplateMetadata;
    spec?: outputs.CloudProjectKubeNodePoolTemplateSpec;
}

export interface CloudProjectKubeNodePoolTemplateMetadata {
    annotations?: {[key: string]: string};
    finalizers?: string[];
    labels?: {[key: string]: string};
}

export interface CloudProjectKubeNodePoolTemplateSpec {
    taints?: {[key: string]: any}[];
    unschedulable?: boolean;
}

export interface CloudProjectKubePrivateNetworkConfiguration {
    defaultVrackGateway: string;
    privateNetworkRoutingAsDefault: boolean;
}

export interface CloudProjectNetworkPrivateRegionsAttribute {
    openstackid: string;
    region: string;
    /**
     * the status of the network. should be normally set to 'ACTIVE'.
     */
    status: string;
}

export interface CloudProjectNetworkPrivateRegionsStatus {
    region: string;
    /**
     * the status of the network. should be normally set to 'ACTIVE'.
     */
    status: string;
}

export interface CloudProjectNetworkPrivateSubnetIpPool {
    /**
     * Enable DHCP.
     * Changing this forces a new resource to be created. Defaults to false.
     * _
     */
    dhcp: boolean;
    /**
     * Last ip for this region.
     * Changing this value recreates the subnet.
     */
    end: string;
    /**
     * Global network in CIDR format.
     * Changing this value recreates the subnet
     */
    network: string;
    /**
     * The region in which the network subnet will be created.
     * Ex.: "GRA1". Changing this value recreates the resource.
     */
    region: string;
    /**
     * First ip for this region.
     * Changing this value recreates the subnet.
     */
    start: string;
}

export interface CloudProjectOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.CloudProjectOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface CloudProjectOrderDetail {
    /**
     * A description associated with the user.
     */
    description: string;
    /**
     * expiration date
     */
    domain: string;
    /**
     * order detail id
     */
    orderDetailId: number;
    /**
     * quantity
     */
    quantity: string;
}

export interface CloudProjectPlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.CloudProjectPlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface CloudProjectPlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface CloudProjectPlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.CloudProjectPlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface CloudProjectPlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface CloudProjectUserRole {
    /**
     * A description associated with the user.
     */
    description: string;
    /**
     * id of the role
     */
    id: string;
    /**
     * name of the role
     */
    name: string;
    /**
     * list of permissions associated with the role
     */
    permissions: string[];
}

export interface DbaasLogsInputConfiguration {
    /**
     * Flowgger configuration
     */
    flowgger?: outputs.DbaasLogsInputConfigurationFlowgger;
    /**
     * Logstash configuration
     */
    logstash?: outputs.DbaasLogsInputConfigurationLogstash;
}

export interface DbaasLogsInputConfigurationFlowgger {
    /**
     * Type of format to decode. One of "RFC5424", "LTSV", "GELF", "CAPNP"
     */
    logFormat: string;
    /**
     * Indicates how messages are delimited. One of "LINE", "NUL", "SYSLEN", "CAPNP"
     */
    logFraming: string;
}

export interface DbaasLogsInputConfigurationLogstash {
    /**
     * The filter section of logstash.conf
     */
    filterSection?: string;
    /**
     * The filter section of logstash.conf
     */
    inputSection: string;
    /**
     * The list of customs Grok patterns
     */
    patternSection?: string;
}

export interface DedicatedServiceInstallTaskDetails {
    /**
     * Template change log details.
     *
     * @deprecated field is not used anymore
     */
    changeLog?: string;
    /**
     * Set up the server using the provided hostname instead of the default hostname.
     */
    customHostname?: string;
    /**
     * Disk group id.
     */
    diskGroupId?: number;
    /**
     * set to true to install RTM.
     */
    installRtm?: boolean;
    /**
     * set to true to install sql server (Windows template only).
     */
    installSqlServer?: boolean;
    /**
     * language.
     */
    language?: string;
    /**
     * set to true to disable RAID.
     */
    noRaid?: boolean;
    /**
     * Indicate the URL where your postinstall customisation script is located.
     */
    postInstallationScriptLink?: string;
    /**
     * Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'.
     */
    postInstallationScriptReturn?: string;
    /**
     * set to true to make a hardware raid reset.
     */
    resetHwRaid?: boolean;
    /**
     * soft raid devices.
     */
    softRaidDevices?: number;
    /**
     * Name of the ssh key that should be installed. Password login will be disabled.
     */
    sshKeyName?: string;
    /**
     * Use the distribution's native kernel instead of the recommended OVH Kernel.
     */
    useDistribKernel?: boolean;
    /**
     * set to true to use SPLA.
     */
    useSpla?: boolean;
}

export interface DomainZoneOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.DomainZoneOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface DomainZoneOrderDetail {
    /**
     * description
     */
    description: string;
    /**
     * expiration date
     */
    domain: string;
    /**
     * order detail id
     */
    orderDetailId: number;
    /**
     * quantity
     */
    quantity: string;
}

export interface DomainZonePlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.DomainZonePlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface DomainZonePlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface DomainZonePlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.DomainZonePlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface DomainZonePlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface GetCloudProjectCapabilitiesContainerFilterFeature {
    /**
     * Vulnerability scanning
     */
    vulnerability: boolean;
}

export interface GetCloudProjectCapabilitiesContainerFilterRegistryLimit {
    /**
     * Docker image storage limits in bytes
     */
    imageStorage: number;
    /**
     * Parallel requests on Docker image API (/v2 Docker registry API)
     */
    parallelRequest: number;
}

export interface GetCloudProjectCapabilitiesContainerRegistryResult {
    /**
     * Available plans in the region
     */
    plans: outputs.GetCloudProjectCapabilitiesContainerRegistryResultPlan[];
    /**
     * The region name
     */
    regionName: string;
}

export interface GetCloudProjectCapabilitiesContainerRegistryResultPlan {
    /**
     * Plan code from the catalog
     */
    code: string;
    /**
     * Plan creation date
     */
    createdAt: string;
    /**
     * Features of the plan
     */
    features: outputs.GetCloudProjectCapabilitiesContainerRegistryResultPlanFeature[];
    /**
     * Plan ID
     */
    id: string;
    /**
     * Plan name
     */
    name: string;
    /**
     * Container registry limits
     */
    registryLimits: outputs.GetCloudProjectCapabilitiesContainerRegistryResultPlanRegistryLimit[];
    /**
     * Plan last update date
     */
    updatedAt: string;
}

export interface GetCloudProjectCapabilitiesContainerRegistryResultPlanFeature {
    /**
     * Vulnerability scanning
     */
    vulnerability: boolean;
}

export interface GetCloudProjectCapabilitiesContainerRegistryResultPlanRegistryLimit {
    /**
     * Docker image storage limits in bytes
     */
    imageStorage: number;
    /**
     * Parallel requests on Docker image API (/v2 Docker registry API)
     */
    parallelRequest: number;
}

export interface GetCloudProjectContainerRegistriesResult {
    /**
     * Registry creation date
     */
    createdAt: string;
    /**
     * Registry ID
     */
    id: string;
    /**
     * Registry name
     */
    name: string;
    /**
     * Project ID of your registry
     */
    projectId: string;
    /**
     * Region of the registry
     */
    region: string;
    /**
     * Current size of the registry (bytes)
     */
    size: number;
    /**
     * Registry status
     */
    status: string;
    /**
     * Registry last update date
     */
    updatedAt: string;
    /**
     * Access url of the registry
     */
    url: string;
    /**
     * Version of your registry
     */
    version: string;
}

export interface GetCloudProjectContainerRegistryUsersResult {
    /**
     * User email
     */
    email: string;
    /**
     * User ID
     */
    id: string;
    /**
     * User name
     */
    user: string;
}

export interface GetCloudProjectDatabaseEndpoint {
    /**
     * Type of component the URI relates to.
     */
    component: string;
    /**
     * Domain of the cluster.
     */
    domain: string;
    /**
     * Path of the endpoint.
     */
    path: string;
    /**
     * Connection port for the endpoint.
     */
    port: number;
    /**
     * Scheme used to generate the URI.
     */
    scheme: string;
    /**
     * Defines whether the endpoint uses SSL.
     */
    ssl: boolean;
    /**
     * SSL mode used to connect to the service if the SSL is enabled.
     */
    sslMode: string;
    /**
     * URI of the endpoint.
     */
    uri: string;
}

export interface GetCloudProjectDatabaseNode {
    networkId: string;
    region: string;
    subnetId: string;
}

export interface GetCloudProjectRegionService {
    /**
     * The name of the region associated with the public cloud
     * project.
     */
    name: string;
    /**
     * the status of the service
     */
    status: string;
}

export interface GetDedicatedServerVni {
    /**
     * VirtualNetworkInterface activation state
     */
    enabled: boolean;
    /**
     * VirtualNetworkInterface mode (public,vrack,vrack_aggregation)
     */
    mode: string;
    /**
     * User defined VirtualNetworkInterface name
     */
    name: string;
    nics: string[];
    /**
     * Server bound to this VirtualNetworkInterface
     */
    serverName: string;
    /**
     * VirtualNetworkInterface unique id
     */
    uuid: string;
    /**
     * vRack name
     */
    vrack: string;
}

export interface GetIpServiceRoutedTo {
    /**
     * The service name
     */
    serviceName: string;
}

export interface GetMeCurrency {
    code: string;
    symbol: string;
}

export interface GetMeInstallationTemplateCustomization {
    /**
     * @deprecated field is not used anymore
     */
    changeLog: string;
    customHostname: string;
    postInstallationScriptLink: string;
    postInstallationScriptReturn: string;
    /**
     * @deprecated field is not used anymore
     */
    rating: number;
    sshKeyName: string;
    useDistributionKernel: boolean;
}

export interface GetMeInstallationTemplatePartitionScheme {
    hardwareRaids: outputs.GetMeInstallationTemplatePartitionSchemeHardwareRaid[];
    name: string;
    partitions: outputs.GetMeInstallationTemplatePartitionSchemePartition[];
    priority: number;
}

export interface GetMeInstallationTemplatePartitionSchemeHardwareRaid {
    disks: string[];
    mode: string;
    name: string;
    step: number;
}

export interface GetMeInstallationTemplatePartitionSchemePartition {
    filesystem: string;
    mountpoint: string;
    order: number;
    raid: string;
    size: number;
    type: string;
    volumeName: string;
}

export interface GetOrderCartProductOptionsPlanPrice {
    /**
     * Capacities of the pricing (type of pricing)
     */
    capacities: any[];
    /**
     * Description of the pricing
     */
    description: string;
    /**
     * Duration for ordering the product
     */
    duration: string;
    /**
     * Interval of renewal
     */
    interval: number;
    /**
     * Maximum quantity that can be ordered
     */
    maximumQuantity: number;
    /**
     * Maximum repeat for renewal
     */
    maximumRepeat: number;
    /**
     * Minimum quantity that can be ordered
     */
    minimumQuantity: number;
    /**
     * Minimum repeat for renewal
     */
    minimumRepeat: number;
    /**
     * Price of the product in micro-centims
     */
    priceInUcents: number;
    /**
     * Price of the product (Price with its currency and textual representation)
     */
    prices: outputs.GetOrderCartProductOptionsPlanPricePrice[];
    /**
     * Pricing model identifier
     */
    pricingMode: string;
    /**
     * Pricing type
     */
    pricingType: string;
}

export interface GetOrderCartProductOptionsPlanPricePrice {
    /**
     * Currency code
     */
    currencyCode: string;
    /**
     * Textual representation
     */
    text: string;
    /**
     * The effective price
     */
    value: number;
}

export interface GetOrderCartProductOptionsPlanSelectedPrice {
    /**
     * Capacities of the pricing (type of pricing)
     */
    capacities: any[];
    /**
     * Description of the pricing
     */
    description: string;
    /**
     * Duration for ordering the product
     */
    duration: string;
    /**
     * Interval of renewal
     */
    interval: number;
    /**
     * Maximum quantity that can be ordered
     */
    maximumQuantity: number;
    /**
     * Maximum repeat for renewal
     */
    maximumRepeat: number;
    /**
     * Minimum quantity that can be ordered
     */
    minimumQuantity: number;
    /**
     * Minimum repeat for renewal
     */
    minimumRepeat: number;
    /**
     * Price of the product in micro-centims
     */
    priceInUcents: number;
    /**
     * Price of the product (Price with its currency and textual representation)
     */
    prices: outputs.GetOrderCartProductOptionsPlanSelectedPricePrice[];
    /**
     * Pricing model identifier
     */
    pricingMode: string;
    /**
     * Pricing type
     */
    pricingType: string;
}

export interface GetOrderCartProductOptionsPlanSelectedPricePrice {
    /**
     * Currency code
     */
    currencyCode: string;
    /**
     * Textual representation
     */
    text: string;
    /**
     * The effective price
     */
    value: number;
}

export interface GetOrderCartProductOptionsResult {
    /**
     * Define if options of this family are exclusive with each other
     */
    exclusive: boolean;
    /**
     * Option family
     */
    family: string;
    /**
     * Define if an option of this family is mandatory
     */
    mandatory: boolean;
    /**
     * Product offer identifier
     */
    planCode: string;
    /**
     * Prices of the product offer
     */
    prices: outputs.GetOrderCartProductOptionsResultPrice[];
    /**
     * Name of the product
     */
    productName: string;
    /**
     * Product type
     */
    productType: string;
}

export interface GetOrderCartProductOptionsResultPrice {
    /**
     * Capacities of the pricing (type of pricing)
     */
    capacities: any[];
    /**
     * Description of the pricing
     */
    description: string;
    /**
     * Duration for ordering the product
     */
    duration: string;
    /**
     * Interval of renewal
     */
    interval: number;
    /**
     * Maximum quantity that can be ordered
     */
    maximumQuantity: number;
    /**
     * Maximum repeat for renewal
     */
    maximumRepeat: number;
    /**
     * Minimum quantity that can be ordered
     */
    minimumQuantity: number;
    /**
     * Minimum repeat for renewal
     */
    minimumRepeat: number;
    /**
     * Price of the product in micro-centims
     */
    priceInUcents: number;
    /**
     * Price of the product (Price with its currency and textual representation)
     */
    prices: outputs.GetOrderCartProductOptionsResultPricePrice[];
    /**
     * Pricing model identifier
     */
    pricingMode: string;
    /**
     * Pricing type
     */
    pricingType: string;
}

export interface GetOrderCartProductOptionsResultPricePrice {
    /**
     * Currency code
     */
    currencyCode: string;
    /**
     * Textual representation
     */
    text: string;
    /**
     * The effective price
     */
    value: number;
}

export interface GetOrderCartProductPlanPrice {
    /**
     * Capacities of the pricing (type of pricing)
     */
    capacities: any[];
    /**
     * Description of the pricing
     */
    description: string;
    /**
     * Duration for ordering the product
     */
    duration: string;
    /**
     * Interval of renewal
     */
    interval: number;
    /**
     * Maximum quantity that can be ordered
     */
    maximumQuantity: number;
    /**
     * Maximum repeat for renewal
     */
    maximumRepeat: number;
    /**
     * Minimum quantity that can be ordered
     */
    minimumQuantity: number;
    /**
     * Minimum repeat for renewal
     */
    minimumRepeat: number;
    /**
     * Price of the product in micro-centims
     */
    priceInUcents: number;
    /**
     * Price of the product (Price with its currency and textual representation)
     */
    prices: outputs.GetOrderCartProductPlanPricePrice[];
    /**
     * Pricing model identifier
     */
    pricingMode: string;
    /**
     * Pricing type
     */
    pricingType: string;
}

export interface GetOrderCartProductPlanPricePrice {
    /**
     * Currency code
     */
    currencyCode: string;
    /**
     * Textual representation
     */
    text: string;
    /**
     * The effective price
     */
    value: number;
}

export interface GetOrderCartProductPlanSelectedPrice {
    /**
     * Capacities of the pricing (type of pricing)
     */
    capacities: any[];
    /**
     * Description of the pricing
     */
    description: string;
    /**
     * Duration for ordering the product
     */
    duration: string;
    /**
     * Interval of renewal
     */
    interval: number;
    /**
     * Maximum quantity that can be ordered
     */
    maximumQuantity: number;
    /**
     * Maximum repeat for renewal
     */
    maximumRepeat: number;
    /**
     * Minimum quantity that can be ordered
     */
    minimumQuantity: number;
    /**
     * Minimum repeat for renewal
     */
    minimumRepeat: number;
    /**
     * Price of the product in micro-centims
     */
    priceInUcents: number;
    /**
     * Price of the product (Price with its currency and textual representation)
     */
    prices: outputs.GetOrderCartProductPlanSelectedPricePrice[];
    /**
     * Pricing model identifier
     */
    pricingMode: string;
    /**
     * Pricing type
     */
    pricingType: string;
}

export interface GetOrderCartProductPlanSelectedPricePrice {
    /**
     * Currency code
     */
    currencyCode: string;
    /**
     * Textual representation
     */
    text: string;
    /**
     * The effective price
     */
    value: number;
}

export interface GetOrderCartProductResult {
    /**
     * Product offer identifier
     */
    planCode: string;
    /**
     * Prices of the product offer
     */
    prices: outputs.GetOrderCartProductResultPrice[];
    /**
     * Name of the product
     */
    productName: string;
    /**
     * Product type
     */
    productType: string;
}

export interface GetOrderCartProductResultPrice {
    /**
     * Capacities of the pricing (type of pricing)
     */
    capacities: any[];
    /**
     * Description of the pricing
     */
    description: string;
    /**
     * Duration for ordering the product
     */
    duration: string;
    /**
     * Interval of renewal
     */
    interval: number;
    /**
     * Maximum quantity that can be ordered
     */
    maximumQuantity: number;
    /**
     * Maximum repeat for renewal
     */
    maximumRepeat: number;
    /**
     * Minimum quantity that can be ordered
     */
    minimumQuantity: number;
    /**
     * Minimum repeat for renewal
     */
    minimumRepeat: number;
    /**
     * Price of the product in micro-centims
     */
    priceInUcents: number;
    /**
     * Price of the product (Price with its currency and textual representation)
     */
    prices: outputs.GetOrderCartProductResultPricePrice[];
    /**
     * Pricing model identifier
     */
    pricingMode: string;
    /**
     * Pricing type
     */
    pricingType: string;
}

export interface GetOrderCartProductResultPricePrice {
    /**
     * Currency code
     */
    currencyCode: string;
    /**
     * Textual representation
     */
    text: string;
    /**
     * The effective price
     */
    value: number;
}

export interface IpLoadBalancingHttpFarmProbe {
    /**
     * Force use of SSL (TLS)
     */
    forceSsl?: boolean;
    /**
     * probe interval, Value between 30 and 3600 seconds, default 30
     */
    interval?: number;
    /**
     * What to mach `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)
     */
    match: string;
    /**
     * HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)
     */
    method: string;
    /**
     * Negate probe result
     */
    negate?: boolean;
    /**
     * Pattern to match against `match`
     */
    pattern: string;
    /**
     * Port for backends to recieve traffic on.
     */
    port: number;
    /**
     * Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`
     */
    type: string;
    /**
     * URL for HTTP probe type.
     */
    url: string;
}

export interface IpLoadBalancingHttpRouteAction {
    /**
     * HTTP status code for "redirect" and "reject" actions
     */
    status?: number;
    /**
     * Farm ID for "farm" action type or URL template for "redirect" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target
     */
    target?: string;
    /**
     * Action to trigger if all the rules of this route matches
     */
    type: string;
}

export interface IpLoadBalancingHttpRouteRule {
    /**
     * Name of the field to match like "protocol" or "host" "/ipLoadbalancing/{serviceName}/route/availableRules" for a list of available rules
     */
    field: string;
    /**
     * Matching operator. Not all operators are available for all fields. See "availableRules"
     * * `negate`- Invert the matching operator effect
     */
    match: string;
    negate: boolean;
    /**
     * Value to match against this match. Interpretation if this field depends on the match and field
     */
    pattern: string;
    /**
     * Id of your rule
     */
    ruleId: number;
    /**
     * Name of sub-field, if applicable. This may be a Cookie or Header name for instance
     */
    subField: string;
}

export interface IpLoadBalancingOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.IpLoadBalancingOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface IpLoadBalancingOrderDetail {
    /**
     * description
     */
    description: string;
    /**
     * expiration date
     */
    domain: string;
    /**
     * order detail id
     */
    orderDetailId: number;
    /**
     * quantity
     */
    quantity: string;
}

export interface IpLoadBalancingOrderableZone {
    /**
     * The zone three letter code
     */
    name: string;
    /**
     * Plan code
     */
    planCode: string;
}

export interface IpLoadBalancingPlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.IpLoadBalancingPlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface IpLoadBalancingPlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface IpLoadBalancingPlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.IpLoadBalancingPlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface IpLoadBalancingPlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface IpLoadBalancingTcpFarmProbe {
    /**
     * Force use of SSL (TLS)
     */
    forceSsl?: boolean;
    /**
     * probe interval, Value between 30 and 3600 seconds, default 30
     */
    interval?: number;
    /**
     * What to mach `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)
     */
    match: string;
    /**
     * HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)
     */
    method?: string;
    /**
     * Negate probe result
     */
    negate?: boolean;
    /**
     * Pattern to match against `match`
     */
    pattern?: string;
    /**
     * Port for backends to recieve traffic on.
     */
    port?: number;
    /**
     * Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`
     */
    type: string;
    /**
     * URL for HTTP probe type.
     */
    url?: string;
}

export interface IpLoadBalancingTcpRouteAction {
    /**
     * Farm ID for "farm" action type, empty for others.
     */
    target?: string;
    /**
     * Action to trigger if all the rules of this route matches
     */
    type: string;
}

export interface IpLoadBalancingTcpRouteRule {
    /**
     * Name of the field to match like "protocol" or "host" "/ipLoadbalancing/{serviceName}/route/availableRules" for a list of available rules
     */
    field: string;
    /**
     * Matching operator. Not all operators are available for all fields. See "availableRules"
     * * `negate`- Invert the matching operator effect
     */
    match: string;
    negate: boolean;
    /**
     * Value to match against this match. Interpretation if this field depends on the match and field
     */
    pattern: string;
    /**
     * Id of your rule
     */
    ruleId: number;
    /**
     * Name of sub-field, if applicable. This may be a Cookie or Header name for instance
     */
    subField: string;
}

export interface IpServiceOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.IpServiceOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface IpServiceOrderDetail {
    /**
     * Custom description on your ip.
     */
    description: string;
    /**
     * expiration date
     */
    domain: string;
    /**
     * order detail id
     */
    orderDetailId: number;
    /**
     * quantity
     */
    quantity: string;
}

export interface IpServicePlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.IpServicePlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface IpServicePlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface IpServicePlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.IpServicePlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface IpServicePlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface IpServiceRoutedTo {
    /**
     * Service where ip is routed to
     * * `serviceName`: service name
     */
    serviceName: string;
}

export interface VrackOrder {
    /**
     * date
     */
    date: string;
    /**
     * Information about a Bill entry
     */
    details: outputs.VrackOrderDetail[];
    /**
     * expiration date
     */
    expirationDate: string;
    /**
     * order id
     */
    orderId: number;
}

export interface VrackOrderDetail {
    /**
     * yourvrackdescription
     */
    description: string;
    /**
     * expiration date
     */
    domain: string;
    /**
     * order detail id
     */
    orderDetailId: number;
    /**
     * quantity
     */
    quantity: string;
}

export interface VrackPlan {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.VrackPlanConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface VrackPlanConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

export interface VrackPlanOption {
    /**
     * Catalog name
     */
    catalogName?: string;
    /**
     * Representation of a configuration item for personalizing product
     */
    configurations?: outputs.VrackPlanOptionConfiguration[];
    /**
     * duration
     */
    duration: string;
    /**
     * Plan code
     */
    planCode: string;
    /**
     * Pricing model identifier
     */
    pricingMode: string;
}

export interface VrackPlanOptionConfiguration {
    /**
     * Identifier of the resource
     */
    label: string;
    /**
     * Path to the resource in API.OVH.COM
     */
    value: string;
}

