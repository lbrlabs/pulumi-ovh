// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates an user for a database cluster associated with a public cloud project.
 *
 * With this resource you can create a user for the following database engine:
 *
 *   * `cassandra`
 *   * `kafka`
 *   * `kafkaConnect`
 *   * `mysql`
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@pulumi/ovh";
 * import * as pulumi_ovh from "@lbrlabs/pulumi_ovh";
 *
 * const db = ovh.getCloudProjectDatabase({
 *     serviceName: "XXXX",
 *     engine: "YYYY",
 *     clusterId: "ZZZZ",
 * });
 * const user = new ovh.CloudProjectDatabaseUser("user", {
 *     serviceName: ovh_cloud_project_database.db.service_name,
 *     engine: ovh_cloud_project_database.db.engine,
 *     clusterId: ovh_cloud_project_database.db.id,
 * });
 * ```
 *
 * ## Import
 *
 * OVHcloud Managed database clusters users can be imported using the `service_name`, `engine`, `cluster_id` and `id` of the user, separated by "/" E.g.,
 *
 * ```sh
 *  $ pulumi import ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser my_user <service_name>/<engine>/<cluster_id>/<id>
 * ```
 */
export class CloudProjectDatabaseUser extends pulumi.CustomResource {
    /**
     * Get an existing CloudProjectDatabaseUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudProjectDatabaseUserState, opts?: pulumi.CustomResourceOptions): CloudProjectDatabaseUser {
        return new CloudProjectDatabaseUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser';

    /**
     * Returns true if the given object is an instance of CloudProjectDatabaseUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudProjectDatabaseUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudProjectDatabaseUser.__pulumiType;
    }

    /**
     * Cluster ID.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Date of the creation of the user.
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The engine of the database cluster you want to add. To get a full list of available engine visit :
     * [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\
     * Available engines for this resource (other have specific resource):
     * * `cassandra`
     * * `kafka`
     * * `kafkaConnect`
     * * `mysql`
     */
    public readonly engine!: pulumi.Output<string>;
    /**
     * Name of the user.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Password of the user.
     */
    public /*out*/ readonly password!: pulumi.Output<string>;
    /**
     * The id of the public cloud project. If omitted,
     * the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * Current status of the user.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a CloudProjectDatabaseUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudProjectDatabaseUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudProjectDatabaseUserArgs | CloudProjectDatabaseUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudProjectDatabaseUserState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as CloudProjectDatabaseUserArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.engine === undefined) && !opts.urn) {
                throw new Error("Missing required property 'engine'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["password"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudProjectDatabaseUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudProjectDatabaseUser resources.
 */
export interface CloudProjectDatabaseUserState {
    /**
     * Cluster ID.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Date of the creation of the user.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The engine of the database cluster you want to add. To get a full list of available engine visit :
     * [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\
     * Available engines for this resource (other have specific resource):
     * * `cassandra`
     * * `kafka`
     * * `kafkaConnect`
     * * `mysql`
     */
    engine?: pulumi.Input<string>;
    /**
     * Name of the user.
     */
    name?: pulumi.Input<string>;
    /**
     * Password of the user.
     */
    password?: pulumi.Input<string>;
    /**
     * The id of the public cloud project. If omitted,
     * the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Current status of the user.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudProjectDatabaseUser resource.
 */
export interface CloudProjectDatabaseUserArgs {
    /**
     * Cluster ID.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The engine of the database cluster you want to add. To get a full list of available engine visit :
     * [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\
     * Available engines for this resource (other have specific resource):
     * * `cassandra`
     * * `kafka`
     * * `kafkaConnect`
     * * `mysql`
     */
    engine: pulumi.Input<string>;
    /**
     * Name of the user.
     */
    name?: pulumi.Input<string>;
    /**
     * The id of the public cloud project. If omitted,
     * the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     */
    serviceName: pulumi.Input<string>;
}
