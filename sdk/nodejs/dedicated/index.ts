// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CephAclArgs, CephAclState } from "./cephAcl";
export type CephAcl = import("./cephAcl").CephAcl;
export const CephAcl: typeof import("./cephAcl").CephAcl = null as any;
utilities.lazyLoad(exports, ["CephAcl"], () => require("./cephAcl"));

export { GetCephArgs, GetCephResult, GetCephOutputArgs } from "./getCeph";
export const getCeph: typeof import("./getCeph").getCeph = null as any;
export const getCephOutput: typeof import("./getCeph").getCephOutput = null as any;
utilities.lazyLoad(exports, ["getCeph","getCephOutput"], () => require("./getCeph"));

export { GetServerBootsArgs, GetServerBootsResult, GetServerBootsOutputArgs } from "./getServerBoots";
export const getServerBoots: typeof import("./getServerBoots").getServerBoots = null as any;
export const getServerBootsOutput: typeof import("./getServerBoots").getServerBootsOutput = null as any;
utilities.lazyLoad(exports, ["getServerBoots","getServerBootsOutput"], () => require("./getServerBoots"));

export { ServerRebootTaskArgs, ServerRebootTaskState } from "./serverRebootTask";
export type ServerRebootTask = import("./serverRebootTask").ServerRebootTask;
export const ServerRebootTask: typeof import("./serverRebootTask").ServerRebootTask = null as any;
utilities.lazyLoad(exports, ["ServerRebootTask"], () => require("./serverRebootTask"));

export { ServerUpdateArgs, ServerUpdateState } from "./serverUpdate";
export type ServerUpdate = import("./serverUpdate").ServerUpdate;
export const ServerUpdate: typeof import("./serverUpdate").ServerUpdate = null as any;
utilities.lazyLoad(exports, ["ServerUpdate"], () => require("./serverUpdate"));

export { ServiceInstallTaskArgs, ServiceInstallTaskState } from "./serviceInstallTask";
export type ServiceInstallTask = import("./serviceInstallTask").ServiceInstallTask;
export const ServiceInstallTask: typeof import("./serviceInstallTask").ServiceInstallTask = null as any;
utilities.lazyLoad(exports, ["ServiceInstallTask"], () => require("./serviceInstallTask"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "ovh:Dedicated/cephAcl:CephAcl":
                return new CephAcl(name, <any>undefined, { urn })
            case "ovh:Dedicated/serverRebootTask:ServerRebootTask":
                return new ServerRebootTask(name, <any>undefined, { urn })
            case "ovh:Dedicated/serverUpdate:ServerUpdate":
                return new ServerUpdate(name, <any>undefined, { urn })
            case "ovh:Dedicated/serviceInstallTask:ServiceInstallTask":
                return new ServiceInstallTask(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("ovh", "Dedicated/cephAcl", _module)
pulumi.runtime.registerResourceModule("ovh", "Dedicated/serverRebootTask", _module)
pulumi.runtime.registerResourceModule("ovh", "Dedicated/serverUpdate", _module)
pulumi.runtime.registerResourceModule("ovh", "Dedicated/serviceInstallTask", _module)
