// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetLogsClusterArgs, GetLogsClusterResult, GetLogsClusterOutputArgs } from "./getLogsCluster";
export const getLogsCluster: typeof import("./getLogsCluster").getLogsCluster = null as any;
export const getLogsClusterOutput: typeof import("./getLogsCluster").getLogsClusterOutput = null as any;
utilities.lazyLoad(exports, ["getLogsCluster","getLogsClusterOutput"], () => require("./getLogsCluster"));

export { GetLogsInputEngineArgs, GetLogsInputEngineResult, GetLogsInputEngineOutputArgs } from "./getLogsInputEngine";
export const getLogsInputEngine: typeof import("./getLogsInputEngine").getLogsInputEngine = null as any;
export const getLogsInputEngineOutput: typeof import("./getLogsInputEngine").getLogsInputEngineOutput = null as any;
utilities.lazyLoad(exports, ["getLogsInputEngine","getLogsInputEngineOutput"], () => require("./getLogsInputEngine"));

export { GetLogsOutputGraylogStreamArgs, GetLogsOutputGraylogStreamResult, GetLogsOutputGraylogStreamOutputArgs } from "./getLogsOutputGraylogStream";
export const getLogsOutputGraylogStream: typeof import("./getLogsOutputGraylogStream").getLogsOutputGraylogStream = null as any;
export const getLogsOutputGraylogStreamOutput: typeof import("./getLogsOutputGraylogStream").getLogsOutputGraylogStreamOutput = null as any;
utilities.lazyLoad(exports, ["getLogsOutputGraylogStream","getLogsOutputGraylogStreamOutput"], () => require("./getLogsOutputGraylogStream"));

export { LogsClusterArgs, LogsClusterState } from "./logsCluster";
export type LogsCluster = import("./logsCluster").LogsCluster;
export const LogsCluster: typeof import("./logsCluster").LogsCluster = null as any;
utilities.lazyLoad(exports, ["LogsCluster"], () => require("./logsCluster"));

export { LogsInputArgs, LogsInputState } from "./logsInput";
export type LogsInput = import("./logsInput").LogsInput;
export const LogsInput: typeof import("./logsInput").LogsInput = null as any;
utilities.lazyLoad(exports, ["LogsInput"], () => require("./logsInput"));

export { LogsOutputGraylogStreamArgs, LogsOutputGraylogStreamState } from "./logsOutputGraylogStream";
export type LogsOutputGraylogStream = import("./logsOutputGraylogStream").LogsOutputGraylogStream;
export const LogsOutputGraylogStream: typeof import("./logsOutputGraylogStream").LogsOutputGraylogStream = null as any;
utilities.lazyLoad(exports, ["LogsOutputGraylogStream"], () => require("./logsOutputGraylogStream"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "ovh:Dbaas/logsCluster:LogsCluster":
                return new LogsCluster(name, <any>undefined, { urn })
            case "ovh:Dbaas/logsInput:LogsInput":
                return new LogsInput(name, <any>undefined, { urn })
            case "ovh:Dbaas/logsOutputGraylogStream:LogsOutputGraylogStream":
                return new LogsOutputGraylogStream(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("ovh", "Dbaas/logsCluster", _module)
pulumi.runtime.registerResourceModule("ovh", "Dbaas/logsInput", _module)
pulumi.runtime.registerResourceModule("ovh", "Dbaas/logsOutputGraylogStream", _module)
