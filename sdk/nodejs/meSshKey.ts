// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates an SSH Key.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@pulumi/ovh";
 *
 * const mykey = new ovh.MeSshKey("mykey", {
 *     key: "ssh-ed25519 AAAAC3...",
 *     keyName: "mykey",
 * });
 * ```
 */
export class MeSshKey extends pulumi.CustomResource {
    /**
     * Get an existing MeSshKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MeSshKeyState, opts?: pulumi.CustomResourceOptions): MeSshKey {
        return new MeSshKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/meSshKey:MeSshKey';

    /**
     * Returns true if the given object is an instance of MeSshKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MeSshKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MeSshKey.__pulumiType;
    }

    /**
     * True when this public SSH key is used for rescue mode and reinstallations.
     */
    public readonly default!: pulumi.Output<boolean>;
    /**
     * The content of the public key in the form "ssh-algo content", e.g. "ssh-ed25519 AAAAC3...".
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * The friendly name of this SSH key.
     */
    public readonly keyName!: pulumi.Output<string>;

    /**
     * Create a MeSshKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MeSshKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MeSshKeyArgs | MeSshKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MeSshKeyState | undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["keyName"] = state ? state.keyName : undefined;
        } else {
            const args = argsOrState as MeSshKeyArgs | undefined;
            if ((!args || args.key === undefined) && !opts.urn) {
                throw new Error("Missing required property 'key'");
            }
            if ((!args || args.keyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyName'");
            }
            resourceInputs["default"] = args ? args.default : undefined;
            resourceInputs["key"] = args ? args.key : undefined;
            resourceInputs["keyName"] = args ? args.keyName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MeSshKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MeSshKey resources.
 */
export interface MeSshKeyState {
    /**
     * True when this public SSH key is used for rescue mode and reinstallations.
     */
    default?: pulumi.Input<boolean>;
    /**
     * The content of the public key in the form "ssh-algo content", e.g. "ssh-ed25519 AAAAC3...".
     */
    key?: pulumi.Input<string>;
    /**
     * The friendly name of this SSH key.
     */
    keyName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MeSshKey resource.
 */
export interface MeSshKeyArgs {
    /**
     * True when this public SSH key is used for rescue mode and reinstallations.
     */
    default?: pulumi.Input<boolean>;
    /**
     * The content of the public key in the form "ssh-algo content", e.g. "ssh-ed25519 AAAAC3...".
     */
    key: pulumi.Input<string>;
    /**
     * The friendly name of this SSH key.
     */
    keyName: pulumi.Input<string>;
}
