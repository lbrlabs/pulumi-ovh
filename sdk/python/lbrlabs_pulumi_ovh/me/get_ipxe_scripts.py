# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetIpxeScriptsResult',
    'AwaitableGetIpxeScriptsResult',
    'get_ipxe_scripts',
]

@pulumi.output_type
class GetIpxeScriptsResult:
    """
    A collection of values returned by getIpxeScripts.
    """
    def __init__(__self__, id=None, results=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if results and not isinstance(results, list):
            raise TypeError("Expected argument 'results' to be a list")
        pulumi.set(__self__, "results", results)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def results(self) -> Sequence[str]:
        """
        The list of the names of all the IPXE Scripts.
        """
        return pulumi.get(self, "results")


class AwaitableGetIpxeScriptsResult(GetIpxeScriptsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIpxeScriptsResult(
            id=self.id,
            results=self.results)


def get_ipxe_scripts(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIpxeScriptsResult:
    """
    Use this data source to retrieve a list of the names of the account's IPXE Scripts.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    scripts = ovh.Me.get_ipxe_scripts()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ovh:Me/getIpxeScripts:getIpxeScripts', __args__, opts=opts, typ=GetIpxeScriptsResult).value

    return AwaitableGetIpxeScriptsResult(
        id=__ret__.id,
        results=__ret__.results)
