# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetIamReferenceActionsResult',
    'AwaitableGetIamReferenceActionsResult',
    'get_iam_reference_actions',
    'get_iam_reference_actions_output',
]

@pulumi.output_type
class GetIamReferenceActionsResult:
    """
    A collection of values returned by getIamReferenceActions.
    """
    def __init__(__self__, actions=None, id=None, type=None):
        if actions and not isinstance(actions, list):
            raise TypeError("Expected argument 'actions' to be a list")
        pulumi.set(__self__, "actions", actions)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if type and not isinstance(type, str):
            raise TypeError("Expected argument 'type' to be a str")
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def actions(self) -> Sequence['outputs.GetIamReferenceActionsActionResult']:
        """
        List of actions
        """
        return pulumi.get(self, "actions")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")


class AwaitableGetIamReferenceActionsResult(GetIamReferenceActionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIamReferenceActionsResult(
            actions=self.actions,
            id=self.id,
            type=self.type)


def get_iam_reference_actions(type: Optional[str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIamReferenceActionsResult:
    """
    Use this data source to list the IAM action associated with a resource type.

    ## Important

    > Using this resource requires that the account is enrolled in the OVHcloud [IAM beta](https://labs.ovhcloud.com/en/iam/)


    :param str type: Kind of resource we want the actions for
    """
    __args__ = dict()
    __args__['type'] = type
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ovh:Dbaas/getIamReferenceActions:getIamReferenceActions', __args__, opts=opts, typ=GetIamReferenceActionsResult).value

    return AwaitableGetIamReferenceActionsResult(
        actions=pulumi.get(__ret__, 'actions'),
        id=pulumi.get(__ret__, 'id'),
        type=pulumi.get(__ret__, 'type'))


@_utilities.lift_output_func(get_iam_reference_actions)
def get_iam_reference_actions_output(type: Optional[pulumi.Input[str]] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetIamReferenceActionsResult]:
    """
    Use this data source to list the IAM action associated with a resource type.

    ## Important

    > Using this resource requires that the account is enrolled in the OVHcloud [IAM beta](https://labs.ovhcloud.com/en/iam/)


    :param str type: Kind of resource we want the actions for
    """
    ...
