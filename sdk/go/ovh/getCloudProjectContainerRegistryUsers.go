// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of users of a container registry associated with a public cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.LookupCloudProjectContainerRegistry(ctx, &GetCloudProjectContainerRegistryArgs{
//				ServiceName: "XXXXXX",
//				RegistryId:  "yyyy",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ovh.LookupCloudProjectContainerRegistryUsers(ctx, &GetCloudProjectContainerRegistryUsersArgs{
//				ServiceName: ovh_cloud_project_containerregistry.Registry.Service_name,
//				RegistryId:  ovh_cloud_project_containerregistry.Registry.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCloudProjectContainerRegistryUsers(ctx *pulumi.Context, args *LookupCloudProjectContainerRegistryUsersArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectContainerRegistryUsersResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupCloudProjectContainerRegistryUsersResult
	err := ctx.Invoke("ovh:index/getCloudProjectContainerRegistryUsers:getCloudProjectContainerRegistryUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectContainerRegistryUsers.
type LookupCloudProjectContainerRegistryUsersArgs struct {
	// Registry ID
	RegistryId string `pulumi:"registryId"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectContainerRegistryUsers.
type LookupCloudProjectContainerRegistryUsersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	RegistryId string `pulumi:"registryId"`
	// The list of users of the container registry associated with the project.
	Results     []GetCloudProjectContainerRegistryUsersResult `pulumi:"results"`
	ServiceName string                                        `pulumi:"serviceName"`
}

func LookupCloudProjectContainerRegistryUsersOutput(ctx *pulumi.Context, args LookupCloudProjectContainerRegistryUsersOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectContainerRegistryUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectContainerRegistryUsersResult, error) {
			args := v.(LookupCloudProjectContainerRegistryUsersArgs)
			r, err := LookupCloudProjectContainerRegistryUsers(ctx, &args, opts...)
			var s LookupCloudProjectContainerRegistryUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectContainerRegistryUsersResultOutput)
}

// A collection of arguments for invoking getCloudProjectContainerRegistryUsers.
type LookupCloudProjectContainerRegistryUsersOutputArgs struct {
	// Registry ID
	RegistryId pulumi.StringInput `pulumi:"registryId"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupCloudProjectContainerRegistryUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectContainerRegistryUsersArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectContainerRegistryUsers.
type LookupCloudProjectContainerRegistryUsersResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectContainerRegistryUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectContainerRegistryUsersResult)(nil)).Elem()
}

func (o LookupCloudProjectContainerRegistryUsersResultOutput) ToLookupCloudProjectContainerRegistryUsersResultOutput() LookupCloudProjectContainerRegistryUsersResultOutput {
	return o
}

func (o LookupCloudProjectContainerRegistryUsersResultOutput) ToLookupCloudProjectContainerRegistryUsersResultOutputWithContext(ctx context.Context) LookupCloudProjectContainerRegistryUsersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudProjectContainerRegistryUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectContainerRegistryUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCloudProjectContainerRegistryUsersResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectContainerRegistryUsersResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

// The list of users of the container registry associated with the project.
func (o LookupCloudProjectContainerRegistryUsersResultOutput) Results() GetCloudProjectContainerRegistryUsersResultArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectContainerRegistryUsersResult) []GetCloudProjectContainerRegistryUsersResult {
		return v.Results
	}).(GetCloudProjectContainerRegistryUsersResultArrayOutput)
}

func (o LookupCloudProjectContainerRegistryUsersResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectContainerRegistryUsersResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectContainerRegistryUsersResultOutput{})
}
