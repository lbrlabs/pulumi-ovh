// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manage rules for TCP route.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			reject, err := ovh.NewIpLoadBalancingTcpRoute(ctx, "reject", &ovh.IpLoadBalancingTcpRouteArgs{
//				ServiceName: pulumi.String("loadbalancer-xxxxxxxxxxxxxxxxxx"),
//				Weight:      pulumi.Int(1),
//				FrontendId:  pulumi.Int(11111),
//				Action: &IpLoadBalancingTcpRouteActionArgs{
//					Type: pulumi.String("reject"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ovh.NewIpLoadBalancingTcpRouteRule(ctx, "examplerule", &ovh.IpLoadBalancingTcpRouteRuleArgs{
//				ServiceName: pulumi.String("loadbalancer-xxxxxxxxxxxxxxxxxx"),
//				RouteId:     reject.ID(),
//				DisplayName: pulumi.String("Match example.com host"),
//				Field:       pulumi.String("sni"),
//				Match:       pulumi.String("is"),
//				Negate:      pulumi.Bool(false),
//				Pattern:     pulumi.String("example.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type IpLoadBalancingTcpRouteRule struct {
	pulumi.CustomResourceState

	// Human readable name for your rule, this field is for you
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
	Field pulumi.StringOutput `pulumi:"field"`
	// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
	Match pulumi.StringOutput `pulumi:"match"`
	// Invert the matching operator effect
	Negate pulumi.BoolOutput `pulumi:"negate"`
	// Value to match against this match. Interpretation if this field depends on the match and field
	Pattern pulumi.StringPtrOutput `pulumi:"pattern"`
	// The route to apply this rule
	RouteId pulumi.StringOutput `pulumi:"routeId"`
	// The internal name of your IP load balancing
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
	SubField pulumi.StringPtrOutput `pulumi:"subField"`
}

// NewIpLoadBalancingTcpRouteRule registers a new resource with the given unique name, arguments, and options.
func NewIpLoadBalancingTcpRouteRule(ctx *pulumi.Context,
	name string, args *IpLoadBalancingTcpRouteRuleArgs, opts ...pulumi.ResourceOption) (*IpLoadBalancingTcpRouteRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Field == nil {
		return nil, errors.New("invalid value for required argument 'Field'")
	}
	if args.Match == nil {
		return nil, errors.New("invalid value for required argument 'Match'")
	}
	if args.RouteId == nil {
		return nil, errors.New("invalid value for required argument 'RouteId'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource IpLoadBalancingTcpRouteRule
	err := ctx.RegisterResource("ovh:index/ipLoadBalancingTcpRouteRule:IpLoadBalancingTcpRouteRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpLoadBalancingTcpRouteRule gets an existing IpLoadBalancingTcpRouteRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpLoadBalancingTcpRouteRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpLoadBalancingTcpRouteRuleState, opts ...pulumi.ResourceOption) (*IpLoadBalancingTcpRouteRule, error) {
	var resource IpLoadBalancingTcpRouteRule
	err := ctx.ReadResource("ovh:index/ipLoadBalancingTcpRouteRule:IpLoadBalancingTcpRouteRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpLoadBalancingTcpRouteRule resources.
type ipLoadBalancingTcpRouteRuleState struct {
	// Human readable name for your rule, this field is for you
	DisplayName *string `pulumi:"displayName"`
	// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
	Field *string `pulumi:"field"`
	// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
	Match *string `pulumi:"match"`
	// Invert the matching operator effect
	Negate *bool `pulumi:"negate"`
	// Value to match against this match. Interpretation if this field depends on the match and field
	Pattern *string `pulumi:"pattern"`
	// The route to apply this rule
	RouteId *string `pulumi:"routeId"`
	// The internal name of your IP load balancing
	ServiceName *string `pulumi:"serviceName"`
	// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
	SubField *string `pulumi:"subField"`
}

type IpLoadBalancingTcpRouteRuleState struct {
	// Human readable name for your rule, this field is for you
	DisplayName pulumi.StringPtrInput
	// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
	Field pulumi.StringPtrInput
	// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
	Match pulumi.StringPtrInput
	// Invert the matching operator effect
	Negate pulumi.BoolPtrInput
	// Value to match against this match. Interpretation if this field depends on the match and field
	Pattern pulumi.StringPtrInput
	// The route to apply this rule
	RouteId pulumi.StringPtrInput
	// The internal name of your IP load balancing
	ServiceName pulumi.StringPtrInput
	// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
	SubField pulumi.StringPtrInput
}

func (IpLoadBalancingTcpRouteRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipLoadBalancingTcpRouteRuleState)(nil)).Elem()
}

type ipLoadBalancingTcpRouteRuleArgs struct {
	// Human readable name for your rule, this field is for you
	DisplayName *string `pulumi:"displayName"`
	// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
	Field string `pulumi:"field"`
	// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
	Match string `pulumi:"match"`
	// Invert the matching operator effect
	Negate *bool `pulumi:"negate"`
	// Value to match against this match. Interpretation if this field depends on the match and field
	Pattern *string `pulumi:"pattern"`
	// The route to apply this rule
	RouteId string `pulumi:"routeId"`
	// The internal name of your IP load balancing
	ServiceName string `pulumi:"serviceName"`
	// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
	SubField *string `pulumi:"subField"`
}

// The set of arguments for constructing a IpLoadBalancingTcpRouteRule resource.
type IpLoadBalancingTcpRouteRuleArgs struct {
	// Human readable name for your rule, this field is for you
	DisplayName pulumi.StringPtrInput
	// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
	Field pulumi.StringInput
	// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
	Match pulumi.StringInput
	// Invert the matching operator effect
	Negate pulumi.BoolPtrInput
	// Value to match against this match. Interpretation if this field depends on the match and field
	Pattern pulumi.StringPtrInput
	// The route to apply this rule
	RouteId pulumi.StringInput
	// The internal name of your IP load balancing
	ServiceName pulumi.StringInput
	// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
	SubField pulumi.StringPtrInput
}

func (IpLoadBalancingTcpRouteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipLoadBalancingTcpRouteRuleArgs)(nil)).Elem()
}

type IpLoadBalancingTcpRouteRuleInput interface {
	pulumi.Input

	ToIpLoadBalancingTcpRouteRuleOutput() IpLoadBalancingTcpRouteRuleOutput
	ToIpLoadBalancingTcpRouteRuleOutputWithContext(ctx context.Context) IpLoadBalancingTcpRouteRuleOutput
}

func (*IpLoadBalancingTcpRouteRule) ElementType() reflect.Type {
	return reflect.TypeOf((**IpLoadBalancingTcpRouteRule)(nil)).Elem()
}

func (i *IpLoadBalancingTcpRouteRule) ToIpLoadBalancingTcpRouteRuleOutput() IpLoadBalancingTcpRouteRuleOutput {
	return i.ToIpLoadBalancingTcpRouteRuleOutputWithContext(context.Background())
}

func (i *IpLoadBalancingTcpRouteRule) ToIpLoadBalancingTcpRouteRuleOutputWithContext(ctx context.Context) IpLoadBalancingTcpRouteRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpLoadBalancingTcpRouteRuleOutput)
}

// IpLoadBalancingTcpRouteRuleArrayInput is an input type that accepts IpLoadBalancingTcpRouteRuleArray and IpLoadBalancingTcpRouteRuleArrayOutput values.
// You can construct a concrete instance of `IpLoadBalancingTcpRouteRuleArrayInput` via:
//
//	IpLoadBalancingTcpRouteRuleArray{ IpLoadBalancingTcpRouteRuleArgs{...} }
type IpLoadBalancingTcpRouteRuleArrayInput interface {
	pulumi.Input

	ToIpLoadBalancingTcpRouteRuleArrayOutput() IpLoadBalancingTcpRouteRuleArrayOutput
	ToIpLoadBalancingTcpRouteRuleArrayOutputWithContext(context.Context) IpLoadBalancingTcpRouteRuleArrayOutput
}

type IpLoadBalancingTcpRouteRuleArray []IpLoadBalancingTcpRouteRuleInput

func (IpLoadBalancingTcpRouteRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpLoadBalancingTcpRouteRule)(nil)).Elem()
}

func (i IpLoadBalancingTcpRouteRuleArray) ToIpLoadBalancingTcpRouteRuleArrayOutput() IpLoadBalancingTcpRouteRuleArrayOutput {
	return i.ToIpLoadBalancingTcpRouteRuleArrayOutputWithContext(context.Background())
}

func (i IpLoadBalancingTcpRouteRuleArray) ToIpLoadBalancingTcpRouteRuleArrayOutputWithContext(ctx context.Context) IpLoadBalancingTcpRouteRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpLoadBalancingTcpRouteRuleArrayOutput)
}

// IpLoadBalancingTcpRouteRuleMapInput is an input type that accepts IpLoadBalancingTcpRouteRuleMap and IpLoadBalancingTcpRouteRuleMapOutput values.
// You can construct a concrete instance of `IpLoadBalancingTcpRouteRuleMapInput` via:
//
//	IpLoadBalancingTcpRouteRuleMap{ "key": IpLoadBalancingTcpRouteRuleArgs{...} }
type IpLoadBalancingTcpRouteRuleMapInput interface {
	pulumi.Input

	ToIpLoadBalancingTcpRouteRuleMapOutput() IpLoadBalancingTcpRouteRuleMapOutput
	ToIpLoadBalancingTcpRouteRuleMapOutputWithContext(context.Context) IpLoadBalancingTcpRouteRuleMapOutput
}

type IpLoadBalancingTcpRouteRuleMap map[string]IpLoadBalancingTcpRouteRuleInput

func (IpLoadBalancingTcpRouteRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpLoadBalancingTcpRouteRule)(nil)).Elem()
}

func (i IpLoadBalancingTcpRouteRuleMap) ToIpLoadBalancingTcpRouteRuleMapOutput() IpLoadBalancingTcpRouteRuleMapOutput {
	return i.ToIpLoadBalancingTcpRouteRuleMapOutputWithContext(context.Background())
}

func (i IpLoadBalancingTcpRouteRuleMap) ToIpLoadBalancingTcpRouteRuleMapOutputWithContext(ctx context.Context) IpLoadBalancingTcpRouteRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpLoadBalancingTcpRouteRuleMapOutput)
}

type IpLoadBalancingTcpRouteRuleOutput struct{ *pulumi.OutputState }

func (IpLoadBalancingTcpRouteRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpLoadBalancingTcpRouteRule)(nil)).Elem()
}

func (o IpLoadBalancingTcpRouteRuleOutput) ToIpLoadBalancingTcpRouteRuleOutput() IpLoadBalancingTcpRouteRuleOutput {
	return o
}

func (o IpLoadBalancingTcpRouteRuleOutput) ToIpLoadBalancingTcpRouteRuleOutputWithContext(ctx context.Context) IpLoadBalancingTcpRouteRuleOutput {
	return o
}

// Human readable name for your rule, this field is for you
func (o IpLoadBalancingTcpRouteRuleOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpLoadBalancingTcpRouteRule) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Name of the field to match like "protocol" or "host". See "/ipLoadbalancing/{serviceName}/availableRouteRules" for a list of available rules
func (o IpLoadBalancingTcpRouteRuleOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v *IpLoadBalancingTcpRouteRule) pulumi.StringOutput { return v.Field }).(pulumi.StringOutput)
}

// Matching operator. Not all operators are available for all fields. See "/ipLoadbalancing/{serviceName}/availableRouteRules"
func (o IpLoadBalancingTcpRouteRuleOutput) Match() pulumi.StringOutput {
	return o.ApplyT(func(v *IpLoadBalancingTcpRouteRule) pulumi.StringOutput { return v.Match }).(pulumi.StringOutput)
}

// Invert the matching operator effect
func (o IpLoadBalancingTcpRouteRuleOutput) Negate() pulumi.BoolOutput {
	return o.ApplyT(func(v *IpLoadBalancingTcpRouteRule) pulumi.BoolOutput { return v.Negate }).(pulumi.BoolOutput)
}

// Value to match against this match. Interpretation if this field depends on the match and field
func (o IpLoadBalancingTcpRouteRuleOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpLoadBalancingTcpRouteRule) pulumi.StringPtrOutput { return v.Pattern }).(pulumi.StringPtrOutput)
}

// The route to apply this rule
func (o IpLoadBalancingTcpRouteRuleOutput) RouteId() pulumi.StringOutput {
	return o.ApplyT(func(v *IpLoadBalancingTcpRouteRule) pulumi.StringOutput { return v.RouteId }).(pulumi.StringOutput)
}

// The internal name of your IP load balancing
func (o IpLoadBalancingTcpRouteRuleOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *IpLoadBalancingTcpRouteRule) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Name of sub-field, if applicable. This may be a Cookie or Header name for instance
func (o IpLoadBalancingTcpRouteRuleOutput) SubField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpLoadBalancingTcpRouteRule) pulumi.StringPtrOutput { return v.SubField }).(pulumi.StringPtrOutput)
}

type IpLoadBalancingTcpRouteRuleArrayOutput struct{ *pulumi.OutputState }

func (IpLoadBalancingTcpRouteRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IpLoadBalancingTcpRouteRule)(nil)).Elem()
}

func (o IpLoadBalancingTcpRouteRuleArrayOutput) ToIpLoadBalancingTcpRouteRuleArrayOutput() IpLoadBalancingTcpRouteRuleArrayOutput {
	return o
}

func (o IpLoadBalancingTcpRouteRuleArrayOutput) ToIpLoadBalancingTcpRouteRuleArrayOutputWithContext(ctx context.Context) IpLoadBalancingTcpRouteRuleArrayOutput {
	return o
}

func (o IpLoadBalancingTcpRouteRuleArrayOutput) Index(i pulumi.IntInput) IpLoadBalancingTcpRouteRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IpLoadBalancingTcpRouteRule {
		return vs[0].([]*IpLoadBalancingTcpRouteRule)[vs[1].(int)]
	}).(IpLoadBalancingTcpRouteRuleOutput)
}

type IpLoadBalancingTcpRouteRuleMapOutput struct{ *pulumi.OutputState }

func (IpLoadBalancingTcpRouteRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IpLoadBalancingTcpRouteRule)(nil)).Elem()
}

func (o IpLoadBalancingTcpRouteRuleMapOutput) ToIpLoadBalancingTcpRouteRuleMapOutput() IpLoadBalancingTcpRouteRuleMapOutput {
	return o
}

func (o IpLoadBalancingTcpRouteRuleMapOutput) ToIpLoadBalancingTcpRouteRuleMapOutputWithContext(ctx context.Context) IpLoadBalancingTcpRouteRuleMapOutput {
	return o
}

func (o IpLoadBalancingTcpRouteRuleMapOutput) MapIndex(k pulumi.StringInput) IpLoadBalancingTcpRouteRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IpLoadBalancingTcpRouteRule {
		return vs[0].(map[string]*IpLoadBalancingTcpRouteRule)[vs[1].(string)]
	}).(IpLoadBalancingTcpRouteRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpLoadBalancingTcpRouteRuleInput)(nil)).Elem(), &IpLoadBalancingTcpRouteRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpLoadBalancingTcpRouteRuleArrayInput)(nil)).Elem(), IpLoadBalancingTcpRouteRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpLoadBalancingTcpRouteRuleMapInput)(nil)).Elem(), IpLoadBalancingTcpRouteRuleMap{})
	pulumi.RegisterOutputType(IpLoadBalancingTcpRouteRuleOutput{})
	pulumi.RegisterOutputType(IpLoadBalancingTcpRouteRuleArrayOutput{})
	pulumi.RegisterOutputType(IpLoadBalancingTcpRouteRuleMapOutput{})
}
