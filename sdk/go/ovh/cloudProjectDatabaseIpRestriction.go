// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Apply IP restrictions to an OVHcloud Managed Database cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.LookupCloudProjectDatabase(ctx, &GetCloudProjectDatabaseArgs{
//				ServiceName: "XXXX",
//				Engine:      "YYYY",
//				ClusterId:   "ZZZZ",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ovh.NewCloudProjectDatabaseIpRestriction(ctx, "iprestriction", &ovh.CloudProjectDatabaseIpRestrictionArgs{
//				ServiceName: pulumi.Any(ovh_cloud_project_database.Db.Service_name),
//				Engine:      pulumi.Any(ovh_cloud_project_database.Db.Engine),
//				ClusterId:   pulumi.Any(ovh_cloud_project_database.Db.Cluster_id),
//				Ip:          pulumi.String("178.97.6.0/24"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OVHcloud Managed database cluster IP restrictions can be imported using the `service_name`, `engine`, `cluster_id` and the `ip`, separated by "/" E.g.,
//
// ```sh
//
//	$ pulumi import ovh:index/cloudProjectDatabaseIpRestriction:CloudProjectDatabaseIpRestriction my_ip_restriction <service_name>/<engine>/<cluster_id>/178.97.6.0/24
//
// ```
type CloudProjectDatabaseIpRestriction struct {
	pulumi.CustomResourceState

	// Cluster ID.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Description of the IP restriction.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.
	// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).
	Engine pulumi.StringOutput `pulumi:"engine"`
	// Authorized IP.
	Ip pulumi.StringOutput `pulumi:"ip"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Current status of the IP restriction.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewCloudProjectDatabaseIpRestriction registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseIpRestriction(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseIpRestrictionArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseIpRestriction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	if args.Engine == nil {
		return nil, errors.New("invalid value for required argument 'Engine'")
	}
	if args.Ip == nil {
		return nil, errors.New("invalid value for required argument 'Ip'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CloudProjectDatabaseIpRestriction
	err := ctx.RegisterResource("ovh:index/cloudProjectDatabaseIpRestriction:CloudProjectDatabaseIpRestriction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseIpRestriction gets an existing CloudProjectDatabaseIpRestriction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseIpRestriction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseIpRestrictionState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseIpRestriction, error) {
	var resource CloudProjectDatabaseIpRestriction
	err := ctx.ReadResource("ovh:index/cloudProjectDatabaseIpRestriction:CloudProjectDatabaseIpRestriction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseIpRestriction resources.
type cloudProjectDatabaseIpRestrictionState struct {
	// Cluster ID.
	ClusterId *string `pulumi:"clusterId"`
	// Description of the IP restriction.
	Description *string `pulumi:"description"`
	// The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.
	// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).
	Engine *string `pulumi:"engine"`
	// Authorized IP.
	Ip *string `pulumi:"ip"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName *string `pulumi:"serviceName"`
	// Current status of the IP restriction.
	Status *string `pulumi:"status"`
}

type CloudProjectDatabaseIpRestrictionState struct {
	// Cluster ID.
	ClusterId pulumi.StringPtrInput
	// Description of the IP restriction.
	Description pulumi.StringPtrInput
	// The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.
	// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).
	Engine pulumi.StringPtrInput
	// Authorized IP.
	Ip pulumi.StringPtrInput
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringPtrInput
	// Current status of the IP restriction.
	Status pulumi.StringPtrInput
}

func (CloudProjectDatabaseIpRestrictionState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseIpRestrictionState)(nil)).Elem()
}

type cloudProjectDatabaseIpRestrictionArgs struct {
	// Cluster ID.
	ClusterId string `pulumi:"clusterId"`
	// Description of the IP restriction.
	Description *string `pulumi:"description"`
	// The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.
	// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).
	Engine string `pulumi:"engine"`
	// Authorized IP.
	Ip string `pulumi:"ip"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a CloudProjectDatabaseIpRestriction resource.
type CloudProjectDatabaseIpRestrictionArgs struct {
	// Cluster ID.
	ClusterId pulumi.StringInput
	// Description of the IP restriction.
	Description pulumi.StringPtrInput
	// The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.
	// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).
	Engine pulumi.StringInput
	// Authorized IP.
	Ip pulumi.StringInput
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput
}

func (CloudProjectDatabaseIpRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseIpRestrictionArgs)(nil)).Elem()
}

type CloudProjectDatabaseIpRestrictionInput interface {
	pulumi.Input

	ToCloudProjectDatabaseIpRestrictionOutput() CloudProjectDatabaseIpRestrictionOutput
	ToCloudProjectDatabaseIpRestrictionOutputWithContext(ctx context.Context) CloudProjectDatabaseIpRestrictionOutput
}

func (*CloudProjectDatabaseIpRestriction) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseIpRestriction)(nil)).Elem()
}

func (i *CloudProjectDatabaseIpRestriction) ToCloudProjectDatabaseIpRestrictionOutput() CloudProjectDatabaseIpRestrictionOutput {
	return i.ToCloudProjectDatabaseIpRestrictionOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseIpRestriction) ToCloudProjectDatabaseIpRestrictionOutputWithContext(ctx context.Context) CloudProjectDatabaseIpRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseIpRestrictionOutput)
}

// CloudProjectDatabaseIpRestrictionArrayInput is an input type that accepts CloudProjectDatabaseIpRestrictionArray and CloudProjectDatabaseIpRestrictionArrayOutput values.
// You can construct a concrete instance of `CloudProjectDatabaseIpRestrictionArrayInput` via:
//
//	CloudProjectDatabaseIpRestrictionArray{ CloudProjectDatabaseIpRestrictionArgs{...} }
type CloudProjectDatabaseIpRestrictionArrayInput interface {
	pulumi.Input

	ToCloudProjectDatabaseIpRestrictionArrayOutput() CloudProjectDatabaseIpRestrictionArrayOutput
	ToCloudProjectDatabaseIpRestrictionArrayOutputWithContext(context.Context) CloudProjectDatabaseIpRestrictionArrayOutput
}

type CloudProjectDatabaseIpRestrictionArray []CloudProjectDatabaseIpRestrictionInput

func (CloudProjectDatabaseIpRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectDatabaseIpRestriction)(nil)).Elem()
}

func (i CloudProjectDatabaseIpRestrictionArray) ToCloudProjectDatabaseIpRestrictionArrayOutput() CloudProjectDatabaseIpRestrictionArrayOutput {
	return i.ToCloudProjectDatabaseIpRestrictionArrayOutputWithContext(context.Background())
}

func (i CloudProjectDatabaseIpRestrictionArray) ToCloudProjectDatabaseIpRestrictionArrayOutputWithContext(ctx context.Context) CloudProjectDatabaseIpRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseIpRestrictionArrayOutput)
}

// CloudProjectDatabaseIpRestrictionMapInput is an input type that accepts CloudProjectDatabaseIpRestrictionMap and CloudProjectDatabaseIpRestrictionMapOutput values.
// You can construct a concrete instance of `CloudProjectDatabaseIpRestrictionMapInput` via:
//
//	CloudProjectDatabaseIpRestrictionMap{ "key": CloudProjectDatabaseIpRestrictionArgs{...} }
type CloudProjectDatabaseIpRestrictionMapInput interface {
	pulumi.Input

	ToCloudProjectDatabaseIpRestrictionMapOutput() CloudProjectDatabaseIpRestrictionMapOutput
	ToCloudProjectDatabaseIpRestrictionMapOutputWithContext(context.Context) CloudProjectDatabaseIpRestrictionMapOutput
}

type CloudProjectDatabaseIpRestrictionMap map[string]CloudProjectDatabaseIpRestrictionInput

func (CloudProjectDatabaseIpRestrictionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectDatabaseIpRestriction)(nil)).Elem()
}

func (i CloudProjectDatabaseIpRestrictionMap) ToCloudProjectDatabaseIpRestrictionMapOutput() CloudProjectDatabaseIpRestrictionMapOutput {
	return i.ToCloudProjectDatabaseIpRestrictionMapOutputWithContext(context.Background())
}

func (i CloudProjectDatabaseIpRestrictionMap) ToCloudProjectDatabaseIpRestrictionMapOutputWithContext(ctx context.Context) CloudProjectDatabaseIpRestrictionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseIpRestrictionMapOutput)
}

type CloudProjectDatabaseIpRestrictionOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseIpRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseIpRestriction)(nil)).Elem()
}

func (o CloudProjectDatabaseIpRestrictionOutput) ToCloudProjectDatabaseIpRestrictionOutput() CloudProjectDatabaseIpRestrictionOutput {
	return o
}

func (o CloudProjectDatabaseIpRestrictionOutput) ToCloudProjectDatabaseIpRestrictionOutputWithContext(ctx context.Context) CloudProjectDatabaseIpRestrictionOutput {
	return o
}

// Cluster ID.
func (o CloudProjectDatabaseIpRestrictionOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Description of the IP restriction.
func (o CloudProjectDatabaseIpRestrictionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit.
// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).
func (o CloudProjectDatabaseIpRestrictionOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// Authorized IP.
func (o CloudProjectDatabaseIpRestrictionOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringOutput { return v.Ip }).(pulumi.StringOutput)
}

// The id of the public cloud project. If omitted,
// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
func (o CloudProjectDatabaseIpRestrictionOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Current status of the IP restriction.
func (o CloudProjectDatabaseIpRestrictionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseIpRestriction) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type CloudProjectDatabaseIpRestrictionArrayOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseIpRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectDatabaseIpRestriction)(nil)).Elem()
}

func (o CloudProjectDatabaseIpRestrictionArrayOutput) ToCloudProjectDatabaseIpRestrictionArrayOutput() CloudProjectDatabaseIpRestrictionArrayOutput {
	return o
}

func (o CloudProjectDatabaseIpRestrictionArrayOutput) ToCloudProjectDatabaseIpRestrictionArrayOutputWithContext(ctx context.Context) CloudProjectDatabaseIpRestrictionArrayOutput {
	return o
}

func (o CloudProjectDatabaseIpRestrictionArrayOutput) Index(i pulumi.IntInput) CloudProjectDatabaseIpRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudProjectDatabaseIpRestriction {
		return vs[0].([]*CloudProjectDatabaseIpRestriction)[vs[1].(int)]
	}).(CloudProjectDatabaseIpRestrictionOutput)
}

type CloudProjectDatabaseIpRestrictionMapOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseIpRestrictionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectDatabaseIpRestriction)(nil)).Elem()
}

func (o CloudProjectDatabaseIpRestrictionMapOutput) ToCloudProjectDatabaseIpRestrictionMapOutput() CloudProjectDatabaseIpRestrictionMapOutput {
	return o
}

func (o CloudProjectDatabaseIpRestrictionMapOutput) ToCloudProjectDatabaseIpRestrictionMapOutputWithContext(ctx context.Context) CloudProjectDatabaseIpRestrictionMapOutput {
	return o
}

func (o CloudProjectDatabaseIpRestrictionMapOutput) MapIndex(k pulumi.StringInput) CloudProjectDatabaseIpRestrictionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudProjectDatabaseIpRestriction {
		return vs[0].(map[string]*CloudProjectDatabaseIpRestriction)[vs[1].(string)]
	}).(CloudProjectDatabaseIpRestrictionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseIpRestrictionInput)(nil)).Elem(), &CloudProjectDatabaseIpRestriction{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseIpRestrictionArrayInput)(nil)).Elem(), CloudProjectDatabaseIpRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseIpRestrictionMapInput)(nil)).Elem(), CloudProjectDatabaseIpRestrictionMap{})
	pulumi.RegisterOutputType(CloudProjectDatabaseIpRestrictionOutput{})
	pulumi.RegisterOutputType(CloudProjectDatabaseIpRestrictionArrayOutput{})
	pulumi.RegisterOutputType(CloudProjectDatabaseIpRestrictionMapOutput{})
}
