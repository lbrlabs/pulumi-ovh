// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a user of a database cluster associated with a public cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			user, err := ovh.LookupCloudProjectDatabaseUser(ctx, &GetCloudProjectDatabaseUserArgs{
//				ServiceName: "XXX",
//				Engine:      "YYY",
//				ClusterId:   "ZZZ",
//				Name:        "UUU",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("userName", user.Name)
//			return nil
//		})
//	}
//
// ```
func LookupCloudProjectDatabaseUser(ctx *pulumi.Context, args *LookupCloudProjectDatabaseUserArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectDatabaseUserResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupCloudProjectDatabaseUserResult
	err := ctx.Invoke("ovh:index/getCloudProjectDatabaseUser:getCloudProjectDatabaseUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectDatabaseUser.
type LookupCloudProjectDatabaseUserArgs struct {
	// Cluster ID
	ClusterId string `pulumi:"clusterId"`
	// The engine of the database cluster you want user information. To get a full list of available engine visit :
	// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\
	// Available engines for this resource (other have specific resource):
	// * `cassandra`
	// * `kafka`
	// * `kafkaConnect`
	// * `mysql`
	Engine string `pulumi:"engine"`
	// Name of the user.
	Name string `pulumi:"name"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectDatabaseUser.
type LookupCloudProjectDatabaseUserResult struct {
	ClusterId string `pulumi:"clusterId"`
	// Date of the creation of the user.
	CreatedAt string `pulumi:"createdAt"`
	Engine    string `pulumi:"engine"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the user.
	Name        string `pulumi:"name"`
	ServiceName string `pulumi:"serviceName"`
	// Current status of the user.
	Status string `pulumi:"status"`
}

func LookupCloudProjectDatabaseUserOutput(ctx *pulumi.Context, args LookupCloudProjectDatabaseUserOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectDatabaseUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectDatabaseUserResult, error) {
			args := v.(LookupCloudProjectDatabaseUserArgs)
			r, err := LookupCloudProjectDatabaseUser(ctx, &args, opts...)
			var s LookupCloudProjectDatabaseUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectDatabaseUserResultOutput)
}

// A collection of arguments for invoking getCloudProjectDatabaseUser.
type LookupCloudProjectDatabaseUserOutputArgs struct {
	// Cluster ID
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The engine of the database cluster you want user information. To get a full list of available engine visit :
	// [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\
	// Available engines for this resource (other have specific resource):
	// * `cassandra`
	// * `kafka`
	// * `kafkaConnect`
	// * `mysql`
	Engine pulumi.StringInput `pulumi:"engine"`
	// Name of the user.
	Name pulumi.StringInput `pulumi:"name"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupCloudProjectDatabaseUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseUserArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectDatabaseUser.
type LookupCloudProjectDatabaseUserResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectDatabaseUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseUserResult)(nil)).Elem()
}

func (o LookupCloudProjectDatabaseUserResultOutput) ToLookupCloudProjectDatabaseUserResultOutput() LookupCloudProjectDatabaseUserResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseUserResultOutput) ToLookupCloudProjectDatabaseUserResultOutputWithContext(ctx context.Context) LookupCloudProjectDatabaseUserResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Date of the creation of the user.
func (o LookupCloudProjectDatabaseUserResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseUserResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseUserResultOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseUserResult) string { return v.Engine }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudProjectDatabaseUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the user.
func (o LookupCloudProjectDatabaseUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupCloudProjectDatabaseUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Current status of the user.
func (o LookupCloudProjectDatabaseUserResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseUserResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectDatabaseUserResultOutput{})
}
