// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the details of a failover ip address of a service in a public cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.LookupCloudProjectFailoverIpAttach(ctx, &GetCloudProjectFailoverIpAttachArgs{
//				Ip:          pulumi.StringRef("XXXXXX"),
//				ServiceName: "XXXXXX",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCloudProjectFailoverIpAttach(ctx *pulumi.Context, args *LookupCloudProjectFailoverIpAttachArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectFailoverIpAttachResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupCloudProjectFailoverIpAttachResult
	err := ctx.Invoke("ovh:index/getCloudProjectFailoverIpAttach:getCloudProjectFailoverIpAttach", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectFailoverIpAttach.
type LookupCloudProjectFailoverIpAttachArgs struct {
	// The IP block
	Block         *string `pulumi:"block"`
	ContinentCode *string `pulumi:"continentCode"`
	GeoLoc        *string `pulumi:"geoLoc"`
	// The failover ip address to query
	Ip       *string `pulumi:"ip"`
	RoutedTo *string `pulumi:"routedTo"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectFailoverIpAttach.
type LookupCloudProjectFailoverIpAttachResult struct {
	// The IP block
	Block         string `pulumi:"block"`
	ContinentCode string `pulumi:"continentCode"`
	GeoLoc        string `pulumi:"geoLoc"`
	// The Ip id
	Id string `pulumi:"id"`
	// The Ip Address
	Ip string `pulumi:"ip"`
	// Current operation progress in percent
	Progress    int    `pulumi:"progress"`
	RoutedTo    string `pulumi:"routedTo"`
	ServiceName string `pulumi:"serviceName"`
	// Ip status, can be `ok` or `operationPending`
	Status  string `pulumi:"status"`
	SubType string `pulumi:"subType"`
}

func LookupCloudProjectFailoverIpAttachOutput(ctx *pulumi.Context, args LookupCloudProjectFailoverIpAttachOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectFailoverIpAttachResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectFailoverIpAttachResult, error) {
			args := v.(LookupCloudProjectFailoverIpAttachArgs)
			r, err := LookupCloudProjectFailoverIpAttach(ctx, &args, opts...)
			var s LookupCloudProjectFailoverIpAttachResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectFailoverIpAttachResultOutput)
}

// A collection of arguments for invoking getCloudProjectFailoverIpAttach.
type LookupCloudProjectFailoverIpAttachOutputArgs struct {
	// The IP block
	Block         pulumi.StringPtrInput `pulumi:"block"`
	ContinentCode pulumi.StringPtrInput `pulumi:"continentCode"`
	GeoLoc        pulumi.StringPtrInput `pulumi:"geoLoc"`
	// The failover ip address to query
	Ip       pulumi.StringPtrInput `pulumi:"ip"`
	RoutedTo pulumi.StringPtrInput `pulumi:"routedTo"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupCloudProjectFailoverIpAttachOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectFailoverIpAttachArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectFailoverIpAttach.
type LookupCloudProjectFailoverIpAttachResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectFailoverIpAttachResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectFailoverIpAttachResult)(nil)).Elem()
}

func (o LookupCloudProjectFailoverIpAttachResultOutput) ToLookupCloudProjectFailoverIpAttachResultOutput() LookupCloudProjectFailoverIpAttachResultOutput {
	return o
}

func (o LookupCloudProjectFailoverIpAttachResultOutput) ToLookupCloudProjectFailoverIpAttachResultOutputWithContext(ctx context.Context) LookupCloudProjectFailoverIpAttachResultOutput {
	return o
}

// The IP block
func (o LookupCloudProjectFailoverIpAttachResultOutput) Block() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectFailoverIpAttachResult) string { return v.Block }).(pulumi.StringOutput)
}

func (o LookupCloudProjectFailoverIpAttachResultOutput) ContinentCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectFailoverIpAttachResult) string { return v.ContinentCode }).(pulumi.StringOutput)
}

func (o LookupCloudProjectFailoverIpAttachResultOutput) GeoLoc() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectFailoverIpAttachResult) string { return v.GeoLoc }).(pulumi.StringOutput)
}

// The Ip id
func (o LookupCloudProjectFailoverIpAttachResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectFailoverIpAttachResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Ip Address
func (o LookupCloudProjectFailoverIpAttachResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectFailoverIpAttachResult) string { return v.Ip }).(pulumi.StringOutput)
}

// Current operation progress in percent
func (o LookupCloudProjectFailoverIpAttachResultOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCloudProjectFailoverIpAttachResult) int { return v.Progress }).(pulumi.IntOutput)
}

func (o LookupCloudProjectFailoverIpAttachResultOutput) RoutedTo() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectFailoverIpAttachResult) string { return v.RoutedTo }).(pulumi.StringOutput)
}

func (o LookupCloudProjectFailoverIpAttachResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectFailoverIpAttachResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Ip status, can be `ok` or `operationPending`
func (o LookupCloudProjectFailoverIpAttachResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectFailoverIpAttachResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupCloudProjectFailoverIpAttachResultOutput) SubType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectFailoverIpAttachResult) string { return v.SubType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectFailoverIpAttachResultOutput{})
}
