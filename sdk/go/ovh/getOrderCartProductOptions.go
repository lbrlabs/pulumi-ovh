// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information of order cart product options.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			mycart, err := ovh.GetOrderCart(ctx, &GetOrderCartArgs{
//				OvhSubsidiary: "fr",
//				Description:   pulumi.StringRef("my cart"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ovh.LookupOrderCartProductOptions(ctx, &GetOrderCartProductOptionsArgs{
//				CartId:   mycart.Id,
//				Product:  "cloud",
//				PlanCode: "project",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOrderCartProductOptions(ctx *pulumi.Context, args *LookupOrderCartProductOptionsArgs, opts ...pulumi.InvokeOption) (*LookupOrderCartProductOptionsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupOrderCartProductOptionsResult
	err := ctx.Invoke("ovh:index/getOrderCartProductOptions:getOrderCartProductOptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrderCartProductOptions.
type LookupOrderCartProductOptionsArgs struct {
	// Cart identifier
	CartId string `pulumi:"cartId"`
	// Catalog name
	CatalogName *string `pulumi:"catalogName"`
	// Product offer identifier
	PlanCode string `pulumi:"planCode"`
	// Product
	Product string `pulumi:"product"`
}

// A collection of values returned by getOrderCartProductOptions.
type LookupOrderCartProductOptionsResult struct {
	CartId      string  `pulumi:"cartId"`
	CatalogName *string `pulumi:"catalogName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Product offer identifier
	PlanCode string `pulumi:"planCode"`
	Product  string `pulumi:"product"`
	// products results
	Results []GetOrderCartProductOptionsResult `pulumi:"results"`
}

func LookupOrderCartProductOptionsOutput(ctx *pulumi.Context, args LookupOrderCartProductOptionsOutputArgs, opts ...pulumi.InvokeOption) LookupOrderCartProductOptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOrderCartProductOptionsResult, error) {
			args := v.(LookupOrderCartProductOptionsArgs)
			r, err := LookupOrderCartProductOptions(ctx, &args, opts...)
			var s LookupOrderCartProductOptionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOrderCartProductOptionsResultOutput)
}

// A collection of arguments for invoking getOrderCartProductOptions.
type LookupOrderCartProductOptionsOutputArgs struct {
	// Cart identifier
	CartId pulumi.StringInput `pulumi:"cartId"`
	// Catalog name
	CatalogName pulumi.StringPtrInput `pulumi:"catalogName"`
	// Product offer identifier
	PlanCode pulumi.StringInput `pulumi:"planCode"`
	// Product
	Product pulumi.StringInput `pulumi:"product"`
}

func (LookupOrderCartProductOptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrderCartProductOptionsArgs)(nil)).Elem()
}

// A collection of values returned by getOrderCartProductOptions.
type LookupOrderCartProductOptionsResultOutput struct{ *pulumi.OutputState }

func (LookupOrderCartProductOptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOrderCartProductOptionsResult)(nil)).Elem()
}

func (o LookupOrderCartProductOptionsResultOutput) ToLookupOrderCartProductOptionsResultOutput() LookupOrderCartProductOptionsResultOutput {
	return o
}

func (o LookupOrderCartProductOptionsResultOutput) ToLookupOrderCartProductOptionsResultOutputWithContext(ctx context.Context) LookupOrderCartProductOptionsResultOutput {
	return o
}

func (o LookupOrderCartProductOptionsResultOutput) CartId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrderCartProductOptionsResult) string { return v.CartId }).(pulumi.StringOutput)
}

func (o LookupOrderCartProductOptionsResultOutput) CatalogName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOrderCartProductOptionsResult) *string { return v.CatalogName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOrderCartProductOptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrderCartProductOptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Product offer identifier
func (o LookupOrderCartProductOptionsResultOutput) PlanCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrderCartProductOptionsResult) string { return v.PlanCode }).(pulumi.StringOutput)
}

func (o LookupOrderCartProductOptionsResultOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOrderCartProductOptionsResult) string { return v.Product }).(pulumi.StringOutput)
}

// products results
func (o LookupOrderCartProductOptionsResultOutput) Results() GetOrderCartProductOptionsResultArrayOutput {
	return o.ApplyT(func(v LookupOrderCartProductOptionsResult) []GetOrderCartProductOptionsResult { return v.Results }).(GetOrderCartProductOptionsResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOrderCartProductOptionsResultOutput{})
}
