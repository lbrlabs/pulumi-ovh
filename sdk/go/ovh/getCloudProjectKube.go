// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get a OVH Managed Kubernetes Service cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			myKubeCluster, err := ovh.LookupCloudProjectKube(ctx, &GetCloudProjectKubeArgs{
//				ServiceName: "XXXXXX",
//				KubeId:      "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("version", myKubeCluster.Version)
//			return nil
//		})
//	}
//
// ```
func LookupCloudProjectKube(ctx *pulumi.Context, args *LookupCloudProjectKubeArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectKubeResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupCloudProjectKubeResult
	err := ctx.Invoke("ovh:index/getCloudProjectKube:getCloudProjectKube", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectKube.
type LookupCloudProjectKubeArgs struct {
	// The id of the managed kubernetes cluster.
	KubeId string `pulumi:"kubeId"`
	// The name of the managed kubernetes cluster.
	Name *string `pulumi:"name"`
	// The OVH public cloud region ID of the managed kubernetes cluster.
	Region *string `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
	// Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.
	UpdatePolicy *string `pulumi:"updatePolicy"`
	// Kubernetes version of the managed kubernetes cluster.
	Version *string `pulumi:"version"`
}

// A collection of values returned by getCloudProjectKube.
type LookupCloudProjectKubeResult struct {
	// True if control-plane is up to date.
	ControlPlaneIsUpToDate bool `pulumi:"controlPlaneIsUpToDate"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// True if all nodes and control-plane are up to date.
	IsUpToDate bool `pulumi:"isUpToDate"`
	// See Argument Reference above.
	KubeId string `pulumi:"kubeId"`
	// The name of the managed kubernetes cluster.
	Name *string `pulumi:"name"`
	// Kubernetes versions available for upgrade.
	NextUpgradeVersions []string `pulumi:"nextUpgradeVersions"`
	// Cluster nodes URL.
	NodesUrl string `pulumi:"nodesUrl"`
	// OpenStack private network (or vrack) ID to use.
	PrivateNetworkId string `pulumi:"privateNetworkId"`
	// The OVH public cloud region ID of the managed kubernetes cluster.
	Region *string `pulumi:"region"`
	// See Argument Reference above.
	ServiceName string `pulumi:"serviceName"`
	// Cluster status. Should be normally set to 'READY'.
	Status string `pulumi:"status"`
	// Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.
	UpdatePolicy *string `pulumi:"updatePolicy"`
	// Management URL of your cluster.
	Url string `pulumi:"url"`
	// Kubernetes version of the managed kubernetes cluster.
	Version *string `pulumi:"version"`
}

func LookupCloudProjectKubeOutput(ctx *pulumi.Context, args LookupCloudProjectKubeOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectKubeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectKubeResult, error) {
			args := v.(LookupCloudProjectKubeArgs)
			r, err := LookupCloudProjectKube(ctx, &args, opts...)
			var s LookupCloudProjectKubeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCloudProjectKubeResultOutput)
}

// A collection of arguments for invoking getCloudProjectKube.
type LookupCloudProjectKubeOutputArgs struct {
	// The id of the managed kubernetes cluster.
	KubeId pulumi.StringInput `pulumi:"kubeId"`
	// The name of the managed kubernetes cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The OVH public cloud region ID of the managed kubernetes cluster.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.
	UpdatePolicy pulumi.StringPtrInput `pulumi:"updatePolicy"`
	// Kubernetes version of the managed kubernetes cluster.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (LookupCloudProjectKubeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectKubeArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectKube.
type LookupCloudProjectKubeResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectKubeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectKubeResult)(nil)).Elem()
}

func (o LookupCloudProjectKubeResultOutput) ToLookupCloudProjectKubeResultOutput() LookupCloudProjectKubeResultOutput {
	return o
}

func (o LookupCloudProjectKubeResultOutput) ToLookupCloudProjectKubeResultOutputWithContext(ctx context.Context) LookupCloudProjectKubeResultOutput {
	return o
}

// True if control-plane is up to date.
func (o LookupCloudProjectKubeResultOutput) ControlPlaneIsUpToDate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) bool { return v.ControlPlaneIsUpToDate }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudProjectKubeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) string { return v.Id }).(pulumi.StringOutput)
}

// True if all nodes and control-plane are up to date.
func (o LookupCloudProjectKubeResultOutput) IsUpToDate() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) bool { return v.IsUpToDate }).(pulumi.BoolOutput)
}

// See Argument Reference above.
func (o LookupCloudProjectKubeResultOutput) KubeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) string { return v.KubeId }).(pulumi.StringOutput)
}

// The name of the managed kubernetes cluster.
func (o LookupCloudProjectKubeResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Kubernetes versions available for upgrade.
func (o LookupCloudProjectKubeResultOutput) NextUpgradeVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) []string { return v.NextUpgradeVersions }).(pulumi.StringArrayOutput)
}

// Cluster nodes URL.
func (o LookupCloudProjectKubeResultOutput) NodesUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) string { return v.NodesUrl }).(pulumi.StringOutput)
}

// OpenStack private network (or vrack) ID to use.
func (o LookupCloudProjectKubeResultOutput) PrivateNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) string { return v.PrivateNetworkId }).(pulumi.StringOutput)
}

// The OVH public cloud region ID of the managed kubernetes cluster.
func (o LookupCloudProjectKubeResultOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// See Argument Reference above.
func (o LookupCloudProjectKubeResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Cluster status. Should be normally set to 'READY'.
func (o LookupCloudProjectKubeResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) string { return v.Status }).(pulumi.StringOutput)
}

// Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.
func (o LookupCloudProjectKubeResultOutput) UpdatePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) *string { return v.UpdatePolicy }).(pulumi.StringPtrOutput)
}

// Management URL of your cluster.
func (o LookupCloudProjectKubeResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) string { return v.Url }).(pulumi.StringOutput)
}

// Kubernetes version of the managed kubernetes cluster.
func (o LookupCloudProjectKubeResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCloudProjectKubeResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectKubeResultOutput{})
}
