// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a OVH Managed Kubernetes Service cluster in a public cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.NewCloudProjectKube(ctx, "mykube", &ovh.CloudProjectKubeArgs{
//				ServiceName:      pulumi.String("xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"),
//				Region:           pulumi.String("GRA7"),
//				PrivateNetworkId: pulumi.Any(xxxxxxxx_xxxx_xxxx_xxxxx_xxxxxxxxxxxx),
//				PrivateNetworkConfiguration: &CloudProjectKubePrivateNetworkConfigurationArgs{
//					DefaultVrackGateway:            pulumi.String("10.4.0.1"),
//					PrivateNetworkRoutingAsDefault: pulumi.Bool(true),
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				ovh_cloud_project_network_private.Network1,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OVHcloud Managed Kubernetes Service clusters can be imported using the `serviceName` and the `id` of the cluster, separated by "/" E.g.,
//
// ```sh
//
//	$ pulumi import ovh:index/cloudProjectKube:CloudProjectKube my_kube_cluster a6678gggjh76hggjh7f59/a123bc45-a1b2-34c5-678d-678ghg7676ebc
//
// ```
type CloudProjectKube struct {
	pulumi.CustomResourceState

	// True if control-plane is up to date.
	ControlPlaneIsUpToDate pulumi.BoolOutput `pulumi:"controlPlaneIsUpToDate"`
	// True if all nodes and control-plane are up to date.
	IsUpToDate pulumi.BoolOutput `pulumi:"isUpToDate"`
	// The kubeconfig file. Use this file to connect to your kubernetes cluster.
	Kubeconfig pulumi.StringOutput `pulumi:"kubeconfig"`
	// The name of the kubernetes cluster.
	Name pulumi.StringOutput `pulumi:"name"`
	// Kubernetes versions available for upgrade.
	NextUpgradeVersions pulumi.StringArrayOutput `pulumi:"nextUpgradeVersions"`
	// Cluster nodes URL.
	NodesUrl pulumi.StringOutput `pulumi:"nodesUrl"`
	// The private network configuration
	// * defaultVrackGateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.
	// * privateNetworkRoutingAsDefault - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.
	PrivateNetworkConfiguration CloudProjectKubePrivateNetworkConfigurationPtrOutput `pulumi:"privateNetworkConfiguration"`
	// OpenStack private network ID to use.
	// Changing this value delete the resource(including ETCD user data). Defaults - not use private network.
	PrivateNetworkId pulumi.StringPtrOutput `pulumi:"privateNetworkId"`
	// a valid OVH public cloud region ID in which the kubernetes
	// cluster will be available. Ex.: "GRA1". Defaults to all public cloud regions.
	// Changing this value recreates the resource.
	Region pulumi.StringOutput `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Cluster status. Should be normally set to 'READY'.
	Status pulumi.StringOutput `pulumi:"status"`
	// Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE]'.
	UpdatePolicy pulumi.StringOutput `pulumi:"updatePolicy"`
	// Management URL of your cluster.
	Url pulumi.StringOutput `pulumi:"url"`
	// kubernetes version to use.
	// Changing this value updates the resource. Defaults to latest available.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewCloudProjectKube registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectKube(ctx *pulumi.Context,
	name string, args *CloudProjectKubeArgs, opts ...pulumi.ResourceOption) (*CloudProjectKube, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource CloudProjectKube
	err := ctx.RegisterResource("ovh:index/cloudProjectKube:CloudProjectKube", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectKube gets an existing CloudProjectKube resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectKube(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectKubeState, opts ...pulumi.ResourceOption) (*CloudProjectKube, error) {
	var resource CloudProjectKube
	err := ctx.ReadResource("ovh:index/cloudProjectKube:CloudProjectKube", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectKube resources.
type cloudProjectKubeState struct {
	// True if control-plane is up to date.
	ControlPlaneIsUpToDate *bool `pulumi:"controlPlaneIsUpToDate"`
	// True if all nodes and control-plane are up to date.
	IsUpToDate *bool `pulumi:"isUpToDate"`
	// The kubeconfig file. Use this file to connect to your kubernetes cluster.
	Kubeconfig *string `pulumi:"kubeconfig"`
	// The name of the kubernetes cluster.
	Name *string `pulumi:"name"`
	// Kubernetes versions available for upgrade.
	NextUpgradeVersions []string `pulumi:"nextUpgradeVersions"`
	// Cluster nodes URL.
	NodesUrl *string `pulumi:"nodesUrl"`
	// The private network configuration
	// * defaultVrackGateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.
	// * privateNetworkRoutingAsDefault - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.
	PrivateNetworkConfiguration *CloudProjectKubePrivateNetworkConfiguration `pulumi:"privateNetworkConfiguration"`
	// OpenStack private network ID to use.
	// Changing this value delete the resource(including ETCD user data). Defaults - not use private network.
	PrivateNetworkId *string `pulumi:"privateNetworkId"`
	// a valid OVH public cloud region ID in which the kubernetes
	// cluster will be available. Ex.: "GRA1". Defaults to all public cloud regions.
	// Changing this value recreates the resource.
	Region *string `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName *string `pulumi:"serviceName"`
	// Cluster status. Should be normally set to 'READY'.
	Status *string `pulumi:"status"`
	// Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE]'.
	UpdatePolicy *string `pulumi:"updatePolicy"`
	// Management URL of your cluster.
	Url *string `pulumi:"url"`
	// kubernetes version to use.
	// Changing this value updates the resource. Defaults to latest available.
	Version *string `pulumi:"version"`
}

type CloudProjectKubeState struct {
	// True if control-plane is up to date.
	ControlPlaneIsUpToDate pulumi.BoolPtrInput
	// True if all nodes and control-plane are up to date.
	IsUpToDate pulumi.BoolPtrInput
	// The kubeconfig file. Use this file to connect to your kubernetes cluster.
	Kubeconfig pulumi.StringPtrInput
	// The name of the kubernetes cluster.
	Name pulumi.StringPtrInput
	// Kubernetes versions available for upgrade.
	NextUpgradeVersions pulumi.StringArrayInput
	// Cluster nodes URL.
	NodesUrl pulumi.StringPtrInput
	// The private network configuration
	// * defaultVrackGateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.
	// * privateNetworkRoutingAsDefault - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.
	PrivateNetworkConfiguration CloudProjectKubePrivateNetworkConfigurationPtrInput
	// OpenStack private network ID to use.
	// Changing this value delete the resource(including ETCD user data). Defaults - not use private network.
	PrivateNetworkId pulumi.StringPtrInput
	// a valid OVH public cloud region ID in which the kubernetes
	// cluster will be available. Ex.: "GRA1". Defaults to all public cloud regions.
	// Changing this value recreates the resource.
	Region pulumi.StringPtrInput
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringPtrInput
	// Cluster status. Should be normally set to 'READY'.
	Status pulumi.StringPtrInput
	// Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE]'.
	UpdatePolicy pulumi.StringPtrInput
	// Management URL of your cluster.
	Url pulumi.StringPtrInput
	// kubernetes version to use.
	// Changing this value updates the resource. Defaults to latest available.
	Version pulumi.StringPtrInput
}

func (CloudProjectKubeState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectKubeState)(nil)).Elem()
}

type cloudProjectKubeArgs struct {
	// The name of the kubernetes cluster.
	Name *string `pulumi:"name"`
	// The private network configuration
	// * defaultVrackGateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.
	// * privateNetworkRoutingAsDefault - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.
	PrivateNetworkConfiguration *CloudProjectKubePrivateNetworkConfiguration `pulumi:"privateNetworkConfiguration"`
	// OpenStack private network ID to use.
	// Changing this value delete the resource(including ETCD user data). Defaults - not use private network.
	PrivateNetworkId *string `pulumi:"privateNetworkId"`
	// a valid OVH public cloud region ID in which the kubernetes
	// cluster will be available. Ex.: "GRA1". Defaults to all public cloud regions.
	// Changing this value recreates the resource.
	Region string `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
	// Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE]'.
	UpdatePolicy *string `pulumi:"updatePolicy"`
	// kubernetes version to use.
	// Changing this value updates the resource. Defaults to latest available.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a CloudProjectKube resource.
type CloudProjectKubeArgs struct {
	// The name of the kubernetes cluster.
	Name pulumi.StringPtrInput
	// The private network configuration
	// * defaultVrackGateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.
	// * privateNetworkRoutingAsDefault - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.
	PrivateNetworkConfiguration CloudProjectKubePrivateNetworkConfigurationPtrInput
	// OpenStack private network ID to use.
	// Changing this value delete the resource(including ETCD user data). Defaults - not use private network.
	PrivateNetworkId pulumi.StringPtrInput
	// a valid OVH public cloud region ID in which the kubernetes
	// cluster will be available. Ex.: "GRA1". Defaults to all public cloud regions.
	// Changing this value recreates the resource.
	Region pulumi.StringInput
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput
	// Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE]'.
	UpdatePolicy pulumi.StringPtrInput
	// kubernetes version to use.
	// Changing this value updates the resource. Defaults to latest available.
	Version pulumi.StringPtrInput
}

func (CloudProjectKubeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectKubeArgs)(nil)).Elem()
}

type CloudProjectKubeInput interface {
	pulumi.Input

	ToCloudProjectKubeOutput() CloudProjectKubeOutput
	ToCloudProjectKubeOutputWithContext(ctx context.Context) CloudProjectKubeOutput
}

func (*CloudProjectKube) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectKube)(nil)).Elem()
}

func (i *CloudProjectKube) ToCloudProjectKubeOutput() CloudProjectKubeOutput {
	return i.ToCloudProjectKubeOutputWithContext(context.Background())
}

func (i *CloudProjectKube) ToCloudProjectKubeOutputWithContext(ctx context.Context) CloudProjectKubeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubeOutput)
}

// CloudProjectKubeArrayInput is an input type that accepts CloudProjectKubeArray and CloudProjectKubeArrayOutput values.
// You can construct a concrete instance of `CloudProjectKubeArrayInput` via:
//
//	CloudProjectKubeArray{ CloudProjectKubeArgs{...} }
type CloudProjectKubeArrayInput interface {
	pulumi.Input

	ToCloudProjectKubeArrayOutput() CloudProjectKubeArrayOutput
	ToCloudProjectKubeArrayOutputWithContext(context.Context) CloudProjectKubeArrayOutput
}

type CloudProjectKubeArray []CloudProjectKubeInput

func (CloudProjectKubeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectKube)(nil)).Elem()
}

func (i CloudProjectKubeArray) ToCloudProjectKubeArrayOutput() CloudProjectKubeArrayOutput {
	return i.ToCloudProjectKubeArrayOutputWithContext(context.Background())
}

func (i CloudProjectKubeArray) ToCloudProjectKubeArrayOutputWithContext(ctx context.Context) CloudProjectKubeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubeArrayOutput)
}

// CloudProjectKubeMapInput is an input type that accepts CloudProjectKubeMap and CloudProjectKubeMapOutput values.
// You can construct a concrete instance of `CloudProjectKubeMapInput` via:
//
//	CloudProjectKubeMap{ "key": CloudProjectKubeArgs{...} }
type CloudProjectKubeMapInput interface {
	pulumi.Input

	ToCloudProjectKubeMapOutput() CloudProjectKubeMapOutput
	ToCloudProjectKubeMapOutputWithContext(context.Context) CloudProjectKubeMapOutput
}

type CloudProjectKubeMap map[string]CloudProjectKubeInput

func (CloudProjectKubeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectKube)(nil)).Elem()
}

func (i CloudProjectKubeMap) ToCloudProjectKubeMapOutput() CloudProjectKubeMapOutput {
	return i.ToCloudProjectKubeMapOutputWithContext(context.Background())
}

func (i CloudProjectKubeMap) ToCloudProjectKubeMapOutputWithContext(ctx context.Context) CloudProjectKubeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectKubeMapOutput)
}

type CloudProjectKubeOutput struct{ *pulumi.OutputState }

func (CloudProjectKubeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectKube)(nil)).Elem()
}

func (o CloudProjectKubeOutput) ToCloudProjectKubeOutput() CloudProjectKubeOutput {
	return o
}

func (o CloudProjectKubeOutput) ToCloudProjectKubeOutputWithContext(ctx context.Context) CloudProjectKubeOutput {
	return o
}

// True if control-plane is up to date.
func (o CloudProjectKubeOutput) ControlPlaneIsUpToDate() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.BoolOutput { return v.ControlPlaneIsUpToDate }).(pulumi.BoolOutput)
}

// True if all nodes and control-plane are up to date.
func (o CloudProjectKubeOutput) IsUpToDate() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.BoolOutput { return v.IsUpToDate }).(pulumi.BoolOutput)
}

// The kubeconfig file. Use this file to connect to your kubernetes cluster.
func (o CloudProjectKubeOutput) Kubeconfig() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringOutput { return v.Kubeconfig }).(pulumi.StringOutput)
}

// The name of the kubernetes cluster.
func (o CloudProjectKubeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Kubernetes versions available for upgrade.
func (o CloudProjectKubeOutput) NextUpgradeVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringArrayOutput { return v.NextUpgradeVersions }).(pulumi.StringArrayOutput)
}

// Cluster nodes URL.
func (o CloudProjectKubeOutput) NodesUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringOutput { return v.NodesUrl }).(pulumi.StringOutput)
}

// The private network configuration
// * defaultVrackGateway - If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.
// * privateNetworkRoutingAsDefault - Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.
func (o CloudProjectKubeOutput) PrivateNetworkConfiguration() CloudProjectKubePrivateNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v *CloudProjectKube) CloudProjectKubePrivateNetworkConfigurationPtrOutput {
		return v.PrivateNetworkConfiguration
	}).(CloudProjectKubePrivateNetworkConfigurationPtrOutput)
}

// OpenStack private network ID to use.
// Changing this value delete the resource(including ETCD user data). Defaults - not use private network.
func (o CloudProjectKubeOutput) PrivateNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringPtrOutput { return v.PrivateNetworkId }).(pulumi.StringPtrOutput)
}

// a valid OVH public cloud region ID in which the kubernetes
// cluster will be available. Ex.: "GRA1". Defaults to all public cloud regions.
// Changing this value recreates the resource.
func (o CloudProjectKubeOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The id of the public cloud project. If omitted,
// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
func (o CloudProjectKubeOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Cluster status. Should be normally set to 'READY'.
func (o CloudProjectKubeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE]'.
func (o CloudProjectKubeOutput) UpdatePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringOutput { return v.UpdatePolicy }).(pulumi.StringOutput)
}

// Management URL of your cluster.
func (o CloudProjectKubeOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

// kubernetes version to use.
// Changing this value updates the resource. Defaults to latest available.
func (o CloudProjectKubeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectKube) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type CloudProjectKubeArrayOutput struct{ *pulumi.OutputState }

func (CloudProjectKubeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectKube)(nil)).Elem()
}

func (o CloudProjectKubeArrayOutput) ToCloudProjectKubeArrayOutput() CloudProjectKubeArrayOutput {
	return o
}

func (o CloudProjectKubeArrayOutput) ToCloudProjectKubeArrayOutputWithContext(ctx context.Context) CloudProjectKubeArrayOutput {
	return o
}

func (o CloudProjectKubeArrayOutput) Index(i pulumi.IntInput) CloudProjectKubeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudProjectKube {
		return vs[0].([]*CloudProjectKube)[vs[1].(int)]
	}).(CloudProjectKubeOutput)
}

type CloudProjectKubeMapOutput struct{ *pulumi.OutputState }

func (CloudProjectKubeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectKube)(nil)).Elem()
}

func (o CloudProjectKubeMapOutput) ToCloudProjectKubeMapOutput() CloudProjectKubeMapOutput {
	return o
}

func (o CloudProjectKubeMapOutput) ToCloudProjectKubeMapOutputWithContext(ctx context.Context) CloudProjectKubeMapOutput {
	return o
}

func (o CloudProjectKubeMapOutput) MapIndex(k pulumi.StringInput) CloudProjectKubeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudProjectKube {
		return vs[0].(map[string]*CloudProjectKube)[vs[1].(string)]
	}).(CloudProjectKubeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectKubeInput)(nil)).Elem(), &CloudProjectKube{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectKubeArrayInput)(nil)).Elem(), CloudProjectKubeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectKubeMapInput)(nil)).Elem(), CloudProjectKubeMap{})
	pulumi.RegisterOutputType(CloudProjectKubeOutput{})
	pulumi.RegisterOutputType(CloudProjectKubeArrayOutput{})
	pulumi.RegisterOutputType(CloudProjectKubeMapOutput{})
}
