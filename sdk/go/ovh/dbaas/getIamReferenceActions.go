// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbaas

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to list the IAM action associated with a resource type.
//
// ## Important
//
// > Using this resource requires that the account is enrolled in the OVHcloud [IAM beta](https://labs.ovhcloud.com/en/iam/)
func GetIamReferenceActions(ctx *pulumi.Context, args *GetIamReferenceActionsArgs, opts ...pulumi.InvokeOption) (*GetIamReferenceActionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIamReferenceActionsResult
	err := ctx.Invoke("ovh:Dbaas/getIamReferenceActions:getIamReferenceActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIamReferenceActions.
type GetIamReferenceActionsArgs struct {
	// Kind of resource we want the actions for
	Type string `pulumi:"type"`
}

// A collection of values returned by getIamReferenceActions.
type GetIamReferenceActionsResult struct {
	// List of actions
	Actions []GetIamReferenceActionsAction `pulumi:"actions"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Type string `pulumi:"type"`
}

func GetIamReferenceActionsOutput(ctx *pulumi.Context, args GetIamReferenceActionsOutputArgs, opts ...pulumi.InvokeOption) GetIamReferenceActionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIamReferenceActionsResult, error) {
			args := v.(GetIamReferenceActionsArgs)
			r, err := GetIamReferenceActions(ctx, &args, opts...)
			var s GetIamReferenceActionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetIamReferenceActionsResultOutput)
}

// A collection of arguments for invoking getIamReferenceActions.
type GetIamReferenceActionsOutputArgs struct {
	// Kind of resource we want the actions for
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetIamReferenceActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamReferenceActionsArgs)(nil)).Elem()
}

// A collection of values returned by getIamReferenceActions.
type GetIamReferenceActionsResultOutput struct{ *pulumi.OutputState }

func (GetIamReferenceActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamReferenceActionsResult)(nil)).Elem()
}

func (o GetIamReferenceActionsResultOutput) ToGetIamReferenceActionsResultOutput() GetIamReferenceActionsResultOutput {
	return o
}

func (o GetIamReferenceActionsResultOutput) ToGetIamReferenceActionsResultOutputWithContext(ctx context.Context) GetIamReferenceActionsResultOutput {
	return o
}

// List of actions
func (o GetIamReferenceActionsResultOutput) Actions() GetIamReferenceActionsActionArrayOutput {
	return o.ApplyT(func(v GetIamReferenceActionsResult) []GetIamReferenceActionsAction { return v.Actions }).(GetIamReferenceActionsActionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIamReferenceActionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamReferenceActionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIamReferenceActionsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamReferenceActionsResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIamReferenceActionsResultOutput{})
}
