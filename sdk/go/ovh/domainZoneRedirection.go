// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a OVH domain zone redirection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.NewDomainZoneRedirection(ctx, "test", &ovh.DomainZoneRedirectionArgs{
//				Subdomain: pulumi.String("test"),
//				Target:    pulumi.String("http://www.ovh"),
//				Type:      pulumi.String("visiblePermanent"),
//				Zone:      pulumi.String("testdemo.ovh"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DomainZoneRedirection struct {
	pulumi.CustomResourceState

	// A description of this redirection
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Keywords to describe this redirection
	Keywords pulumi.StringPtrOutput `pulumi:"keywords"`
	// The name of the redirection
	Subdomain pulumi.StringPtrOutput `pulumi:"subdomain"`
	// The value of the redirection
	Target pulumi.StringOutput `pulumi:"target"`
	// Title of this redirection
	Title pulumi.StringPtrOutput `pulumi:"title"`
	// The type of the redirection, with values:
	Type pulumi.StringOutput `pulumi:"type"`
	// The domain to add the redirection to
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewDomainZoneRedirection registers a new resource with the given unique name, arguments, and options.
func NewDomainZoneRedirection(ctx *pulumi.Context,
	name string, args *DomainZoneRedirectionArgs, opts ...pulumi.ResourceOption) (*DomainZoneRedirection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Zone == nil {
		return nil, errors.New("invalid value for required argument 'Zone'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DomainZoneRedirection
	err := ctx.RegisterResource("ovh:index/domainZoneRedirection:DomainZoneRedirection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainZoneRedirection gets an existing DomainZoneRedirection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainZoneRedirection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainZoneRedirectionState, opts ...pulumi.ResourceOption) (*DomainZoneRedirection, error) {
	var resource DomainZoneRedirection
	err := ctx.ReadResource("ovh:index/domainZoneRedirection:DomainZoneRedirection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainZoneRedirection resources.
type domainZoneRedirectionState struct {
	// A description of this redirection
	Description *string `pulumi:"description"`
	// Keywords to describe this redirection
	Keywords *string `pulumi:"keywords"`
	// The name of the redirection
	Subdomain *string `pulumi:"subdomain"`
	// The value of the redirection
	Target *string `pulumi:"target"`
	// Title of this redirection
	Title *string `pulumi:"title"`
	// The type of the redirection, with values:
	Type *string `pulumi:"type"`
	// The domain to add the redirection to
	Zone *string `pulumi:"zone"`
}

type DomainZoneRedirectionState struct {
	// A description of this redirection
	Description pulumi.StringPtrInput
	// Keywords to describe this redirection
	Keywords pulumi.StringPtrInput
	// The name of the redirection
	Subdomain pulumi.StringPtrInput
	// The value of the redirection
	Target pulumi.StringPtrInput
	// Title of this redirection
	Title pulumi.StringPtrInput
	// The type of the redirection, with values:
	Type pulumi.StringPtrInput
	// The domain to add the redirection to
	Zone pulumi.StringPtrInput
}

func (DomainZoneRedirectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainZoneRedirectionState)(nil)).Elem()
}

type domainZoneRedirectionArgs struct {
	// A description of this redirection
	Description *string `pulumi:"description"`
	// Keywords to describe this redirection
	Keywords *string `pulumi:"keywords"`
	// The name of the redirection
	Subdomain *string `pulumi:"subdomain"`
	// The value of the redirection
	Target string `pulumi:"target"`
	// Title of this redirection
	Title *string `pulumi:"title"`
	// The type of the redirection, with values:
	Type string `pulumi:"type"`
	// The domain to add the redirection to
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a DomainZoneRedirection resource.
type DomainZoneRedirectionArgs struct {
	// A description of this redirection
	Description pulumi.StringPtrInput
	// Keywords to describe this redirection
	Keywords pulumi.StringPtrInput
	// The name of the redirection
	Subdomain pulumi.StringPtrInput
	// The value of the redirection
	Target pulumi.StringInput
	// Title of this redirection
	Title pulumi.StringPtrInput
	// The type of the redirection, with values:
	Type pulumi.StringInput
	// The domain to add the redirection to
	Zone pulumi.StringInput
}

func (DomainZoneRedirectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainZoneRedirectionArgs)(nil)).Elem()
}

type DomainZoneRedirectionInput interface {
	pulumi.Input

	ToDomainZoneRedirectionOutput() DomainZoneRedirectionOutput
	ToDomainZoneRedirectionOutputWithContext(ctx context.Context) DomainZoneRedirectionOutput
}

func (*DomainZoneRedirection) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainZoneRedirection)(nil)).Elem()
}

func (i *DomainZoneRedirection) ToDomainZoneRedirectionOutput() DomainZoneRedirectionOutput {
	return i.ToDomainZoneRedirectionOutputWithContext(context.Background())
}

func (i *DomainZoneRedirection) ToDomainZoneRedirectionOutputWithContext(ctx context.Context) DomainZoneRedirectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneRedirectionOutput)
}

// DomainZoneRedirectionArrayInput is an input type that accepts DomainZoneRedirectionArray and DomainZoneRedirectionArrayOutput values.
// You can construct a concrete instance of `DomainZoneRedirectionArrayInput` via:
//
//	DomainZoneRedirectionArray{ DomainZoneRedirectionArgs{...} }
type DomainZoneRedirectionArrayInput interface {
	pulumi.Input

	ToDomainZoneRedirectionArrayOutput() DomainZoneRedirectionArrayOutput
	ToDomainZoneRedirectionArrayOutputWithContext(context.Context) DomainZoneRedirectionArrayOutput
}

type DomainZoneRedirectionArray []DomainZoneRedirectionInput

func (DomainZoneRedirectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainZoneRedirection)(nil)).Elem()
}

func (i DomainZoneRedirectionArray) ToDomainZoneRedirectionArrayOutput() DomainZoneRedirectionArrayOutput {
	return i.ToDomainZoneRedirectionArrayOutputWithContext(context.Background())
}

func (i DomainZoneRedirectionArray) ToDomainZoneRedirectionArrayOutputWithContext(ctx context.Context) DomainZoneRedirectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneRedirectionArrayOutput)
}

// DomainZoneRedirectionMapInput is an input type that accepts DomainZoneRedirectionMap and DomainZoneRedirectionMapOutput values.
// You can construct a concrete instance of `DomainZoneRedirectionMapInput` via:
//
//	DomainZoneRedirectionMap{ "key": DomainZoneRedirectionArgs{...} }
type DomainZoneRedirectionMapInput interface {
	pulumi.Input

	ToDomainZoneRedirectionMapOutput() DomainZoneRedirectionMapOutput
	ToDomainZoneRedirectionMapOutputWithContext(context.Context) DomainZoneRedirectionMapOutput
}

type DomainZoneRedirectionMap map[string]DomainZoneRedirectionInput

func (DomainZoneRedirectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainZoneRedirection)(nil)).Elem()
}

func (i DomainZoneRedirectionMap) ToDomainZoneRedirectionMapOutput() DomainZoneRedirectionMapOutput {
	return i.ToDomainZoneRedirectionMapOutputWithContext(context.Background())
}

func (i DomainZoneRedirectionMap) ToDomainZoneRedirectionMapOutputWithContext(ctx context.Context) DomainZoneRedirectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneRedirectionMapOutput)
}

type DomainZoneRedirectionOutput struct{ *pulumi.OutputState }

func (DomainZoneRedirectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainZoneRedirection)(nil)).Elem()
}

func (o DomainZoneRedirectionOutput) ToDomainZoneRedirectionOutput() DomainZoneRedirectionOutput {
	return o
}

func (o DomainZoneRedirectionOutput) ToDomainZoneRedirectionOutputWithContext(ctx context.Context) DomainZoneRedirectionOutput {
	return o
}

// A description of this redirection
func (o DomainZoneRedirectionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Keywords to describe this redirection
func (o DomainZoneRedirectionOutput) Keywords() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringPtrOutput { return v.Keywords }).(pulumi.StringPtrOutput)
}

// The name of the redirection
func (o DomainZoneRedirectionOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringPtrOutput { return v.Subdomain }).(pulumi.StringPtrOutput)
}

// The value of the redirection
func (o DomainZoneRedirectionOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringOutput { return v.Target }).(pulumi.StringOutput)
}

// Title of this redirection
func (o DomainZoneRedirectionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringPtrOutput { return v.Title }).(pulumi.StringPtrOutput)
}

// The type of the redirection, with values:
func (o DomainZoneRedirectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The domain to add the redirection to
func (o DomainZoneRedirectionOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainZoneRedirection) pulumi.StringOutput { return v.Zone }).(pulumi.StringOutput)
}

type DomainZoneRedirectionArrayOutput struct{ *pulumi.OutputState }

func (DomainZoneRedirectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainZoneRedirection)(nil)).Elem()
}

func (o DomainZoneRedirectionArrayOutput) ToDomainZoneRedirectionArrayOutput() DomainZoneRedirectionArrayOutput {
	return o
}

func (o DomainZoneRedirectionArrayOutput) ToDomainZoneRedirectionArrayOutputWithContext(ctx context.Context) DomainZoneRedirectionArrayOutput {
	return o
}

func (o DomainZoneRedirectionArrayOutput) Index(i pulumi.IntInput) DomainZoneRedirectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainZoneRedirection {
		return vs[0].([]*DomainZoneRedirection)[vs[1].(int)]
	}).(DomainZoneRedirectionOutput)
}

type DomainZoneRedirectionMapOutput struct{ *pulumi.OutputState }

func (DomainZoneRedirectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainZoneRedirection)(nil)).Elem()
}

func (o DomainZoneRedirectionMapOutput) ToDomainZoneRedirectionMapOutput() DomainZoneRedirectionMapOutput {
	return o
}

func (o DomainZoneRedirectionMapOutput) ToDomainZoneRedirectionMapOutputWithContext(ctx context.Context) DomainZoneRedirectionMapOutput {
	return o
}

func (o DomainZoneRedirectionMapOutput) MapIndex(k pulumi.StringInput) DomainZoneRedirectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainZoneRedirection {
		return vs[0].(map[string]*DomainZoneRedirection)[vs[1].(string)]
	}).(DomainZoneRedirectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainZoneRedirectionInput)(nil)).Elem(), &DomainZoneRedirection{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainZoneRedirectionArrayInput)(nil)).Elem(), DomainZoneRedirectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainZoneRedirectionMapInput)(nil)).Elem(), DomainZoneRedirectionMap{})
	pulumi.RegisterOutputType(DomainZoneRedirectionOutput{})
	pulumi.RegisterOutputType(DomainZoneRedirectionArrayOutput{})
	pulumi.RegisterOutputType(DomainZoneRedirectionMapOutput{})
}
