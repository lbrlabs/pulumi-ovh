// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an SSH key.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.LookupMeSshKey(ctx, &GetMeSshKeyArgs{
//				KeyName: "mykey",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMeSshKey(ctx *pulumi.Context, args *LookupMeSshKeyArgs, opts ...pulumi.InvokeOption) (*LookupMeSshKeyResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupMeSshKeyResult
	err := ctx.Invoke("ovh:index/getMeSshKey:getMeSshKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMeSshKey.
type LookupMeSshKeyArgs struct {
	// The name of the SSH key.
	KeyName string `pulumi:"keyName"`
}

// A collection of values returned by getMeSshKey.
type LookupMeSshKeyResult struct {
	// True when this public SSH key is used for rescue mode and reinstallations.
	Default bool `pulumi:"default"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The content of the public key.
	// E.g.: "ssh-ed25519 AAAAC3..."
	Key string `pulumi:"key"`
	// See Argument Reference above.
	KeyName string `pulumi:"keyName"`
}

func LookupMeSshKeyOutput(ctx *pulumi.Context, args LookupMeSshKeyOutputArgs, opts ...pulumi.InvokeOption) LookupMeSshKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMeSshKeyResult, error) {
			args := v.(LookupMeSshKeyArgs)
			r, err := LookupMeSshKey(ctx, &args, opts...)
			var s LookupMeSshKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMeSshKeyResultOutput)
}

// A collection of arguments for invoking getMeSshKey.
type LookupMeSshKeyOutputArgs struct {
	// The name of the SSH key.
	KeyName pulumi.StringInput `pulumi:"keyName"`
}

func (LookupMeSshKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMeSshKeyArgs)(nil)).Elem()
}

// A collection of values returned by getMeSshKey.
type LookupMeSshKeyResultOutput struct{ *pulumi.OutputState }

func (LookupMeSshKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMeSshKeyResult)(nil)).Elem()
}

func (o LookupMeSshKeyResultOutput) ToLookupMeSshKeyResultOutput() LookupMeSshKeyResultOutput {
	return o
}

func (o LookupMeSshKeyResultOutput) ToLookupMeSshKeyResultOutputWithContext(ctx context.Context) LookupMeSshKeyResultOutput {
	return o
}

// True when this public SSH key is used for rescue mode and reinstallations.
func (o LookupMeSshKeyResultOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMeSshKeyResult) bool { return v.Default }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMeSshKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeSshKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The content of the public key.
// E.g.: "ssh-ed25519 AAAAC3..."
func (o LookupMeSshKeyResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeSshKeyResult) string { return v.Key }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o LookupMeSshKeyResultOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMeSshKeyResult) string { return v.KeyName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMeSshKeyResultOutput{})
}
