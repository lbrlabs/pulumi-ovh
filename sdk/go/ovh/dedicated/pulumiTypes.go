// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicated

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServiceInstallTaskDetails struct {
	// Template change log details.
	//
	// Deprecated: field is not used anymore
	ChangeLog *string `pulumi:"changeLog"`
	// Set up the server using the provided hostname instead of the default hostname.
	CustomHostname *string `pulumi:"customHostname"`
	// Disk group id.
	DiskGroupId *int `pulumi:"diskGroupId"`
	// set to true to install RTM.
	InstallRtm *bool `pulumi:"installRtm"`
	// set to true to install sql server (Windows template only).
	InstallSqlServer *bool `pulumi:"installSqlServer"`
	// language.
	Language *string `pulumi:"language"`
	// set to true to disable RAID.
	NoRaid *bool `pulumi:"noRaid"`
	// Indicate the URL where your postinstall customisation script is located.
	PostInstallationScriptLink *string `pulumi:"postInstallationScriptLink"`
	// Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'.
	PostInstallationScriptReturn *string `pulumi:"postInstallationScriptReturn"`
	// set to true to make a hardware raid reset.
	ResetHwRaid *bool `pulumi:"resetHwRaid"`
	// soft raid devices.
	SoftRaidDevices *int `pulumi:"softRaidDevices"`
	// Name of the ssh key that should be installed. Password login will be disabled.
	SshKeyName *string `pulumi:"sshKeyName"`
	// Use the distribution's native kernel instead of the recommended OVHcloud Kernel.
	UseDistribKernel *bool `pulumi:"useDistribKernel"`
	// set to true to use SPLA.
	UseSpla *bool `pulumi:"useSpla"`
}

// ServiceInstallTaskDetailsInput is an input type that accepts ServiceInstallTaskDetailsArgs and ServiceInstallTaskDetailsOutput values.
// You can construct a concrete instance of `ServiceInstallTaskDetailsInput` via:
//
//	ServiceInstallTaskDetailsArgs{...}
type ServiceInstallTaskDetailsInput interface {
	pulumi.Input

	ToServiceInstallTaskDetailsOutput() ServiceInstallTaskDetailsOutput
	ToServiceInstallTaskDetailsOutputWithContext(context.Context) ServiceInstallTaskDetailsOutput
}

type ServiceInstallTaskDetailsArgs struct {
	// Template change log details.
	//
	// Deprecated: field is not used anymore
	ChangeLog pulumi.StringPtrInput `pulumi:"changeLog"`
	// Set up the server using the provided hostname instead of the default hostname.
	CustomHostname pulumi.StringPtrInput `pulumi:"customHostname"`
	// Disk group id.
	DiskGroupId pulumi.IntPtrInput `pulumi:"diskGroupId"`
	// set to true to install RTM.
	InstallRtm pulumi.BoolPtrInput `pulumi:"installRtm"`
	// set to true to install sql server (Windows template only).
	InstallSqlServer pulumi.BoolPtrInput `pulumi:"installSqlServer"`
	// language.
	Language pulumi.StringPtrInput `pulumi:"language"`
	// set to true to disable RAID.
	NoRaid pulumi.BoolPtrInput `pulumi:"noRaid"`
	// Indicate the URL where your postinstall customisation script is located.
	PostInstallationScriptLink pulumi.StringPtrInput `pulumi:"postInstallationScriptLink"`
	// Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'.
	PostInstallationScriptReturn pulumi.StringPtrInput `pulumi:"postInstallationScriptReturn"`
	// set to true to make a hardware raid reset.
	ResetHwRaid pulumi.BoolPtrInput `pulumi:"resetHwRaid"`
	// soft raid devices.
	SoftRaidDevices pulumi.IntPtrInput `pulumi:"softRaidDevices"`
	// Name of the ssh key that should be installed. Password login will be disabled.
	SshKeyName pulumi.StringPtrInput `pulumi:"sshKeyName"`
	// Use the distribution's native kernel instead of the recommended OVHcloud Kernel.
	UseDistribKernel pulumi.BoolPtrInput `pulumi:"useDistribKernel"`
	// set to true to use SPLA.
	UseSpla pulumi.BoolPtrInput `pulumi:"useSpla"`
}

func (ServiceInstallTaskDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInstallTaskDetails)(nil)).Elem()
}

func (i ServiceInstallTaskDetailsArgs) ToServiceInstallTaskDetailsOutput() ServiceInstallTaskDetailsOutput {
	return i.ToServiceInstallTaskDetailsOutputWithContext(context.Background())
}

func (i ServiceInstallTaskDetailsArgs) ToServiceInstallTaskDetailsOutputWithContext(ctx context.Context) ServiceInstallTaskDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInstallTaskDetailsOutput)
}

func (i ServiceInstallTaskDetailsArgs) ToServiceInstallTaskDetailsPtrOutput() ServiceInstallTaskDetailsPtrOutput {
	return i.ToServiceInstallTaskDetailsPtrOutputWithContext(context.Background())
}

func (i ServiceInstallTaskDetailsArgs) ToServiceInstallTaskDetailsPtrOutputWithContext(ctx context.Context) ServiceInstallTaskDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInstallTaskDetailsOutput).ToServiceInstallTaskDetailsPtrOutputWithContext(ctx)
}

// ServiceInstallTaskDetailsPtrInput is an input type that accepts ServiceInstallTaskDetailsArgs, ServiceInstallTaskDetailsPtr and ServiceInstallTaskDetailsPtrOutput values.
// You can construct a concrete instance of `ServiceInstallTaskDetailsPtrInput` via:
//
//	        ServiceInstallTaskDetailsArgs{...}
//
//	or:
//
//	        nil
type ServiceInstallTaskDetailsPtrInput interface {
	pulumi.Input

	ToServiceInstallTaskDetailsPtrOutput() ServiceInstallTaskDetailsPtrOutput
	ToServiceInstallTaskDetailsPtrOutputWithContext(context.Context) ServiceInstallTaskDetailsPtrOutput
}

type serviceInstallTaskDetailsPtrType ServiceInstallTaskDetailsArgs

func ServiceInstallTaskDetailsPtr(v *ServiceInstallTaskDetailsArgs) ServiceInstallTaskDetailsPtrInput {
	return (*serviceInstallTaskDetailsPtrType)(v)
}

func (*serviceInstallTaskDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInstallTaskDetails)(nil)).Elem()
}

func (i *serviceInstallTaskDetailsPtrType) ToServiceInstallTaskDetailsPtrOutput() ServiceInstallTaskDetailsPtrOutput {
	return i.ToServiceInstallTaskDetailsPtrOutputWithContext(context.Background())
}

func (i *serviceInstallTaskDetailsPtrType) ToServiceInstallTaskDetailsPtrOutputWithContext(ctx context.Context) ServiceInstallTaskDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInstallTaskDetailsPtrOutput)
}

type ServiceInstallTaskDetailsOutput struct{ *pulumi.OutputState }

func (ServiceInstallTaskDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInstallTaskDetails)(nil)).Elem()
}

func (o ServiceInstallTaskDetailsOutput) ToServiceInstallTaskDetailsOutput() ServiceInstallTaskDetailsOutput {
	return o
}

func (o ServiceInstallTaskDetailsOutput) ToServiceInstallTaskDetailsOutputWithContext(ctx context.Context) ServiceInstallTaskDetailsOutput {
	return o
}

func (o ServiceInstallTaskDetailsOutput) ToServiceInstallTaskDetailsPtrOutput() ServiceInstallTaskDetailsPtrOutput {
	return o.ToServiceInstallTaskDetailsPtrOutputWithContext(context.Background())
}

func (o ServiceInstallTaskDetailsOutput) ToServiceInstallTaskDetailsPtrOutputWithContext(ctx context.Context) ServiceInstallTaskDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceInstallTaskDetails) *ServiceInstallTaskDetails {
		return &v
	}).(ServiceInstallTaskDetailsPtrOutput)
}

// Template change log details.
//
// Deprecated: field is not used anymore
func (o ServiceInstallTaskDetailsOutput) ChangeLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *string { return v.ChangeLog }).(pulumi.StringPtrOutput)
}

// Set up the server using the provided hostname instead of the default hostname.
func (o ServiceInstallTaskDetailsOutput) CustomHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *string { return v.CustomHostname }).(pulumi.StringPtrOutput)
}

// Disk group id.
func (o ServiceInstallTaskDetailsOutput) DiskGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *int { return v.DiskGroupId }).(pulumi.IntPtrOutput)
}

// set to true to install RTM.
func (o ServiceInstallTaskDetailsOutput) InstallRtm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *bool { return v.InstallRtm }).(pulumi.BoolPtrOutput)
}

// set to true to install sql server (Windows template only).
func (o ServiceInstallTaskDetailsOutput) InstallSqlServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *bool { return v.InstallSqlServer }).(pulumi.BoolPtrOutput)
}

// language.
func (o ServiceInstallTaskDetailsOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// set to true to disable RAID.
func (o ServiceInstallTaskDetailsOutput) NoRaid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *bool { return v.NoRaid }).(pulumi.BoolPtrOutput)
}

// Indicate the URL where your postinstall customisation script is located.
func (o ServiceInstallTaskDetailsOutput) PostInstallationScriptLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *string { return v.PostInstallationScriptLink }).(pulumi.StringPtrOutput)
}

// Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'.
func (o ServiceInstallTaskDetailsOutput) PostInstallationScriptReturn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *string { return v.PostInstallationScriptReturn }).(pulumi.StringPtrOutput)
}

// set to true to make a hardware raid reset.
func (o ServiceInstallTaskDetailsOutput) ResetHwRaid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *bool { return v.ResetHwRaid }).(pulumi.BoolPtrOutput)
}

// soft raid devices.
func (o ServiceInstallTaskDetailsOutput) SoftRaidDevices() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *int { return v.SoftRaidDevices }).(pulumi.IntPtrOutput)
}

// Name of the ssh key that should be installed. Password login will be disabled.
func (o ServiceInstallTaskDetailsOutput) SshKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *string { return v.SshKeyName }).(pulumi.StringPtrOutput)
}

// Use the distribution's native kernel instead of the recommended OVHcloud Kernel.
func (o ServiceInstallTaskDetailsOutput) UseDistribKernel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *bool { return v.UseDistribKernel }).(pulumi.BoolPtrOutput)
}

// set to true to use SPLA.
func (o ServiceInstallTaskDetailsOutput) UseSpla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceInstallTaskDetails) *bool { return v.UseSpla }).(pulumi.BoolPtrOutput)
}

type ServiceInstallTaskDetailsPtrOutput struct{ *pulumi.OutputState }

func (ServiceInstallTaskDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInstallTaskDetails)(nil)).Elem()
}

func (o ServiceInstallTaskDetailsPtrOutput) ToServiceInstallTaskDetailsPtrOutput() ServiceInstallTaskDetailsPtrOutput {
	return o
}

func (o ServiceInstallTaskDetailsPtrOutput) ToServiceInstallTaskDetailsPtrOutputWithContext(ctx context.Context) ServiceInstallTaskDetailsPtrOutput {
	return o
}

func (o ServiceInstallTaskDetailsPtrOutput) Elem() ServiceInstallTaskDetailsOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) ServiceInstallTaskDetails {
		if v != nil {
			return *v
		}
		var ret ServiceInstallTaskDetails
		return ret
	}).(ServiceInstallTaskDetailsOutput)
}

// Template change log details.
//
// Deprecated: field is not used anymore
func (o ServiceInstallTaskDetailsPtrOutput) ChangeLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *string {
		if v == nil {
			return nil
		}
		return v.ChangeLog
	}).(pulumi.StringPtrOutput)
}

// Set up the server using the provided hostname instead of the default hostname.
func (o ServiceInstallTaskDetailsPtrOutput) CustomHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *string {
		if v == nil {
			return nil
		}
		return v.CustomHostname
	}).(pulumi.StringPtrOutput)
}

// Disk group id.
func (o ServiceInstallTaskDetailsPtrOutput) DiskGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *int {
		if v == nil {
			return nil
		}
		return v.DiskGroupId
	}).(pulumi.IntPtrOutput)
}

// set to true to install RTM.
func (o ServiceInstallTaskDetailsPtrOutput) InstallRtm() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *bool {
		if v == nil {
			return nil
		}
		return v.InstallRtm
	}).(pulumi.BoolPtrOutput)
}

// set to true to install sql server (Windows template only).
func (o ServiceInstallTaskDetailsPtrOutput) InstallSqlServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *bool {
		if v == nil {
			return nil
		}
		return v.InstallSqlServer
	}).(pulumi.BoolPtrOutput)
}

// language.
func (o ServiceInstallTaskDetailsPtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

// set to true to disable RAID.
func (o ServiceInstallTaskDetailsPtrOutput) NoRaid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *bool {
		if v == nil {
			return nil
		}
		return v.NoRaid
	}).(pulumi.BoolPtrOutput)
}

// Indicate the URL where your postinstall customisation script is located.
func (o ServiceInstallTaskDetailsPtrOutput) PostInstallationScriptLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *string {
		if v == nil {
			return nil
		}
		return v.PostInstallationScriptLink
	}).(pulumi.StringPtrOutput)
}

// Indicate the string returned by your postinstall customisation script on successful execution. Advice: your script should return a unique validation string in case of succes. A good example is 'loh1Xee7eo OK OK OK UGh8Ang1Gu'.
func (o ServiceInstallTaskDetailsPtrOutput) PostInstallationScriptReturn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *string {
		if v == nil {
			return nil
		}
		return v.PostInstallationScriptReturn
	}).(pulumi.StringPtrOutput)
}

// set to true to make a hardware raid reset.
func (o ServiceInstallTaskDetailsPtrOutput) ResetHwRaid() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *bool {
		if v == nil {
			return nil
		}
		return v.ResetHwRaid
	}).(pulumi.BoolPtrOutput)
}

// soft raid devices.
func (o ServiceInstallTaskDetailsPtrOutput) SoftRaidDevices() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *int {
		if v == nil {
			return nil
		}
		return v.SoftRaidDevices
	}).(pulumi.IntPtrOutput)
}

// Name of the ssh key that should be installed. Password login will be disabled.
func (o ServiceInstallTaskDetailsPtrOutput) SshKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *string {
		if v == nil {
			return nil
		}
		return v.SshKeyName
	}).(pulumi.StringPtrOutput)
}

// Use the distribution's native kernel instead of the recommended OVHcloud Kernel.
func (o ServiceInstallTaskDetailsPtrOutput) UseDistribKernel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *bool {
		if v == nil {
			return nil
		}
		return v.UseDistribKernel
	}).(pulumi.BoolPtrOutput)
}

// set to true to use SPLA.
func (o ServiceInstallTaskDetailsPtrOutput) UseSpla() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceInstallTaskDetails) *bool {
		if v == nil {
			return nil
		}
		return v.UseSpla
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInstallTaskDetailsInput)(nil)).Elem(), ServiceInstallTaskDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInstallTaskDetailsPtrInput)(nil)).Elem(), ServiceInstallTaskDetailsArgs{})
	pulumi.RegisterOutputType(ServiceInstallTaskDetailsOutput{})
	pulumi.RegisterOutputType(ServiceInstallTaskDetailsPtrOutput{})
}
