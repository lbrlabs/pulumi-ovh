// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the regions of a public cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-ovh/sdk/go/ovh"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.GetCloudProjectRegions(ctx, &GetCloudProjectRegionsArgs{
//				HasServicesUps: []string{
//					"network",
//				},
//				ServiceName: "XXXXXX",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCloudProjectRegions(ctx *pulumi.Context, args *GetCloudProjectRegionsArgs, opts ...pulumi.InvokeOption) (*GetCloudProjectRegionsResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetCloudProjectRegionsResult
	err := ctx.Invoke("ovh:index/getCloudProjectRegions:getCloudProjectRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectRegions.
type GetCloudProjectRegionsArgs struct {
	// List of services which has to be UP in regions.
	// Example: "image", "instance", "network", "storage", "volume", "workflow", ...
	// If left blank, returns all regions associated with the service_name.
	HasServicesUps []string `pulumi:"hasServicesUps"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectRegions.
type GetCloudProjectRegionsResult struct {
	HasServicesUps []string `pulumi:"hasServicesUps"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The list of regions associated with the project, filtered by services UP.
	Names       []string `pulumi:"names"`
	ServiceName string   `pulumi:"serviceName"`
}

func GetCloudProjectRegionsOutput(ctx *pulumi.Context, args GetCloudProjectRegionsOutputArgs, opts ...pulumi.InvokeOption) GetCloudProjectRegionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCloudProjectRegionsResult, error) {
			args := v.(GetCloudProjectRegionsArgs)
			r, err := GetCloudProjectRegions(ctx, &args, opts...)
			var s GetCloudProjectRegionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCloudProjectRegionsResultOutput)
}

// A collection of arguments for invoking getCloudProjectRegions.
type GetCloudProjectRegionsOutputArgs struct {
	// List of services which has to be UP in regions.
	// Example: "image", "instance", "network", "storage", "volume", "workflow", ...
	// If left blank, returns all regions associated with the service_name.
	HasServicesUps pulumi.StringArrayInput `pulumi:"hasServicesUps"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetCloudProjectRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectRegionsArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectRegions.
type GetCloudProjectRegionsResultOutput struct{ *pulumi.OutputState }

func (GetCloudProjectRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectRegionsResult)(nil)).Elem()
}

func (o GetCloudProjectRegionsResultOutput) ToGetCloudProjectRegionsResultOutput() GetCloudProjectRegionsResultOutput {
	return o
}

func (o GetCloudProjectRegionsResultOutput) ToGetCloudProjectRegionsResultOutputWithContext(ctx context.Context) GetCloudProjectRegionsResultOutput {
	return o
}

func (o GetCloudProjectRegionsResultOutput) HasServicesUps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudProjectRegionsResult) []string { return v.HasServicesUps }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudProjectRegionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectRegionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The list of regions associated with the project, filtered by services UP.
func (o GetCloudProjectRegionsResultOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCloudProjectRegionsResult) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetCloudProjectRegionsResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectRegionsResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudProjectRegionsResultOutput{})
}
