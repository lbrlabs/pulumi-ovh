// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "ovh:index/cloudProject:CloudProject":
		r = &CloudProject{}
	case "ovh:index/cloudProjectContainerRegistry:CloudProjectContainerRegistry":
		r = &CloudProjectContainerRegistry{}
	case "ovh:index/cloudProjectContainerRegistryUser:CloudProjectContainerRegistryUser":
		r = &CloudProjectContainerRegistryUser{}
	case "ovh:index/cloudProjectDatabase:CloudProjectDatabase":
		r = &CloudProjectDatabase{}
	case "ovh:index/cloudProjectDatabaseIpRestriction:CloudProjectDatabaseIpRestriction":
		r = &CloudProjectDatabaseIpRestriction{}
	case "ovh:index/cloudProjectDatabasePostgresSqlUser:CloudProjectDatabasePostgresSqlUser":
		r = &CloudProjectDatabasePostgresSqlUser{}
	case "ovh:index/cloudProjectDatabaseUser:CloudProjectDatabaseUser":
		r = &CloudProjectDatabaseUser{}
	case "ovh:index/cloudProjectFailoverIpAttach:CloudProjectFailoverIpAttach":
		r = &CloudProjectFailoverIpAttach{}
	case "ovh:index/cloudProjectKube:CloudProjectKube":
		r = &CloudProjectKube{}
	case "ovh:index/cloudProjectKubeIpRestrictions:CloudProjectKubeIpRestrictions":
		r = &CloudProjectKubeIpRestrictions{}
	case "ovh:index/cloudProjectKubeNodePool:CloudProjectKubeNodePool":
		r = &CloudProjectKubeNodePool{}
	case "ovh:index/cloudProjectKubeOidc:CloudProjectKubeOidc":
		r = &CloudProjectKubeOidc{}
	case "ovh:index/cloudProjectNetworkPrivate:CloudProjectNetworkPrivate":
		r = &CloudProjectNetworkPrivate{}
	case "ovh:index/cloudProjectNetworkPrivateSubnet:CloudProjectNetworkPrivateSubnet":
		r = &CloudProjectNetworkPrivateSubnet{}
	case "ovh:index/cloudProjectUser:CloudProjectUser":
		r = &CloudProjectUser{}
	case "ovh:index/dbaasLogsInput:DbaasLogsInput":
		r = &DbaasLogsInput{}
	case "ovh:index/dbaasLogsOutputGraylogStream:DbaasLogsOutputGraylogStream":
		r = &DbaasLogsOutputGraylogStream{}
	case "ovh:index/dedicatedCephAcl:DedicatedCephAcl":
		r = &DedicatedCephAcl{}
	case "ovh:index/dedicatedServerRebootTask:DedicatedServerRebootTask":
		r = &DedicatedServerRebootTask{}
	case "ovh:index/dedicatedServerUpdate:DedicatedServerUpdate":
		r = &DedicatedServerUpdate{}
	case "ovh:index/dedicatedServiceInstallTask:DedicatedServiceInstallTask":
		r = &DedicatedServiceInstallTask{}
	case "ovh:index/domainZone:DomainZone":
		r = &DomainZone{}
	case "ovh:index/domainZoneRecord:DomainZoneRecord":
		r = &DomainZoneRecord{}
	case "ovh:index/domainZoneRedirection:DomainZoneRedirection":
		r = &DomainZoneRedirection{}
	case "ovh:index/ipLoadBalancing:IpLoadBalancing":
		r = &IpLoadBalancing{}
	case "ovh:index/ipLoadBalancingHttpFarm:IpLoadBalancingHttpFarm":
		r = &IpLoadBalancingHttpFarm{}
	case "ovh:index/ipLoadBalancingHttpFarmServer:IpLoadBalancingHttpFarmServer":
		r = &IpLoadBalancingHttpFarmServer{}
	case "ovh:index/ipLoadBalancingHttpFrontend:IpLoadBalancingHttpFrontend":
		r = &IpLoadBalancingHttpFrontend{}
	case "ovh:index/ipLoadBalancingHttpRoute:IpLoadBalancingHttpRoute":
		r = &IpLoadBalancingHttpRoute{}
	case "ovh:index/ipLoadBalancingHttpRouteRule:IpLoadBalancingHttpRouteRule":
		r = &IpLoadBalancingHttpRouteRule{}
	case "ovh:index/ipLoadBalancingRefresh:IpLoadBalancingRefresh":
		r = &IpLoadBalancingRefresh{}
	case "ovh:index/ipLoadBalancingTcpFarm:IpLoadBalancingTcpFarm":
		r = &IpLoadBalancingTcpFarm{}
	case "ovh:index/ipLoadBalancingTcpFarmServer:IpLoadBalancingTcpFarmServer":
		r = &IpLoadBalancingTcpFarmServer{}
	case "ovh:index/ipLoadBalancingTcpFrontend:IpLoadBalancingTcpFrontend":
		r = &IpLoadBalancingTcpFrontend{}
	case "ovh:index/ipLoadBalancingTcpRoute:IpLoadBalancingTcpRoute":
		r = &IpLoadBalancingTcpRoute{}
	case "ovh:index/ipLoadBalancingTcpRouteRule:IpLoadBalancingTcpRouteRule":
		r = &IpLoadBalancingTcpRouteRule{}
	case "ovh:index/ipLoadBalancingVrackNetwork:IpLoadBalancingVrackNetwork":
		r = &IpLoadBalancingVrackNetwork{}
	case "ovh:index/ipReverse:IpReverse":
		r = &IpReverse{}
	case "ovh:index/ipService:IpService":
		r = &IpService{}
	case "ovh:index/meIdentityUser:MeIdentityUser":
		r = &MeIdentityUser{}
	case "ovh:index/meInstallationTemplatePartitionScheme:MeInstallationTemplatePartitionScheme":
		r = &MeInstallationTemplatePartitionScheme{}
	case "ovh:index/meInstallationTemplatePartitionSchemeHardwareRaid:MeInstallationTemplatePartitionSchemeHardwareRaid":
		r = &MeInstallationTemplatePartitionSchemeHardwareRaid{}
	case "ovh:index/meInstallationTemplatePartitionSchemePartition:MeInstallationTemplatePartitionSchemePartition":
		r = &MeInstallationTemplatePartitionSchemePartition{}
	case "ovh:index/meIpxeScript:MeIpxeScript":
		r = &MeIpxeScript{}
	case "ovh:index/meSshKey:MeSshKey":
		r = &MeSshKey{}
	case "ovh:index/vrack:Vrack":
		r = &Vrack{}
	case "ovh:index/vrackCloudProject:VrackCloudProject":
		r = &VrackCloudProject{}
	case "ovh:index/vrackDedicatedServer:VrackDedicatedServer":
		r = &VrackDedicatedServer{}
	case "ovh:index/vrackDedicatedServerInterface:VrackDedicatedServerInterface":
		r = &VrackDedicatedServerInterface{}
	case "ovh:index/vrackIp:VrackIp":
		r = &VrackIp{}
	case "ovh:index/vrackIpLoadbalancing:VrackIpLoadbalancing":
		r = &VrackIpLoadbalancing{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:ovh" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, _ := PkgVersion()
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProject",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectContainerRegistry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectContainerRegistryUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseIpRestriction",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabasePostgresSqlUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectDatabaseUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectFailoverIpAttach",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectKube",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectKubeIpRestrictions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectKubeNodePool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectKubeOidc",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectNetworkPrivate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectNetworkPrivateSubnet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/cloudProjectUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dbaasLogsInput",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dbaasLogsOutputGraylogStream",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedCephAcl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedServerRebootTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedServerUpdate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/dedicatedServiceInstallTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/domainZone",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/domainZoneRecord",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/domainZoneRedirection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancing",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingHttpFarm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingHttpFarmServer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingHttpFrontend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingHttpRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingHttpRouteRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingRefresh",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingTcpFarm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingTcpFarmServer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingTcpFrontend",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingTcpRoute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingTcpRouteRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipLoadBalancingVrackNetwork",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipReverse",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/ipService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meIdentityUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meInstallationTemplatePartitionScheme",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meInstallationTemplatePartitionSchemeHardwareRaid",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meInstallationTemplatePartitionSchemePartition",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meIpxeScript",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/meSshKey",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrack",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrackCloudProject",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrackDedicatedServer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrackDedicatedServerInterface",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrackIp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"index/vrackIpLoadbalancing",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"ovh",
		&pkg{version},
	)
}
