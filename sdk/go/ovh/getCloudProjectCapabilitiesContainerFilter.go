// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to filter the list of container registry capabilities associated with a public cloud project to match one and only one capability.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.GetCloudProjectCapabilitiesContainerFilter(ctx, &GetCloudProjectCapabilitiesContainerFilterArgs{
//				PlanName:    "SMALL",
//				Region:      "GRA",
//				ServiceName: "XXXXXX",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCloudProjectCapabilitiesContainerFilter(ctx *pulumi.Context, args *GetCloudProjectCapabilitiesContainerFilterArgs, opts ...pulumi.InvokeOption) (*GetCloudProjectCapabilitiesContainerFilterResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetCloudProjectCapabilitiesContainerFilterResult
	err := ctx.Invoke("ovh:index/getCloudProjectCapabilitiesContainerFilter:getCloudProjectCapabilitiesContainerFilter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectCapabilitiesContainerFilter.
type GetCloudProjectCapabilitiesContainerFilterArgs struct {
	// The plan name
	PlanName string `pulumi:"planName"`
	// The region name
	Region string `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectCapabilitiesContainerFilter.
type GetCloudProjectCapabilitiesContainerFilterResult struct {
	// Plan code from the catalog
	Code string `pulumi:"code"`
	// Plan creation date
	CreatedAt string `pulumi:"createdAt"`
	// Features of the plan
	Features []GetCloudProjectCapabilitiesContainerFilterFeature `pulumi:"features"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Plan name
	Name     string `pulumi:"name"`
	PlanName string `pulumi:"planName"`
	Region   string `pulumi:"region"`
	// Container registry limits
	RegistryLimits []GetCloudProjectCapabilitiesContainerFilterRegistryLimit `pulumi:"registryLimits"`
	ServiceName    string                                                    `pulumi:"serviceName"`
	// Plan last update date
	UpdatedAt string `pulumi:"updatedAt"`
}

func GetCloudProjectCapabilitiesContainerFilterOutput(ctx *pulumi.Context, args GetCloudProjectCapabilitiesContainerFilterOutputArgs, opts ...pulumi.InvokeOption) GetCloudProjectCapabilitiesContainerFilterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCloudProjectCapabilitiesContainerFilterResult, error) {
			args := v.(GetCloudProjectCapabilitiesContainerFilterArgs)
			r, err := GetCloudProjectCapabilitiesContainerFilter(ctx, &args, opts...)
			var s GetCloudProjectCapabilitiesContainerFilterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCloudProjectCapabilitiesContainerFilterResultOutput)
}

// A collection of arguments for invoking getCloudProjectCapabilitiesContainerFilter.
type GetCloudProjectCapabilitiesContainerFilterOutputArgs struct {
	// The plan name
	PlanName pulumi.StringInput `pulumi:"planName"`
	// The region name
	Region pulumi.StringInput `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetCloudProjectCapabilitiesContainerFilterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectCapabilitiesContainerFilterArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectCapabilitiesContainerFilter.
type GetCloudProjectCapabilitiesContainerFilterResultOutput struct{ *pulumi.OutputState }

func (GetCloudProjectCapabilitiesContainerFilterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectCapabilitiesContainerFilterResult)(nil)).Elem()
}

func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) ToGetCloudProjectCapabilitiesContainerFilterResultOutput() GetCloudProjectCapabilitiesContainerFilterResultOutput {
	return o
}

func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) ToGetCloudProjectCapabilitiesContainerFilterResultOutputWithContext(ctx context.Context) GetCloudProjectCapabilitiesContainerFilterResultOutput {
	return o
}

// Plan code from the catalog
func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerFilterResult) string { return v.Code }).(pulumi.StringOutput)
}

// Plan creation date
func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerFilterResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Features of the plan
func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) Features() GetCloudProjectCapabilitiesContainerFilterFeatureArrayOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerFilterResult) []GetCloudProjectCapabilitiesContainerFilterFeature {
		return v.Features
	}).(GetCloudProjectCapabilitiesContainerFilterFeatureArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerFilterResult) string { return v.Id }).(pulumi.StringOutput)
}

// Plan name
func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerFilterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerFilterResult) string { return v.PlanName }).(pulumi.StringOutput)
}

func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerFilterResult) string { return v.Region }).(pulumi.StringOutput)
}

// Container registry limits
func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) RegistryLimits() GetCloudProjectCapabilitiesContainerFilterRegistryLimitArrayOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerFilterResult) []GetCloudProjectCapabilitiesContainerFilterRegistryLimit {
		return v.RegistryLimits
	}).(GetCloudProjectCapabilitiesContainerFilterRegistryLimitArrayOutput)
}

func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerFilterResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Plan last update date
func (o GetCloudProjectCapabilitiesContainerFilterResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectCapabilitiesContainerFilterResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudProjectCapabilitiesContainerFilterResultOutput{})
}
