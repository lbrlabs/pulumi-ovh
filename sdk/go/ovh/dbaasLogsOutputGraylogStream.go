// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DbaasLogsOutputGraylogStream struct {
	pulumi.CustomResourceState

	// Indicates if the current user can create alert on the stream
	CanAlert pulumi.BoolOutput `pulumi:"canAlert"`
	// Cold storage compression method
	ColdStorageCompression pulumi.StringOutput `pulumi:"coldStorageCompression"`
	// ColdStorage content
	ColdStorageContent pulumi.StringOutput `pulumi:"coldStorageContent"`
	// Is Cold storage enabled?
	ColdStorageEnabled pulumi.BoolOutput `pulumi:"coldStorageEnabled"`
	// Notify on new Cold storage archive
	ColdStorageNotifyEnabled pulumi.BoolOutput `pulumi:"coldStorageNotifyEnabled"`
	// Cold storage retention in year
	ColdStorageRetention pulumi.IntOutput `pulumi:"coldStorageRetention"`
	// ColdStorage destination
	ColdStorageTarget pulumi.StringOutput `pulumi:"coldStorageTarget"`
	// Stream creation
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Stream description
	Description pulumi.StringOutput `pulumi:"description"`
	// Enable ES indexing
	IndexingEnabled pulumi.BoolOutput `pulumi:"indexingEnabled"`
	// Maximum indexing size (in GB)
	IndexingMaxSize pulumi.IntOutput `pulumi:"indexingMaxSize"`
	// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
	IndexingNotifyEnabled pulumi.BoolOutput `pulumi:"indexingNotifyEnabled"`
	// Indicates if you are allowed to edit entry
	IsEditable pulumi.BoolOutput `pulumi:"isEditable"`
	// Indicates if you are allowed to share entry
	IsShareable pulumi.BoolOutput `pulumi:"isShareable"`
	// Number of alert condition
	NbAlertCondition pulumi.IntOutput `pulumi:"nbAlertCondition"`
	// Number of coldstored archives
	NbArchive pulumi.IntOutput `pulumi:"nbArchive"`
	// Parent stream ID
	ParentStreamId pulumi.StringPtrOutput `pulumi:"parentStreamId"`
	// If set, pause indexing when maximum size is reach
	PauseIndexingOnMaxSize pulumi.BoolOutput `pulumi:"pauseIndexingOnMaxSize"`
	// Retention ID
	RetentionId pulumi.StringOutput `pulumi:"retentionId"`
	// The service name
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Stream ID
	StreamId pulumi.StringOutput `pulumi:"streamId"`
	// Stream description
	Title pulumi.StringOutput `pulumi:"title"`
	// Stream last update
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Enable Websocket
	WebSocketEnabled pulumi.BoolOutput `pulumi:"webSocketEnabled"`
}

// NewDbaasLogsOutputGraylogStream registers a new resource with the given unique name, arguments, and options.
func NewDbaasLogsOutputGraylogStream(ctx *pulumi.Context,
	name string, args *DbaasLogsOutputGraylogStreamArgs, opts ...pulumi.ResourceOption) (*DbaasLogsOutputGraylogStream, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DbaasLogsOutputGraylogStream
	err := ctx.RegisterResource("ovh:index/dbaasLogsOutputGraylogStream:DbaasLogsOutputGraylogStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDbaasLogsOutputGraylogStream gets an existing DbaasLogsOutputGraylogStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDbaasLogsOutputGraylogStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DbaasLogsOutputGraylogStreamState, opts ...pulumi.ResourceOption) (*DbaasLogsOutputGraylogStream, error) {
	var resource DbaasLogsOutputGraylogStream
	err := ctx.ReadResource("ovh:index/dbaasLogsOutputGraylogStream:DbaasLogsOutputGraylogStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DbaasLogsOutputGraylogStream resources.
type dbaasLogsOutputGraylogStreamState struct {
	// Indicates if the current user can create alert on the stream
	CanAlert *bool `pulumi:"canAlert"`
	// Cold storage compression method
	ColdStorageCompression *string `pulumi:"coldStorageCompression"`
	// ColdStorage content
	ColdStorageContent *string `pulumi:"coldStorageContent"`
	// Is Cold storage enabled?
	ColdStorageEnabled *bool `pulumi:"coldStorageEnabled"`
	// Notify on new Cold storage archive
	ColdStorageNotifyEnabled *bool `pulumi:"coldStorageNotifyEnabled"`
	// Cold storage retention in year
	ColdStorageRetention *int `pulumi:"coldStorageRetention"`
	// ColdStorage destination
	ColdStorageTarget *string `pulumi:"coldStorageTarget"`
	// Stream creation
	CreatedAt *string `pulumi:"createdAt"`
	// Stream description
	Description *string `pulumi:"description"`
	// Enable ES indexing
	IndexingEnabled *bool `pulumi:"indexingEnabled"`
	// Maximum indexing size (in GB)
	IndexingMaxSize *int `pulumi:"indexingMaxSize"`
	// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
	IndexingNotifyEnabled *bool `pulumi:"indexingNotifyEnabled"`
	// Indicates if you are allowed to edit entry
	IsEditable *bool `pulumi:"isEditable"`
	// Indicates if you are allowed to share entry
	IsShareable *bool `pulumi:"isShareable"`
	// Number of alert condition
	NbAlertCondition *int `pulumi:"nbAlertCondition"`
	// Number of coldstored archives
	NbArchive *int `pulumi:"nbArchive"`
	// Parent stream ID
	ParentStreamId *string `pulumi:"parentStreamId"`
	// If set, pause indexing when maximum size is reach
	PauseIndexingOnMaxSize *bool `pulumi:"pauseIndexingOnMaxSize"`
	// Retention ID
	RetentionId *string `pulumi:"retentionId"`
	// The service name
	ServiceName *string `pulumi:"serviceName"`
	// Stream ID
	StreamId *string `pulumi:"streamId"`
	// Stream description
	Title *string `pulumi:"title"`
	// Stream last update
	UpdatedAt *string `pulumi:"updatedAt"`
	// Enable Websocket
	WebSocketEnabled *bool `pulumi:"webSocketEnabled"`
}

type DbaasLogsOutputGraylogStreamState struct {
	// Indicates if the current user can create alert on the stream
	CanAlert pulumi.BoolPtrInput
	// Cold storage compression method
	ColdStorageCompression pulumi.StringPtrInput
	// ColdStorage content
	ColdStorageContent pulumi.StringPtrInput
	// Is Cold storage enabled?
	ColdStorageEnabled pulumi.BoolPtrInput
	// Notify on new Cold storage archive
	ColdStorageNotifyEnabled pulumi.BoolPtrInput
	// Cold storage retention in year
	ColdStorageRetention pulumi.IntPtrInput
	// ColdStorage destination
	ColdStorageTarget pulumi.StringPtrInput
	// Stream creation
	CreatedAt pulumi.StringPtrInput
	// Stream description
	Description pulumi.StringPtrInput
	// Enable ES indexing
	IndexingEnabled pulumi.BoolPtrInput
	// Maximum indexing size (in GB)
	IndexingMaxSize pulumi.IntPtrInput
	// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
	IndexingNotifyEnabled pulumi.BoolPtrInput
	// Indicates if you are allowed to edit entry
	IsEditable pulumi.BoolPtrInput
	// Indicates if you are allowed to share entry
	IsShareable pulumi.BoolPtrInput
	// Number of alert condition
	NbAlertCondition pulumi.IntPtrInput
	// Number of coldstored archives
	NbArchive pulumi.IntPtrInput
	// Parent stream ID
	ParentStreamId pulumi.StringPtrInput
	// If set, pause indexing when maximum size is reach
	PauseIndexingOnMaxSize pulumi.BoolPtrInput
	// Retention ID
	RetentionId pulumi.StringPtrInput
	// The service name
	ServiceName pulumi.StringPtrInput
	// Stream ID
	StreamId pulumi.StringPtrInput
	// Stream description
	Title pulumi.StringPtrInput
	// Stream last update
	UpdatedAt pulumi.StringPtrInput
	// Enable Websocket
	WebSocketEnabled pulumi.BoolPtrInput
}

func (DbaasLogsOutputGraylogStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbaasLogsOutputGraylogStreamState)(nil)).Elem()
}

type dbaasLogsOutputGraylogStreamArgs struct {
	// Cold storage compression method
	ColdStorageCompression *string `pulumi:"coldStorageCompression"`
	// ColdStorage content
	ColdStorageContent *string `pulumi:"coldStorageContent"`
	// Is Cold storage enabled?
	ColdStorageEnabled *bool `pulumi:"coldStorageEnabled"`
	// Notify on new Cold storage archive
	ColdStorageNotifyEnabled *bool `pulumi:"coldStorageNotifyEnabled"`
	// Cold storage retention in year
	ColdStorageRetention *int `pulumi:"coldStorageRetention"`
	// ColdStorage destination
	ColdStorageTarget *string `pulumi:"coldStorageTarget"`
	// Stream description
	Description string `pulumi:"description"`
	// Enable ES indexing
	IndexingEnabled *bool `pulumi:"indexingEnabled"`
	// Maximum indexing size (in GB)
	IndexingMaxSize *int `pulumi:"indexingMaxSize"`
	// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
	IndexingNotifyEnabled *bool `pulumi:"indexingNotifyEnabled"`
	// Parent stream ID
	ParentStreamId *string `pulumi:"parentStreamId"`
	// If set, pause indexing when maximum size is reach
	PauseIndexingOnMaxSize *bool `pulumi:"pauseIndexingOnMaxSize"`
	// Retention ID
	RetentionId *string `pulumi:"retentionId"`
	// The service name
	ServiceName string `pulumi:"serviceName"`
	// Stream description
	Title string `pulumi:"title"`
	// Enable Websocket
	WebSocketEnabled *bool `pulumi:"webSocketEnabled"`
}

// The set of arguments for constructing a DbaasLogsOutputGraylogStream resource.
type DbaasLogsOutputGraylogStreamArgs struct {
	// Cold storage compression method
	ColdStorageCompression pulumi.StringPtrInput
	// ColdStorage content
	ColdStorageContent pulumi.StringPtrInput
	// Is Cold storage enabled?
	ColdStorageEnabled pulumi.BoolPtrInput
	// Notify on new Cold storage archive
	ColdStorageNotifyEnabled pulumi.BoolPtrInput
	// Cold storage retention in year
	ColdStorageRetention pulumi.IntPtrInput
	// ColdStorage destination
	ColdStorageTarget pulumi.StringPtrInput
	// Stream description
	Description pulumi.StringInput
	// Enable ES indexing
	IndexingEnabled pulumi.BoolPtrInput
	// Maximum indexing size (in GB)
	IndexingMaxSize pulumi.IntPtrInput
	// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
	IndexingNotifyEnabled pulumi.BoolPtrInput
	// Parent stream ID
	ParentStreamId pulumi.StringPtrInput
	// If set, pause indexing when maximum size is reach
	PauseIndexingOnMaxSize pulumi.BoolPtrInput
	// Retention ID
	RetentionId pulumi.StringPtrInput
	// The service name
	ServiceName pulumi.StringInput
	// Stream description
	Title pulumi.StringInput
	// Enable Websocket
	WebSocketEnabled pulumi.BoolPtrInput
}

func (DbaasLogsOutputGraylogStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbaasLogsOutputGraylogStreamArgs)(nil)).Elem()
}

type DbaasLogsOutputGraylogStreamInput interface {
	pulumi.Input

	ToDbaasLogsOutputGraylogStreamOutput() DbaasLogsOutputGraylogStreamOutput
	ToDbaasLogsOutputGraylogStreamOutputWithContext(ctx context.Context) DbaasLogsOutputGraylogStreamOutput
}

func (*DbaasLogsOutputGraylogStream) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasLogsOutputGraylogStream)(nil)).Elem()
}

func (i *DbaasLogsOutputGraylogStream) ToDbaasLogsOutputGraylogStreamOutput() DbaasLogsOutputGraylogStreamOutput {
	return i.ToDbaasLogsOutputGraylogStreamOutputWithContext(context.Background())
}

func (i *DbaasLogsOutputGraylogStream) ToDbaasLogsOutputGraylogStreamOutputWithContext(ctx context.Context) DbaasLogsOutputGraylogStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasLogsOutputGraylogStreamOutput)
}

// DbaasLogsOutputGraylogStreamArrayInput is an input type that accepts DbaasLogsOutputGraylogStreamArray and DbaasLogsOutputGraylogStreamArrayOutput values.
// You can construct a concrete instance of `DbaasLogsOutputGraylogStreamArrayInput` via:
//
//	DbaasLogsOutputGraylogStreamArray{ DbaasLogsOutputGraylogStreamArgs{...} }
type DbaasLogsOutputGraylogStreamArrayInput interface {
	pulumi.Input

	ToDbaasLogsOutputGraylogStreamArrayOutput() DbaasLogsOutputGraylogStreamArrayOutput
	ToDbaasLogsOutputGraylogStreamArrayOutputWithContext(context.Context) DbaasLogsOutputGraylogStreamArrayOutput
}

type DbaasLogsOutputGraylogStreamArray []DbaasLogsOutputGraylogStreamInput

func (DbaasLogsOutputGraylogStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbaasLogsOutputGraylogStream)(nil)).Elem()
}

func (i DbaasLogsOutputGraylogStreamArray) ToDbaasLogsOutputGraylogStreamArrayOutput() DbaasLogsOutputGraylogStreamArrayOutput {
	return i.ToDbaasLogsOutputGraylogStreamArrayOutputWithContext(context.Background())
}

func (i DbaasLogsOutputGraylogStreamArray) ToDbaasLogsOutputGraylogStreamArrayOutputWithContext(ctx context.Context) DbaasLogsOutputGraylogStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasLogsOutputGraylogStreamArrayOutput)
}

// DbaasLogsOutputGraylogStreamMapInput is an input type that accepts DbaasLogsOutputGraylogStreamMap and DbaasLogsOutputGraylogStreamMapOutput values.
// You can construct a concrete instance of `DbaasLogsOutputGraylogStreamMapInput` via:
//
//	DbaasLogsOutputGraylogStreamMap{ "key": DbaasLogsOutputGraylogStreamArgs{...} }
type DbaasLogsOutputGraylogStreamMapInput interface {
	pulumi.Input

	ToDbaasLogsOutputGraylogStreamMapOutput() DbaasLogsOutputGraylogStreamMapOutput
	ToDbaasLogsOutputGraylogStreamMapOutputWithContext(context.Context) DbaasLogsOutputGraylogStreamMapOutput
}

type DbaasLogsOutputGraylogStreamMap map[string]DbaasLogsOutputGraylogStreamInput

func (DbaasLogsOutputGraylogStreamMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbaasLogsOutputGraylogStream)(nil)).Elem()
}

func (i DbaasLogsOutputGraylogStreamMap) ToDbaasLogsOutputGraylogStreamMapOutput() DbaasLogsOutputGraylogStreamMapOutput {
	return i.ToDbaasLogsOutputGraylogStreamMapOutputWithContext(context.Background())
}

func (i DbaasLogsOutputGraylogStreamMap) ToDbaasLogsOutputGraylogStreamMapOutputWithContext(ctx context.Context) DbaasLogsOutputGraylogStreamMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DbaasLogsOutputGraylogStreamMapOutput)
}

type DbaasLogsOutputGraylogStreamOutput struct{ *pulumi.OutputState }

func (DbaasLogsOutputGraylogStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DbaasLogsOutputGraylogStream)(nil)).Elem()
}

func (o DbaasLogsOutputGraylogStreamOutput) ToDbaasLogsOutputGraylogStreamOutput() DbaasLogsOutputGraylogStreamOutput {
	return o
}

func (o DbaasLogsOutputGraylogStreamOutput) ToDbaasLogsOutputGraylogStreamOutputWithContext(ctx context.Context) DbaasLogsOutputGraylogStreamOutput {
	return o
}

// Indicates if the current user can create alert on the stream
func (o DbaasLogsOutputGraylogStreamOutput) CanAlert() pulumi.BoolOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.BoolOutput { return v.CanAlert }).(pulumi.BoolOutput)
}

// Cold storage compression method
func (o DbaasLogsOutputGraylogStreamOutput) ColdStorageCompression() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringOutput { return v.ColdStorageCompression }).(pulumi.StringOutput)
}

// ColdStorage content
func (o DbaasLogsOutputGraylogStreamOutput) ColdStorageContent() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringOutput { return v.ColdStorageContent }).(pulumi.StringOutput)
}

// Is Cold storage enabled?
func (o DbaasLogsOutputGraylogStreamOutput) ColdStorageEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.BoolOutput { return v.ColdStorageEnabled }).(pulumi.BoolOutput)
}

// Notify on new Cold storage archive
func (o DbaasLogsOutputGraylogStreamOutput) ColdStorageNotifyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.BoolOutput { return v.ColdStorageNotifyEnabled }).(pulumi.BoolOutput)
}

// Cold storage retention in year
func (o DbaasLogsOutputGraylogStreamOutput) ColdStorageRetention() pulumi.IntOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.IntOutput { return v.ColdStorageRetention }).(pulumi.IntOutput)
}

// ColdStorage destination
func (o DbaasLogsOutputGraylogStreamOutput) ColdStorageTarget() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringOutput { return v.ColdStorageTarget }).(pulumi.StringOutput)
}

// Stream creation
func (o DbaasLogsOutputGraylogStreamOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Stream description
func (o DbaasLogsOutputGraylogStreamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Enable ES indexing
func (o DbaasLogsOutputGraylogStreamOutput) IndexingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.BoolOutput { return v.IndexingEnabled }).(pulumi.BoolOutput)
}

// Maximum indexing size (in GB)
func (o DbaasLogsOutputGraylogStreamOutput) IndexingMaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.IntOutput { return v.IndexingMaxSize }).(pulumi.IntOutput)
}

// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
func (o DbaasLogsOutputGraylogStreamOutput) IndexingNotifyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.BoolOutput { return v.IndexingNotifyEnabled }).(pulumi.BoolOutput)
}

// Indicates if you are allowed to edit entry
func (o DbaasLogsOutputGraylogStreamOutput) IsEditable() pulumi.BoolOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.BoolOutput { return v.IsEditable }).(pulumi.BoolOutput)
}

// Indicates if you are allowed to share entry
func (o DbaasLogsOutputGraylogStreamOutput) IsShareable() pulumi.BoolOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.BoolOutput { return v.IsShareable }).(pulumi.BoolOutput)
}

// Number of alert condition
func (o DbaasLogsOutputGraylogStreamOutput) NbAlertCondition() pulumi.IntOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.IntOutput { return v.NbAlertCondition }).(pulumi.IntOutput)
}

// Number of coldstored archives
func (o DbaasLogsOutputGraylogStreamOutput) NbArchive() pulumi.IntOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.IntOutput { return v.NbArchive }).(pulumi.IntOutput)
}

// Parent stream ID
func (o DbaasLogsOutputGraylogStreamOutput) ParentStreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringPtrOutput { return v.ParentStreamId }).(pulumi.StringPtrOutput)
}

// If set, pause indexing when maximum size is reach
func (o DbaasLogsOutputGraylogStreamOutput) PauseIndexingOnMaxSize() pulumi.BoolOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.BoolOutput { return v.PauseIndexingOnMaxSize }).(pulumi.BoolOutput)
}

// Retention ID
func (o DbaasLogsOutputGraylogStreamOutput) RetentionId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringOutput { return v.RetentionId }).(pulumi.StringOutput)
}

// The service name
func (o DbaasLogsOutputGraylogStreamOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Stream ID
func (o DbaasLogsOutputGraylogStreamOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringOutput { return v.StreamId }).(pulumi.StringOutput)
}

// Stream description
func (o DbaasLogsOutputGraylogStreamOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

// Stream last update
func (o DbaasLogsOutputGraylogStreamOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Enable Websocket
func (o DbaasLogsOutputGraylogStreamOutput) WebSocketEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DbaasLogsOutputGraylogStream) pulumi.BoolOutput { return v.WebSocketEnabled }).(pulumi.BoolOutput)
}

type DbaasLogsOutputGraylogStreamArrayOutput struct{ *pulumi.OutputState }

func (DbaasLogsOutputGraylogStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DbaasLogsOutputGraylogStream)(nil)).Elem()
}

func (o DbaasLogsOutputGraylogStreamArrayOutput) ToDbaasLogsOutputGraylogStreamArrayOutput() DbaasLogsOutputGraylogStreamArrayOutput {
	return o
}

func (o DbaasLogsOutputGraylogStreamArrayOutput) ToDbaasLogsOutputGraylogStreamArrayOutputWithContext(ctx context.Context) DbaasLogsOutputGraylogStreamArrayOutput {
	return o
}

func (o DbaasLogsOutputGraylogStreamArrayOutput) Index(i pulumi.IntInput) DbaasLogsOutputGraylogStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DbaasLogsOutputGraylogStream {
		return vs[0].([]*DbaasLogsOutputGraylogStream)[vs[1].(int)]
	}).(DbaasLogsOutputGraylogStreamOutput)
}

type DbaasLogsOutputGraylogStreamMapOutput struct{ *pulumi.OutputState }

func (DbaasLogsOutputGraylogStreamMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DbaasLogsOutputGraylogStream)(nil)).Elem()
}

func (o DbaasLogsOutputGraylogStreamMapOutput) ToDbaasLogsOutputGraylogStreamMapOutput() DbaasLogsOutputGraylogStreamMapOutput {
	return o
}

func (o DbaasLogsOutputGraylogStreamMapOutput) ToDbaasLogsOutputGraylogStreamMapOutputWithContext(ctx context.Context) DbaasLogsOutputGraylogStreamMapOutput {
	return o
}

func (o DbaasLogsOutputGraylogStreamMapOutput) MapIndex(k pulumi.StringInput) DbaasLogsOutputGraylogStreamOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DbaasLogsOutputGraylogStream {
		return vs[0].(map[string]*DbaasLogsOutputGraylogStream)[vs[1].(string)]
	}).(DbaasLogsOutputGraylogStreamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasLogsOutputGraylogStreamInput)(nil)).Elem(), &DbaasLogsOutputGraylogStream{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasLogsOutputGraylogStreamArrayInput)(nil)).Elem(), DbaasLogsOutputGraylogStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DbaasLogsOutputGraylogStreamMapInput)(nil)).Elem(), DbaasLogsOutputGraylogStreamMap{})
	pulumi.RegisterOutputType(DbaasLogsOutputGraylogStreamOutput{})
	pulumi.RegisterOutputType(DbaasLogsOutputGraylogStreamArrayOutput{})
	pulumi.RegisterOutputType(DbaasLogsOutputGraylogStreamMapOutput{})
}
