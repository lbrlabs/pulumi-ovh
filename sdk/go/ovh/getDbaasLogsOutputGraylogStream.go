// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about a DBaas logs output graylog stream.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lbrlabs/pulumi-ovh/sdk/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.LookupDbaasLogsOutputGraylogStream(ctx, &GetDbaasLogsOutputGraylogStreamArgs{
//				ServiceName: "XXXXXX",
//				Title:       "my stream",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDbaasLogsOutputGraylogStream(ctx *pulumi.Context, args *LookupDbaasLogsOutputGraylogStreamArgs, opts ...pulumi.InvokeOption) (*LookupDbaasLogsOutputGraylogStreamResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupDbaasLogsOutputGraylogStreamResult
	err := ctx.Invoke("ovh:index/getDbaasLogsOutputGraylogStream:getDbaasLogsOutputGraylogStream", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbaasLogsOutputGraylogStream.
type LookupDbaasLogsOutputGraylogStreamArgs struct {
	// The service name
	ServiceName string `pulumi:"serviceName"`
	// Stream description
	Title string `pulumi:"title"`
}

// A collection of values returned by getDbaasLogsOutputGraylogStream.
type LookupDbaasLogsOutputGraylogStreamResult struct {
	CanAlert bool `pulumi:"canAlert"`
	// Cold storage compression method
	ColdStorageCompression string `pulumi:"coldStorageCompression"`
	// ColdStorage content
	ColdStorageContent string `pulumi:"coldStorageContent"`
	// Is Cold storage enabled?
	ColdStorageEnabled bool `pulumi:"coldStorageEnabled"`
	// Notify on new Cold storage archive
	ColdStorageNotifyEnabled bool `pulumi:"coldStorageNotifyEnabled"`
	// Cold storage retention in year
	ColdStorageRetention int `pulumi:"coldStorageRetention"`
	// ColdStorage destination
	ColdStorageTarget string `pulumi:"coldStorageTarget"`
	// Stream creation
	CreatedAt string `pulumi:"createdAt"`
	// Stream description
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Enable ES indexing
	IndexingEnabled bool `pulumi:"indexingEnabled"`
	// Maximum indexing size (in GB)
	IndexingMaxSize int `pulumi:"indexingMaxSize"`
	// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
	IndexingNotifyEnabled bool `pulumi:"indexingNotifyEnabled"`
	// Indicates if you are allowed to edit entry
	IsEditable bool `pulumi:"isEditable"`
	// Indicates if you are allowed to share entry
	IsShareable bool `pulumi:"isShareable"`
	// Number of alert condition
	NbAlertCondition int `pulumi:"nbAlertCondition"`
	// Number of coldstored archives
	NbArchive int `pulumi:"nbArchive"`
	// Parent stream ID
	ParentStreamId string `pulumi:"parentStreamId"`
	// If set, pause indexing when maximum size is reach
	PauseIndexingOnMaxSize bool `pulumi:"pauseIndexingOnMaxSize"`
	// Retention ID
	RetentionId string `pulumi:"retentionId"`
	ServiceName string `pulumi:"serviceName"`
	// Stream ID
	StreamId string `pulumi:"streamId"`
	Title    string `pulumi:"title"`
	// Stream last update
	UpdatedAt string `pulumi:"updatedAt"`
	// Enable Websocket
	WebSocketEnabled string `pulumi:"webSocketEnabled"`
}

func LookupDbaasLogsOutputGraylogStreamOutput(ctx *pulumi.Context, args LookupDbaasLogsOutputGraylogStreamOutputArgs, opts ...pulumi.InvokeOption) LookupDbaasLogsOutputGraylogStreamResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDbaasLogsOutputGraylogStreamResult, error) {
			args := v.(LookupDbaasLogsOutputGraylogStreamArgs)
			r, err := LookupDbaasLogsOutputGraylogStream(ctx, &args, opts...)
			var s LookupDbaasLogsOutputGraylogStreamResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDbaasLogsOutputGraylogStreamResultOutput)
}

// A collection of arguments for invoking getDbaasLogsOutputGraylogStream.
type LookupDbaasLogsOutputGraylogStreamOutputArgs struct {
	// The service name
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// Stream description
	Title pulumi.StringInput `pulumi:"title"`
}

func (LookupDbaasLogsOutputGraylogStreamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbaasLogsOutputGraylogStreamArgs)(nil)).Elem()
}

// A collection of values returned by getDbaasLogsOutputGraylogStream.
type LookupDbaasLogsOutputGraylogStreamResultOutput struct{ *pulumi.OutputState }

func (LookupDbaasLogsOutputGraylogStreamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbaasLogsOutputGraylogStreamResult)(nil)).Elem()
}

func (o LookupDbaasLogsOutputGraylogStreamResultOutput) ToLookupDbaasLogsOutputGraylogStreamResultOutput() LookupDbaasLogsOutputGraylogStreamResultOutput {
	return o
}

func (o LookupDbaasLogsOutputGraylogStreamResultOutput) ToLookupDbaasLogsOutputGraylogStreamResultOutputWithContext(ctx context.Context) LookupDbaasLogsOutputGraylogStreamResultOutput {
	return o
}

func (o LookupDbaasLogsOutputGraylogStreamResultOutput) CanAlert() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) bool { return v.CanAlert }).(pulumi.BoolOutput)
}

// Cold storage compression method
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) ColdStorageCompression() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.ColdStorageCompression }).(pulumi.StringOutput)
}

// ColdStorage content
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) ColdStorageContent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.ColdStorageContent }).(pulumi.StringOutput)
}

// Is Cold storage enabled?
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) ColdStorageEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) bool { return v.ColdStorageEnabled }).(pulumi.BoolOutput)
}

// Notify on new Cold storage archive
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) ColdStorageNotifyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) bool { return v.ColdStorageNotifyEnabled }).(pulumi.BoolOutput)
}

// Cold storage retention in year
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) ColdStorageRetention() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) int { return v.ColdStorageRetention }).(pulumi.IntOutput)
}

// ColdStorage destination
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) ColdStorageTarget() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.ColdStorageTarget }).(pulumi.StringOutput)
}

// Stream creation
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Stream description
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.Id }).(pulumi.StringOutput)
}

// Enable ES indexing
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) IndexingEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) bool { return v.IndexingEnabled }).(pulumi.BoolOutput)
}

// Maximum indexing size (in GB)
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) IndexingMaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) int { return v.IndexingMaxSize }).(pulumi.IntOutput)
}

// If set, notify when size is near 80, 90 or 100 % of the maximum configured setting
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) IndexingNotifyEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) bool { return v.IndexingNotifyEnabled }).(pulumi.BoolOutput)
}

// Indicates if you are allowed to edit entry
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) IsEditable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) bool { return v.IsEditable }).(pulumi.BoolOutput)
}

// Indicates if you are allowed to share entry
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) IsShareable() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) bool { return v.IsShareable }).(pulumi.BoolOutput)
}

// Number of alert condition
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) NbAlertCondition() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) int { return v.NbAlertCondition }).(pulumi.IntOutput)
}

// Number of coldstored archives
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) NbArchive() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) int { return v.NbArchive }).(pulumi.IntOutput)
}

// Parent stream ID
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) ParentStreamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.ParentStreamId }).(pulumi.StringOutput)
}

// If set, pause indexing when maximum size is reach
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) PauseIndexingOnMaxSize() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) bool { return v.PauseIndexingOnMaxSize }).(pulumi.BoolOutput)
}

// Retention ID
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) RetentionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.RetentionId }).(pulumi.StringOutput)
}

func (o LookupDbaasLogsOutputGraylogStreamResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Stream ID
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.StreamId }).(pulumi.StringOutput)
}

func (o LookupDbaasLogsOutputGraylogStreamResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.Title }).(pulumi.StringOutput)
}

// Stream last update
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Enable Websocket
func (o LookupDbaasLogsOutputGraylogStreamResultOutput) WebSocketEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbaasLogsOutputGraylogStreamResult) string { return v.WebSocketEnabled }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDbaasLogsOutputGraylogStreamResultOutput{})
}
